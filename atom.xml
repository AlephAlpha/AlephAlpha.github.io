<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>锑星杂记</title>
  
  <subtitle>AlephAlpha 写的一些乱七八糟的东西</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://AlephAlpha.github.io/"/>
  <updated>2019-03-13T04:23:33.409Z</updated>
  <id>https://AlephAlpha.github.io/</id>
  
  <author>
    <name>AlephAlpha</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>测试在 Hexo 中插入 LifeViewer</title>
    <link href="https://AlephAlpha.github.io/2019/03/12/test/"/>
    <id>https://AlephAlpha.github.io/2019/03/12/test/</id>
    <published>2019-03-12T13:03:21.000Z</published>
    <updated>2019-03-13T04:23:33.409Z</updated>
    
    <content type="html"><![CDATA[<p>测试在 Hexo 中插入 LifeViewer。</p><div class="rle"><pre>x = 59, y = 7, rule = B3/S23o5b5ob5ob5obo3bob5ob5obobobob5ob4o$o7bo3bo5bo5bo3bo3bo3bo5bobobobo5bo3bo$o7bo3bo5bo5bo3bo3bo3bo5bobobobo5bo3bo$o7bo3b3o3b3o3bo3bo3bo3b3o3bobobob3o3b4o$o7bo3bo5bo5bo3bo3bo3bo5bobobobo5bo3bo$o7bo3bo5bo6bobo4bo3bo5bobobobo5bo3bo$5ob5obo5b5o3bo3b5ob5o2bobo2b5obo3bo!#C [[ COLOUR DEAD 0 0 0 COLOUR ALIVE 0 0 0 ]]#C [[ LOOP 1101 STARS NOSTEPBACK ]]#C [[ AUTOSTART X -90 Y 60 LAYERS 6 ZOOM 4 DEPTH 3 ]]#C [[ PAUSE 3 X 90 Y -60 ANGLE 20 THEME 0 ]]#C [[ PAUSE 1.5 X 90 Y 60 ANGLE 340 ZOOM 6 ]]#C [[ PAUSE 1.5 X 0 Y 0 ANGLE 0 THEME 3 ZOOM 4 ]]#C [[ PAUSE 1 X 0 DEPTH 0.2 ZOOM 6 THEME 4 ]]#C [[ T 1 THEME 7 ]]#C [[ T 400 ZOOM 5 X 5 Y -10 THEME 2 ]]#C [[ T 450 DEPTH 5 ]]#C [[ T 560 X -155 Y 127 DEPTH 0.5 ]]#C [[ T 950 X -242 Y 214 ANGLE 20 ]]#C [[ T 1050 DEPTH 0 ANGLE 0 AUTOFIT "#T" ]]#C [[ T 1100 X 0 Y 0 ZOOM 0.25 THEME CUSTOM ]]</pre><canvas width="480" height="480"></canvas></div><a id="more"></a><p><a href="http://www.conwaylife.com/wiki/LifeViewer" target="_blank" rel="noopener">LifeViewer</a> 是 Chris Rowett 写的一个在线版的生命游戏模拟器，功能十分强大，支持的规则很多，还可以通过脚本来控制其速度和视角。</p><p>我修改了一下 Hexo 的 <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">NexT</a> 主题，使得可以在文章中方便地插入 LifeViewer。</p><p>只需要修改了 NexT 主题的三个地方：</p><p>首先，下载 <a href="http://www.conwaylife.com/forums/styles/prosilver/template/lv-plugin.js" target="_blank" rel="noopener">lv-plugin.js</a>，放到 <code>source/js/src/</code> 文件夹。</p><p>然后，在 <code>scripts/tags/</code> 文件夹中放进这么一个扩展名为 <code>.js</code> 的文件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lifeViewer</span>(<span class="params">args, content</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;div class="rle"&gt;&lt;pre&gt;<span class="subst">$&#123;content&#125;</span>&lt;/pre&gt;&lt;canvas width="480" height="480"&gt;&lt;/canvas&gt;&lt;/div&gt;`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hexo.extend.tag.register(<span class="string">'lifeviewer'</span>, lifeViewer, &#123;<span class="attr">ends</span>: <span class="literal">true</span>&#125;);</span><br></pre></td></tr></table></figure><p>最后，在 <code>layout/_custom/head.swig</code> 文件中插入这么两行（参见<a href="http://www.conwaylife.com/forums/viewtopic.php?f=3&amp;t=1622#p17014" target="_blank" rel="noopener">此处</a>）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"LifeViewer"</span> <span class="attr">content</span>=<span class="string">"rle pre 37 hide limit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; url_for(theme.js) &#125;&#125;/src/lv-plugin.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后就能用了。比如说，要在文章中插入一架滑翔机，只需要在 MarkDown 中插入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% lifeviewer %&#125;</span><br><span class="line">x = 3, y = 3, rule = B3/S23</span><br><span class="line">bob$2bo$3o!</span><br><span class="line">&#123;% endlifeviewer %&#125;</span><br></pre></td></tr></table></figure><p>效果如下：</p><div class="rle"><pre>x = 3, y = 3, rule = B3/S23bob$2bo$3o!</pre><canvas width="480" height="480"></canvas></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;测试在 Hexo 中插入 LifeViewer。&lt;/p&gt;
&lt;div class=&quot;rle&quot;&gt;&lt;pre&gt;x = 59, y = 7, rule = B3/S23
o5b5ob5ob5obo3bob5ob5obobobob5ob4o$o7bo3bo5bo5bo3bo3bo3bo5bobobobo5bo
3bo$o7bo3bo5bo5bo3bo3bo3bo5bobobobo5bo3bo$o7bo3b3o3b3o3bo3bo3bo3b3o3bo
bobob3o3b4o$o7bo3bo5bo5bo3bo3bo3bo5bobobobo5bo3bo$o7bo3bo5bo6bobo4bo3b
o5bobobobo5bo3bo$5ob5obo5b5o3bo3b5ob5o2bobo2b5obo3bo!
#C [[ COLOUR DEAD 0 0 0 COLOUR ALIVE 0 0 0 ]]
#C [[ LOOP 1101 STARS NOSTEPBACK ]]
#C [[ AUTOSTART X -90 Y 60 LAYERS 6 ZOOM 4 DEPTH 3 ]]
#C [[ PAUSE 3 X 90 Y -60 ANGLE 20 THEME 0 ]]
#C [[ PAUSE 1.5 X 90 Y 60 ANGLE 340 ZOOM 6 ]]
#C [[ PAUSE 1.5 X 0 Y 0 ANGLE 0 THEME 3 ZOOM 4 ]]
#C [[ PAUSE 1 X 0 DEPTH 0.2 ZOOM 6 THEME 4 ]]
#C [[ T 1 THEME 7 ]]
#C [[ T 400 ZOOM 5 X 5 Y -10 THEME 2 ]]
#C [[ T 450 DEPTH 5 ]]
#C [[ T 560 X -155 Y 127 DEPTH 0.5 ]]
#C [[ T 950 X -242 Y 214 ANGLE 20 ]]
#C [[ T 1050 DEPTH 0 ANGLE 0 AUTOFIT &quot;#T&quot; ]]
#C [[ T 1100 X 0 Y 0 ZOOM 0.25 THEME CUSTOM ]]&lt;/pre&gt;&lt;canvas width=&quot;480&quot; height=&quot;480&quot;&gt;&lt;/canvas&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="生命游戏" scheme="https://AlephAlpha.github.io/tags/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>用 Mathematica 搜索生命游戏中的静物（三）</title>
    <link href="https://AlephAlpha.github.io/2019/03/04/%E7%94%A8-Mathematica-%E6%90%9C%E7%B4%A2%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F%E4%B8%AD%E7%9A%84%E9%9D%99%E7%89%A9%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>https://AlephAlpha.github.io/2019/03/04/用-Mathematica-搜索生命游戏中的静物（三）/</id>
    <published>2019-03-04T08:44:00.000Z</published>
    <updated>2019-03-13T04:28:07.907Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="/2017/11/06/用-Mathematica-搜索生命游戏中的静物/" title="用 Mathematica 搜索生命游戏中的静物">用 Mathematica 搜索生命游戏中的静物</a></li><li><a href="/2018/05/13/用-Mathematica-搜索生命游戏中的静物（二）/" title="用 Mathematica 搜索生命游戏中的静物（二）">用 Mathematica 搜索生命游戏中的静物（二）</a></li></ul><hr><p>我把《<a href="/2018/05/13/用-Mathematica-搜索生命游戏中的静物（二）/" title="用 Mathematica 搜索生命游戏中的静物（二）">用 Mathematica 搜索生命游戏中的静物（二）</a>》里的代码整理了一下，写成了个叫做 LifeFind 的 Mathematica 包。现在它支持不同的规则和对称性，可以搜索静物之外的图样，但搜索速度并没有提高。可以在<a href="https://github.com/AlephAlpha/LifeFind" target="_blank" rel="noopener">这里</a>下载。</p><p>需要强调的是，我之所以用 SAT，不是因为它是最好/最快的办法，而是因为我完全不懂算法，只能用 Mathematica 里现成的函数。</p><p>以下是这个包的一些使用范例 ：</p><a id="more"></a><hr><p>搜索之前记得<a href="https://github.com/AlephAlpha/LifeFind/wiki/%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%AE%89%E8%A3%85" target="_blank" rel="noopener">下载与安装</a>，并用以下命令来加载这个包：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;&lt;Life`</span><br></pre></td></tr></table></figure><p>LifeFind 的搜索是随机的，同样的搜索可能会得到不同的结果。为了确保以下范例的可重复性，我用以下的命令将每次搜索时的<a href="https://en.wikipedia.org/wiki/Random_seed" target="_blank" rel="noopener">随机种子</a>设为 233，顺便用 <a href="https://reference.wolfram.com/language/ref/Timing.html" target="_blank" rel="noopener"><code>Timing</code></a> 函数给出搜索在我的电脑上所花的时间。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$Pre</span> = <span class="keyword">Function</span>[x, <span class="keyword">SeedRandom</span>[<span class="number">233</span>]; </span><br><span class="line">   <span class="keyword">Last</span>@Echo[<span class="keyword">Timing</span>@x, <span class="string">"Timing: "</span>, <span class="keyword">First</span>], <span class="keyword">HoldAll</span>];</span><br></pre></td></tr></table></figure><p>搜索时间仅供参考。随机种子不同，搜索结果和搜索时间都会有很大区别。</p><h2 id="静物"><a href="#静物" class="headerlink" title="静物"></a>静物</h2><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>搜索生命游戏中大小不超过 16*16 的静物：</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">16</span>, <span class="number">16</span>]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：0.941665 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 16, y = 16, rule = B3/S23bo3b2ob2ob2obo$obo2bo3bobob2o$bobobob2o2bo$3b2obobobo2b2o$2bo3bo2bob2o2bo$2b2obobobo3b3o$6bo2b3o$5obobo3b2o$o3bobob2obo2bo$2bo4bo4bobo$b3o5b2obob2o$o4b4obobo2bo$ob3obo6bo$bo9b2o$3b2obo3bo2b3o$2b2ob2o3b2o3bo!</pre><canvas width="480" height="480"></canvas></div><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>搜索 B2c3-ij4ai5iy6c/S2-kn3-enq4cint 规则中大小不超过 20*20 的 <a href="http://www.conwaylife.com/wiki/Symmetry#C4" target="_blank" rel="noopener">C4 对称</a>的静物：</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">20</span>, <span class="number">20</span>, <span class="string">"Rule"</span> -&gt; <span class="string">"B2c3-ij4ai5iy6c/S2-kn3-enq4cint"</span>, </span><br><span class="line"> <span class="string">"Symmetry"</span> -&gt; <span class="string">"C4"</span>]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：1.49678 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 20, y = 20, rule = B2c3-ij4ai5iy6c/S2-kn3-enq4cint2bo4bo2bo6bo$bob4ob2obo4bobo$obo4bo2bo3b2obobo$bo3bo2bo6bo2bo$2b3ob2o5bobo2bo$2bo2bo2b5obobobo$4bobobo4bobo2bo$5bo2bo2bo3bobobo$bo3bob2o2b4obobo$obo2bo8bo3bo$bo3bo8bo2bobo$bobob4o2b2obo3bo$obobo3bo2bo2bo$bo2bobo4bobobo$bobobob5o2bo2bo$bo2bobo5b2ob3o$bo2bo6bo2bo3bo$obob2o3bo2bo4bobo$bobo4bob2ob4obo$2bo6bo2bo4bo!</pre><canvas width="480" height="480"></canvas></div><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>搜索生命游戏中在半径为 29 的圆形内的 <a href="http://www.conwaylife.com/wiki/Symmetry#D8" target="_blank" rel="noopener">D8 对称</a>的静物：</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">59</span>, <span class="number">59</span>, <span class="string">"Symmetry"</span> -&gt; <span class="string">"D8"</span>, </span><br><span class="line"> <span class="string">"KnownCells"</span> -&gt; &#123;DiskMatrix[29] _&#125;]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：15.6273 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 59, y = 59, rule = B3/S2325b2o5b2o$24bobo2bo2bobo$19b2o2bo2bobobobo2bo2b2o$20b4ob2obobob2ob4o$18bo5bo3bobo3bo5bo$12b2o3bob4obo3bobo3bob4obo3b2o$11bo2bo2bobo2bobob2obob2obobo2bobo2bo2bo$11b2o2bobo3bo2bo2bo3bo2bo2bo3bobo2b2o$13b2o2bo2b2obobo2b3o2bobob2o2bo2b2o$11b2o4bobo3bob3o3b3obo3bobo4b2o$10bo2b4o2b2ob2o4bobo4b2ob2o2b4o2bo$6b2obobobo3b2o5b2o2bobo2b2o5b2o3bobobob2o$5bobobo2bo3bo2bob2obobobobobobob2obo2bo3bo2bobobo$5bo2bob2o3bo2bo3bobob2obob2obobo3bo2bo3b2obo2bo$6bobobo3bo4b3o2bo4bo4bo2b3o4bo3bobobo$7bo2bo2bob4o3b2ob2obobob2ob2o3b4obo2bo2bo$10bobo2bo2bobo2bo2bobobobo2bo2bobo2bo2bobo$5b5obo3bo2bob2o2bobobobobobo2b2obo2bo3bob5o$4bo6bobob4o2bob2o2bo3bo2b2obo2b4obobo6bo$2bo2b2o2b2obobo4bobo2bo3b3o3bo2bobo4bobob2o2b2o2bo$2b2obo2bobo3bob2o2bobo2b3o3b3o2bobo2b2obo3bobo2bob2o$3bobob2o3bobo2b3o2b3o2bobobo2b3o2b3o2bobo3b2obobo$3bob2o3bob2obo4b2o3bo2bobo2bo3b2o4bob2obo3b2obo$2b2o4b3o4b2obo2bo2bo4bo4bo2bo2bob2o4b3o4b2o$bo2b4o3b4o2b3obobo11bobob3o2b4o3b4o2bo$o2bo4b2obo3bo4bobo13bobo4bo3bob2o4bo2bo$4o2bo2bo2b2ob3o2bo5b2o3b2o5bo2b3ob2o2bo2bo2b4o$6b2obo3bo4bob2o4b2o3b2o4b2obo4bo3bob2o$2b4o2bob3o2b3obo2bo13bo2bob3o2b3obo2b4o$bo4bobo4b2o4bobobo11bobobo4b2o4bobo4bo$2b4o2bob3o2b3obo2bo13bo2bob3o2b3obo2b4o$6b2obo3bo4bob2o4b2o3b2o4b2obo4bo3bob2o$4o2bo2bo2b2ob3o2bo5b2o3b2o5bo2b3ob2o2bo2bo2b4o$o2bo4b2obo3bo4bobo13bobo4bo3bob2o4bo2bo$bo2b4o3b4o2b3obobo11bobob3o2b4o3b4o2bo$2b2o4b3o4b2obo2bo2bo4bo4bo2bo2bob2o4b3o4b2o$3bob2o3bob2obo4b2o3bo2bobo2bo3b2o4bob2obo3b2obo$3bobob2o3bobo2b3o2b3o2bobobo2b3o2b3o2bobo3b2obobo$2b2obo2bobo3bob2o2bobo2b3o3b3o2bobo2b2obo3bobo2bob2o$2bo2b2o2b2obobo4bobo2bo3b3o3bo2bobo4bobob2o2b2o2bo$4bo6bobob4o2bob2o2bo3bo2b2obo2b4obobo6bo$5b5obo3bo2bob2o2bobobobobobo2b2obo2bo3bob5o$10bobo2bo2bobo2bo2bobobobo2bo2bobo2bo2bobo$7bo2bo2bob4o3b2ob2obobob2ob2o3b4obo2bo2bo$6bobobo3bo4b3o2bo4bo4bo2b3o4bo3bobobo$5bo2bob2o3bo2bo3bobob2obob2obobo3bo2bo3b2obo2bo$5bobobo2bo3bo2bob2obobobobobobob2obo2bo3bo2bobobo$6b2obobobo3b2o5b2o2bobo2b2o5b2o3bobobob2o$10bo2b4o2b2ob2o4bobo4b2ob2o2b4o2bo$11b2o4bobo3bob3o3b3obo3bobo4b2o$13b2o2bo2b2obobo2b3o2bobob2o2bo2b2o$11b2o2bobo3bo2bo2bo3bo2bo2bo3bobo2b2o$11bo2bo2bobo2bobob2obob2obobo2bobo2bo2bo$12b2o3bob4obo3bobo3bob4obo3b2o$18bo5bo3bobo3bo5bo$20b4ob2obobob2ob4o$19b2o2bo2bobobobo2bo2b2o$24bobo2bo2bobo$25b2o5b2o!</pre><canvas width="480" height="480"></canvas></div><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>搜索生命游戏中大小不超过 10*10，恢复时间不超过 4 的 <a href="http://www.conwaylife.com/wiki/Eater" target="_blank" rel="noopener">glider eater</a>：</p><p>这里多搜了一代，以确保搜到的是静物。</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">10</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="string">"Rule"</span> -&gt; <span class="string">"B3/S23"</span>, <span class="string">"Periodic"</span> -&gt; <span class="keyword">False</span>, </span><br><span class="line"> <span class="string">"KnownCells"</span> -&gt; </span><br><span class="line">  <span class="keyword">Join</span>[&#123;&#123;&#123;0, 1, 0&#125;, &#123;0, 0, 1&#125;, &#123;1, 1, 1&#125;&#125;&#125;, <span class="keyword">Table</span>[&#123;&#125;, <span class="number">3</span>], </span><br><span class="line">   <span class="keyword">Table</span>[<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>]], </span><br><span class="line"> <span class="string">"OtherConditions"</span> -&gt; </span><br><span class="line">  <span class="keyword">Array</span>[<span class="keyword">If</span>[<span class="keyword">Max</span>[##] &lt;= <span class="number">3</span>, <span class="keyword">True</span>, </span><br><span class="line">     <span class="keyword">C</span>[##, <span class="number">1</span>] \[<span class="keyword">Equivalent</span>] <span class="keyword">C</span>[##, <span class="number">5</span>] \[<span class="keyword">Equivalent</span>] <span class="keyword">C</span>[##, <span class="number">6</span>]] &amp;, &#123;10, </span><br><span class="line">    10&#125;, <span class="number">1</span>, <span class="keyword">And</span>]]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：2.97737 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 10, y = 10, rule = B3/S23bo$2bo2b2o$3o3bo$6bob2o$3b2obob2o$4bobo$2bobobo$bob2obob2o$bo4bo2bo$2o4b2o!</pre><canvas width="480" height="480"></canvas></div><h2 id="振荡子"><a href="#振荡子" class="headerlink" title="振荡子"></a>振荡子</h2><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p>搜索生命游戏中大小不超过 16*16 的周期为 3 的振荡子：</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">16</span>, <span class="number">16</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：343.556 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 16, y = 16, rule = B3/S234b2ob2o3bo2bo$5bobo4b4o$bobo3bo2b2o$ob6obo3b3o$o7bo2b2o2bo$bob2obo2b2o2b2o$2b2obob2o2bo$5bo2bo2b4o$2b2o2bo8bo$2bo4bo5b3o$2b2obob2o3bo$2b2o3bo2bo2bo$b3o2bob2o3bo$o4b3o3b2o$2o2bob3o$4bob2o!</pre><canvas width="480" height="480"></canvas></div><h3 id="6"><a href="#6" class="headerlink" title="6"></a>6</h3><p>搜索生命游戏中大小不超过 8*8 的周期为 5 的 <a href="http://www.conwaylife.com/wiki/Symmetry#D8" target="_blank" rel="noopener">D8 对称</a>的振荡子：</p><p>通过设置 <code>&quot;Changing&quot; -&gt; True</code> 来避免搜到静物。这里搜到的是 <a href="http://www.conwaylife.com/wiki/Octagon_2" target="_blank" rel="noopener">Octagon 2</a>。</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">8</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="string">"Symmetry"</span> -&gt; <span class="string">"D8"</span>, <span class="string">"Changing"</span> -&gt; <span class="keyword">True</span>]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：1.76343 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 8, y = 8, rule = B3/S23$2bo2bo$bob2obo$2bo2bo$2bo2bo$bob2obo$2bo2bo!</pre><canvas width="480" height="480"></canvas></div><h3 id="7"><a href="#7" class="headerlink" title="7"></a>7</h3><p>搜索生命游戏中大小不超过 6*6 的周期为 4 的振荡子：</p><p>通过设置 <code>&quot;Changing&quot; -&gt; {1, 3}</code> 来避免搜到静物或者周期 2 的振荡子。这里搜到的是 <a href="http://www.conwaylife.com/wiki/Mold" target="_blank" rel="noopener">Mold</a>。</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">6</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="string">"Changing"</span> -&gt; &#123;1, 3&#125;]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：0.655831 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 6, y = 6, rule = B3/S23$3o$3obo$bobobo$2bo2bo$3b2o!</pre><canvas width="480" height="480"></canvas></div><h3 id="8"><a href="#8" class="headerlink" title="8"></a>8</h3><p>搜索生命游戏中大小不超过 16*16 的周期为 2 的<a href="http://www.conwaylife.com/wiki/Phoenix" target="_blank" rel="noopener">凤凰</a>：</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">16</span>, <span class="number">16</span>, <span class="number">2</span>, </span><br><span class="line"> <span class="string">"OtherConditions"</span> -&gt; </span><br><span class="line">  <span class="keyword">Array</span>[! <span class="keyword">C</span>[##, <span class="number">1</span>] || ! <span class="keyword">C</span>[##, <span class="number">2</span>] &amp;, &#123;16, 16&#125;, <span class="number">1</span>, <span class="keyword">And</span>]]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：4.2407 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 16, y = 16, rule = B3/S23$12bo$10bobo$14bo$8b2o$14b2o$9bo$11bobo$7bo3bo$5bobo$9bo$3b2o$9b2o$4bo$6bobo$6bo!</pre><canvas width="480" height="480"></canvas></div><h3 id="9"><a href="#9" class="headerlink" title="9"></a>9</h3><p>搜索<a href="/2018/07/09/Wolfram-Alpha-计算时显示的元胞自动机（一）/" title="3457/357/5">3457/357/5</a> 规则中大小不超过 7*7 的周期为 5 的振荡子：</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">7</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="string">"Rule"</span> -&gt; <span class="string">"3457/357/5"</span>, <span class="string">"Changing"</span> -&gt; <span class="keyword">True</span>]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：18.3763 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 7, y = 7, rule = 3457/357/5.AB$C2AC$D2AD$2.AC.A$3.B2AB$3.3AC$5.D!</pre><canvas width="480" height="480"></canvas></div><h3 id="10"><a href="#10" class="headerlink" title="10"></a>10</h3><p>搜索未知的规则中大小不超过 5*5 的周期为 11 的振荡子：</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">5</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="string">"Rule"</span> -&gt; <span class="string">""</span>, <span class="string">"Changing"</span> -&gt; <span class="keyword">True</span>]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：17.162 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 5, y = 5, rule = B2k3n4jnry5eiry7c8/S2ck3aeijnqr4erwyz5aijqr6aekn7e8bobo$2b3o$3obo$5o$3bo!</pre><canvas width="480" height="480"></canvas></div><h3 id="11"><a href="#11" class="headerlink" title="11"></a>11</h3><p>搜索未知的有 4 种状态的 <a href="http://www.conwaylife.com/wiki/Generations" target="_blank" rel="noopener">Generations 规则</a>中大小不超过 5*5 的周期为 11 的振荡子：</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">5</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="string">"Rule"</span> -&gt; <span class="string">""</span>, <span class="string">"Generations"</span> -&gt; <span class="number">4</span>, </span><br><span class="line"> <span class="string">"Changing"</span> -&gt; <span class="keyword">True</span>]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：63.1457 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 5, y = 5, rule = 2cik3ijr4aenqwy5ijk6ce/3e4aqw5y6ak/4.A.A$ABA.A$A2CA$A2CBA$.3A!</pre><canvas width="480" height="480"></canvas></div><h3 id="12"><a href="#12" class="headerlink" title="12"></a>12</h3><p>搜索一个规则，使得生命游戏中的滑翔机在这个规则中是一个周期 48 的 <a href="http://conwaylife.com/wiki/Reflectorless_rotating_oscillator" target="_blank" rel="noopener">Reflectorless rotating oscillator</a>；具体地说，在 12 代之后向右平移 6 格并顺时针旋转 90 度：</p><p>我们只需搜索 13 代，就能让搜到的图样满足条件。注意要设置 <code>&quot;Periodic&quot; -&gt; False</code>。</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">5</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="string">"Rule"</span> -&gt; <span class="string">""</span>, <span class="string">"Periodic"</span> -&gt; <span class="keyword">False</span>, </span><br><span class="line"> <span class="string">"KnownCells"</span> -&gt; </span><br><span class="line">  <span class="keyword">Join</span>[&#123;ArrayPad[&#123;&#123;0, 1, 0&#125;, &#123;0, 0, 1&#125;, &#123;1, 1, 1&#125;&#125;, &#123;&#123;1, 1&#125;, &#123;1, 7&#125;&#125;, </span><br><span class="line">     <span class="number">0</span>]&#125;, <span class="keyword">Table</span>[&#123;&#125;, </span><br><span class="line">    <span class="number">11</span>], &#123;ArrayPad[&#123;&#123;1, 0, 0&#125;, &#123;1, 0, 1&#125;, &#123;1, 1, 0&#125;&#125;, &#123;&#123;1, 1&#125;, &#123;7, </span><br><span class="line">       1&#125;&#125;, <span class="number">0</span>]&#125;]]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：37.1343 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 11, y = 5, rule = B2ceik3y4ckqw5kr6cn/S01ce2eikn3eiq4jn5akn6ek$2bo$3bo$b3o!</pre><canvas width="480" height="480"></canvas></div><h2 id="飞船"><a href="#飞船" class="headerlink" title="飞船"></a>飞船</h2><h3 id="13"><a href="#13" class="headerlink" title="13"></a>13</h3><p>搜索生命游戏中大小不超过 5*16，周期为 3，速度为 c/3 的竖直方向的飞船：</p><p>这里搜到的是 <a href="http://www.conwaylife.com/wiki/25P3H1V0.1" target="_blank" rel="noopener">25P3H1V0.1</a>。</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">5</span>, <span class="number">16</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：1.23444 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 16, y = 5, rule = B3/S23o2bo$b2o2bo3b2obo2bo$b2ob2o2bo4b2o$5b3ob3ob2o$7bo!</pre><canvas width="480" height="480"></canvas></div><h3 id="14"><a href="#14" class="headerlink" title="14"></a>14</h3><p>搜索生命游戏中大小不超过 12*15，周期为 5，速度为 2c/5 的 D2 对称的竖直方向的飞船：</p><p>这里搜到的是 <a href="http://www.conwaylife.com/wiki/44P5H2V0" target="_blank" rel="noopener">44P5H2V0</a>。</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">12</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="string">"Symmetry"</span> -&gt; <span class="string">"D2|"</span>]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：526.74 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 15, y = 12, rule = B3/S234bobobobo$b3o7b3o$2o11b2o$3bo7bo$2b2o7b2o$b2o9b2o$2ob2o5b2ob2o$2bo2bo3bo2bo$2b2ob2ob2ob2o$3bobo3bobo$4bo5bo!</pre><canvas width="480" height="480"></canvas></div><h3 id="15"><a href="#15" class="headerlink" title="15"></a>15</h3><p>搜索生命游戏中大小不超过 21*21，周期为 4，速度为 c/2 的 <a href="http://www.conwaylife.com/wiki/Glide_symmetric#Glide_symmetric_spaceship" target="_blank" rel="noopener">glide symmetric</a> 的竖直方向的飞船：</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">21</span>, <span class="number">21</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">0</span>, </span><br><span class="line"> <span class="string">"OtherConditions"</span> -&gt; </span><br><span class="line">  <span class="keyword">Array</span>[<span class="keyword">C</span>[##, <span class="number">1</span>] \[<span class="keyword">Equivalent</span>] <span class="keyword">C</span>[# + <span class="number">1</span>, <span class="number">21</span> + <span class="number">1</span> - #<span class="number">2</span>, <span class="number">3</span>] &amp;, &#123;21, 21&#125;, </span><br><span class="line">   <span class="number">1</span>, <span class="keyword">And</span>]]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：42.8359 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 21, y = 21, rule = B3/S23$4bo$3bo2bo2b2o5b2o$3bo4bo6bo$10bo5bo$4b2obob5obo$6bo6b3o$8bobo$2b2o7bo6b2o$2b3o6bo6b3o$bob2o3bo2bo5bob2o$b3o5b3o5b3o$2bo15bo3$4b2o4b2o4b2o$4b3o3b3o3b3o$3bob2o2bob2o2bob2o$3b3o3b3o3b3o$4bo5bo5bo!</pre><canvas width="480" height="480"></canvas></div><h3 id="16"><a href="#16" class="headerlink" title="16"></a>16</h3><p>搜索 <a href="http://www.conwaylife.com/forums/viewtopic.php?f=11&amp;t=3761" target="_blank" rel="noopener">B2-ak3ain/S1 规则</a>中大小不超过 10*10，周期为 5，速度为 c/5 的 D2 对称的对角方向的飞船：</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">10</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="string">"Rule"</span> -&gt; <span class="string">"B2-ak3ain/S1"</span>, </span><br><span class="line"> <span class="string">"Symmetry"</span> -&gt; <span class="string">"D2\\"</span>]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：1.63345 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 10, y = 10, rule = B2-ak3ain/S1$6bo$5bobo$5bo2bo$5bobo$2b3o$bo$2bobo$3bo!</pre><canvas width="480" height="480"></canvas></div><h3 id="17"><a href="#17" class="headerlink" title="17"></a>17</h3><p>搜索上面搜到的飞船的大小不超过 15*15 的  D2 对称的 <a href="http://www.conwaylife.com/wiki/Tagalong" target="_blank" rel="noopener">tagalong</a>：</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">15</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="string">"Rule"</span> -&gt; <span class="string">"B2-ak3ain/S1"</span>, </span><br><span class="line"> <span class="string">"Symmetry"</span> -&gt; <span class="string">"D2\\"</span>, </span><br><span class="line"> <span class="string">"KnownCells"</span> -&gt; &#123;ArrayPad[</span><br><span class="line">    FromRLE@"x = 10, y = 10, rule = B2-ak3ain/S1\n\</span><br><span class="line">$6bo$5bobo$5bo2bo$5bobo$2b3o$bo$2bobo$3bo!", &#123;&#123;5, 1&#125;, &#123;5, 1&#125;&#125;, _]&#125;]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：4.2824 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 15, y = 15, rule = B2-ak3ain/S1$8bo$10bo$10bo$10bo2$11bo$10bobo$bo8bo2bo$10bobo$2b3o2b3o$6bo$7bobo$8bo!</pre><canvas width="480" height="480"></canvas></div><h3 id="18"><a href="#18" class="headerlink" title="18"></a>18</h3><p>搜索 <a href="https://github.com/HuntingBot/Celluar-Automata/issues/70" target="_blank" rel="noopener">B02-ak3ai/S1 规则</a>中大小不超过 16*16，周期为 4，速度为 c/4 的 <a href="http://www.conwaylife.com/wiki/Glide_symmetric#Glide_symmetric_spaceship" target="_blank" rel="noopener">glide symmetric</a> 的对角方向的飞船：</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">16</span>, <span class="number">16</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="string">"Rule"</span> -&gt; <span class="string">"B02-ak3ai/S1"</span>, </span><br><span class="line"> <span class="string">"OtherConditions"</span> -&gt; </span><br><span class="line">  <span class="keyword">Array</span>[<span class="keyword">C</span>[##, <span class="number">1</span>] \[<span class="keyword">Equivalent</span>] <span class="keyword">C</span>[#<span class="number">2</span> + <span class="number">1</span>, #<span class="number">1</span>, <span class="number">3</span>] &amp;, &#123;16, 16&#125;, <span class="number">1</span>, <span class="keyword">And</span>]]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：2.79788 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 16, y = 16, rule = B02-ak3ai/S12$8bo$5bob2o$3b5ob2o$3b6o$3b9o$3b9o$3b9o$2bo2b7o$5b7o$4bo2b2o2bo!</pre><canvas width="480" height="480"></canvas></div><h3 id="19"><a href="#19" class="headerlink" title="19"></a>19</h3><p>搜索未知的规则中大小不超过 5*5，周期为 6，速度为 (2,1)c/6 的<a href="http://www.conwaylife.com/wiki/Knightship" target="_blank" rel="noopener">马行船</a>：</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">5</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="string">"Rule"</span> -&gt; <span class="string">""</span>]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：9.79478 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 5, y = 5, rule = B2ceik3ckn4knqr5akq7c/S1e2cek3aeijq4jz5jkq6c2o$2b2o$3bo$obo!</pre><canvas width="480" height="480"></canvas></div><h3 id="20"><a href="#20" class="headerlink" title="20"></a>20</h3><p>搜索未知的 <a href="http://www.conwaylife.com/wiki/Hexagonal_neighbourhood" target="_blank" rel="noopener">totalistic 六边形规则</a>中大小不超过 8*8，周期为 3，速度为 c/3 的对角方向的飞船：</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">8</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="string">"Rule"</span> -&gt; <span class="string">""</span>, <span class="string">"Hexagonal"</span> -&gt; <span class="keyword">True</span>, </span><br><span class="line"> <span class="string">"Totalistic"</span> -&gt; <span class="keyword">True</span>, <span class="string">"Changing"</span> -&gt; <span class="keyword">True</span>]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：2.15809 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 8, y = 8, rule = B245/S356Hbo$3o$b2ob2o$3bob2o$2bob4o$2b5o$3b3o$4bo!</pre><canvas width="480" height="480"></canvas></div><h3 id="21"><a href="#21" class="headerlink" title="21"></a>21</h3><p>搜索一个规则，使得生命游戏中的滑翔机在这个规则中是一个周期 7 速度为 (3,1)c/7 的<a href="http://www.conwaylife.com/wiki/Oblique_spaceship" target="_blank" rel="noopener">骆行船</a>：</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">17</span>, <span class="number">17</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="string">"Rule"</span> -&gt; <span class="string">""</span>, <span class="string">"Changing"</span> -&gt; <span class="keyword">True</span>, </span><br><span class="line"> <span class="string">"KnownCells"</span> -&gt; &#123;ArrayPad[&#123;&#123;0, 1, 0&#125;, &#123;0, 0, 1&#125;, &#123;1, 1, 1&#125;&#125;, <span class="number">7</span>]&#125;]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：130.006 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 17, y = 17, rule = B2ek3aein4aikr5cnr/S1e2ei3aeijknr4k5ckn6a7$8bo$9bo$7b3o!</pre><canvas width="480" height="480"></canvas></div><h3 id="22"><a href="#22" class="headerlink" title="22"></a>22</h3><p>搜索未知的规则中在第一回合的大小不超过 3*3，周期为 7，速度为 2c/7 的对角方向的飞船，使得生命游戏中的滑翔机在这个规则中也成立：</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">11</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="string">"Rule"</span> -&gt; <span class="string">""</span>, <span class="string">"Changing"</span> -&gt; <span class="keyword">True</span>, </span><br><span class="line"> <span class="string">"KnownCells"</span> -&gt; &#123;ArrayPad[Table[_, 3, 3], 4]&#125;, </span><br><span class="line"> <span class="string">"KnownRules"</span> -&gt; </span><br><span class="line">  PatternRules@CA[&#123;&#123;0, 1, 0&#125;, &#123;0, 0, 1&#125;, &#123;1, 1, 1&#125;&#125;, <span class="number">4</span>]]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：53.9408 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 11, y = 11, rule = B3aijnr4kq7c8/S02aen3ajknr4ijrw5air6akn7c4$5b2o$4bobo$4b3o!</pre><canvas width="480" height="480"></canvas></div><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><h3 id="23"><a href="#23" class="headerlink" title="23"></a>23</h3><p>搜索生命游戏中大小为 5*5 的周期 4 的琼脂：</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="string">"Agar"</span> -&gt; <span class="keyword">True</span>, <span class="string">"Changing"</span> -&gt; &#123;1, 3&#125;]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：5.48619 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 5, y = 5, rule = B3/S23:T5,5b3o$4bo$3bo$2o2bo!</pre><canvas width="480" height="480"></canvas></div><h3 id="24"><a href="#24" class="headerlink" title="24"></a>24</h3><p>搜索<a href="https://www.zhihu.com/people/liu-kan-shan-78/activities" target="_blank" rel="noopener">刘看山</a>的<a href="http://www.conwaylife.com/wiki/Parent" target="_blank" rel="noopener">父母</a>：</p><p>也可以用包里的 <code>Predecessor</code> 函数。</p><p><strong>代码</strong>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">100</span>, <span class="number">100</span>, <span class="number">2</span>, <span class="string">"Periodic"</span> -&gt; <span class="keyword">False</span>, </span><br><span class="line"> <span class="string">"KnownCells"</span> -&gt; &#123;&#123;&#125;, </span><br><span class="line">   <span class="keyword">ImageData</span>[</span><br><span class="line">    <span class="number">1</span> - <span class="keyword">Binarize</span>[</span><br><span class="line">      <span class="keyword">ImageResize</span>[<span class="keyword">Import</span>@<span class="string">"https://pic4.zhimg.com/da8e974dc_xl.jpg"</span>, </span><br><span class="line">       <span class="number">100</span>], <span class="number">0.8</span>], <span class="string">"Bit"</span>]&#125;]</span><br></pre></td></tr></table></figure><p><strong>搜索时间</strong>：125.216 秒</p><p><strong>搜索结果</strong>：</p><div class="rle"><pre>x = 100, y = 100, rule = B3/S239bobob2o5bob2ob2ob2obo3bo10bo4bo5bo2bo5bo3b2ob2o4bo5bo6bob2obo$2bob2o2bo3b5o4b10o9bobo3bo2bo3bobo2bo3bobo2bo15bo5bo3b4o$o2b8obobo3b3obobo2b4obo4bobo5b3o2b3o3b6o3b12obo3bo6bo2b5obo$4b5o3b2obob4ob2ob2ob4o2b2o2b4o2bobob3ob4ob2ob3ob3obob4ob3o2b4o2bob5o2bo2bo$o3bobo5b7ob2ob2ob2ob2ob7ob6ob4ob3ob3ob10o3bob2o5bobo2b4ob5o$2bob3o3bobo3b3obobob5ob2obo3bo2b3o2bob2obo2bobobo2bo2b2o2b2o2bob2obo5b5o3b8o$obob4o3bobo3bob3ob2ob3obo2b2ob3o2b6ob10o2b3obo2b2o3bob3obo2b3obobo3b2o2b3o$b4ob6o3bo2b16ob4ob2o2b8obo2b2ob2ob3ob3obob2obobo2bob3o4bo5b4o$2bobobo2b2obo6bo2b2ob4o2b2ob2obo2b4o5bo3b2ob4obob6o3b3obob4ob2ob3o5b2ob2o$2bob3o7bo3bo3bob3o4b2ob2obo2b2ob2obo2bo3b2o2b2o2b5o3b3obo2b2ob2obo2b3ob3obob3o$4b4o8bo4b2o2b2o5b2o2b3ob2ob2obo7b6ob3o2b5ob2ob6ob2o2bob10obo$2bob6o7b7o2bobo2b2o2bobob2obob4o4bo2bob3o2bo2b2ob2ob5o2bob3ob8obo2b2obo$4b2obo3b2ob6ob2ob3obo2b2o4b5obo2b4o2bob7o2bob3obobo2b2o2b6obo3b4o2b2o$2bobob3ob6obobob3obob4ob6o4b2o4b8ob2ob6obob3o4b5ob4ob4obob3o$o2bob7ob3obob2o3b3ob3ob3ob3o2bob2o3b2ob6o4b2ob5ob2obob6ob4o3b2ob5ob2o$b2ob2obobob8obob4o3b2obo4b2o4b2o2b2o4bo2b3ob2obobobo2bo2bob2o3bobob2o5b2o3bo$2ob2o2bobob2o5b3o3b2o3b11o2bob6ob4ob7obob6o4b2ob9o3bo3b2ob2o$3o2b6o4bob3ob2o2bob2o4b3o2bobo4bo2b7ob2o4b4o2bo2b4ob2ob3o3bo3bob6o$bobob2o2b4o2bob3ob3ob5ob2o3b2o7bob3o4b4obo3b3obobobob3o2b3o2bobo4b6o2b2o$bo3bo2b3o3b4o2b2ob2obo2b10obo2b4ob3obob2obobo3b2ob8o2b6obo5b2obob2o$6ob2ob3ob9ob3o3b4ob2ob2o5bobob2obob2ob4ob3obo2b5obob5o3bo3b2obobo$5ob2o2bo3b3obob4o2b4obo4b4obo3b3o2b4o2b2ob2ob2ob3o5bo5b3o5b2ob5o2bo$bob2ob5o3b6o2b6ob2o5b2o2bo2b2ob3obo2b6obobob2ob3obob4ob4ob6o2bo2b2o3bo$bo2bob2o2b2ob8o3b2o2bobobo2b3ob7ob3obobo2b2obobobo2b2o4b2ob4ob5ob3o2bob3obobo$3bobob2o2b5ob4ob2obobobobo3b6ob2ob2ob2o3b2o4b7obob2ob4ob2o6b2o2b5obobo$5b3ob5ob2o2b5ob10ob12o2bo2b3ob3ob2o2b3o4bo2bob12ob3ob2o3bo$5b2ob2o2b2o2bo5bob3o2b3ob3ob2o2bobo2bo2b4ob2ob3ob3obob3obob4o3b5o2b2o2b8o$2o4b3o3b2ob5o3b5obob5o5b2ob4ob6o3bo3b2ob9o2b2o9b2o2bobo3b3o$3bo2b2o2bob5ob5o2bob4o3b2o4b3ob11obo2b2ob2ob4ob5ob2o4bo5bob2ob2ob4o$7bo3b3o3bo2bob2ob5o2bob4o2b5obo4b3o2b3o3b2o2b2o2b2ob2o2bobobo2bobob2ob6obo$6bob3o2b5o2b2ob3ob3o4bob4o2bob2o3bobobobo2b2ob2o2bobo2b4o2b2o2b4o3b2ob4ob2obo$ob2o4b4ob3ob2ob4o2b2o2b5o2b2ob2o2bo3bo2b3o3b2obob5ob2obob4ob3ob4obob2obobobo$b8obob3ob3o2b10ob4o2b4obob6obobob2o5b2ob4obob5ob2ob2o3b2o2bob3obo$2bob6o2bo3b4o4bo3b3o2bob4o3b3ob2ob4o3b2o3bo3bobobo3bobob5o2b6ob3obo$obobobo2b2ob4o3b4o2b4o2b2ob2ob2o2bobo4b6o3b2o6b3ob2o2b2ob2o3bo2b3ob8obo$b5o4b6o2b6ob6ob2o2b4o4b3ob5obob3o3b2ob2ob7o2b2o2b2ob12o2bo$2b3o3bobobob3ob2ob2obobob3o2bobob7ob3ob2ob2o2b2ob2o4b4obo2b9obo7b5o$ob2obo4b6obobo3bobo2bobob2o5bob2ob5o3b2o2bo2b3obo2bo2b3obo2bob2ob2ob2o2bo5b2obo$2b2o4bob4o3b2o2b5ob3ob2obo5b3o2bob2o3bo2b2obo2b2o2bo2bob3ob3o8bob3obo3b2o$bob2o4b5o3b3o3b2ob3o2bo6bob2obo2b3ob3obob4ob3o7bo7bo2bo3bobob3ob2o3bo$4b3o3bo2b2obob2obo2b3o3b4o2bo2b2o6b5obo2b10ob2o4b2o4bo4bo2bo2bo4bo$bobob6obob3ob3o2bo3b5o8bo4bo2bo5bobob4ob14ob2ob2o3b2o3bo2bo3bo$5b6o3bobobob3ob2ob2ob4o2bo2b2obobo3bo3bo3b2o3b3obo4b3obo3bo2b2obo5bob2obo$bobob6o2b3o2b2o2b2o3b2ob2o3bo3b2o2b3o2bo2bo4b2obob3o2b5ob3o5b2o2bo4b5o2bo2bo$5bo3b2obobobob2ob3o2bob2o10bo5b9ob3o2b2o2b3obo2b4obo3bob2o5b2o2bo3bo$o3b7o3b3ob2ob5o3bo4bo2b3o2b2ob2o2bo2b4o3b4ob2o3b2o2b3o2bo6bo2bo4b2o2b3o$4b11o3bo2b4obob2ob2o2b2obob6ob5o2bo2b5ob3o3b5o2bobob2o2bobo2b2o2b2o2b3o$bob3o2bo2b2o2bob3ob3o4b2ob2o2b4ob2o4b3obob2ob5o2b4obob2o2b2o3b2o2b2o3b2o2bo3bob2o$2b2obo2b2obobobob3o2bobobo5b4ob2o2b2o2b2o3b2ob3o3bobo4bo2bob2ob3o6bo2bobo8b3o$b2o2b4ob2o3bob6o9bo2bo2bo2b2o2b4ob4ob5o3bobob5ob2ob2o2bo4b3o3bob2o2b3o$b5ob2ob2o2bob2obob2o4bob2ob8ob4o2b10obobo3b4o2b5o2bo3bob2o2bo2bo2bo2b3o$2bo2bob4o6bob3o6b5obobobob2o2b3o6bo2bob7obobo3bob3obo2bo3bobobo2bo2b3obo$o2bob2o3b2o3bob5obo3b6o2b2obobo7bobob4obob3obo2bo5b5obo2bo5bobo3b2obo$5b4ob2o2bob3ob2o3b8o3b5o2b2obo4b2obobobobo2b2o3bo2b3o3b2obo2bo6bob2ob2o$bo3bob4o6bo4b5ob4o3b6ob2o2bo5b2o2b8ob3o2bob3o2bo2bo4bobo2bob2ob2obo$2bob2o2bobobo2bo2b3ob2ob2o4b6ob3obo5b2o2b2ob2obob5ob2ob6o2bo4bo4b2o3bo3b2o$b3ob3o2b2o3b7o2bobo3bobobob6o3bob5o2bob5o3b6o5b2o2bobo2b2obo3b2o3bo$ob3ob6obo3b5ob2ob2o5b6o3b2ob3obob4o2b2ob3ob5o2b2o2b2o2bobo2b2o2bo2b3ob3o$4bob2o2bo2bo5b2o2b10o2b2o3b6o2b2obo2b5o2b3ob4o7bobo4bo6b2ob2ob4o$ob2ob2o4bo3bo5b2obo4b3ob4ob6o2bo2b2obob2ob2obo2b15o3bo6bob4obobo$b3ob2obo5bo2bo3b2ob2o2bob4ob2o3b2o2b4ob6obobo3bobo3b2ob6o3bobobo3bob3o2b5o$2bo3bobo5b2obo2b2o2b2o5bob4o3bo2bob2ob2ob5ob7o2b2o3bobobobo7bob6o2b3o$bob2ob5obobob6obob6obob2o3b2o6b2ob5ob2ob2obob5ob5o4b2obob4obo3b2o$3b6o5bo2bo2b2o4b10o3b3o5b2ob3obobob17ob2o5b3o2bobo2b5o$2bobob3o5bo2bo2b2obobo5b2obo3b3obobo3bobobob2ob4o2b4o3bobo2b2o7b9o3b4o$4bob2o3b2obob4o2bo4b2obob3o2bob2o5bob2ob2ob3o8bo3b3o6bo5bo2b3ob3o3bo$3b3ob8ob3ob2ob9obob4ob6o2b2ob2ob3obo4b8o2b2ob2o4bob3obob4o2bo$b4obobobo4b4ob5obobob5obobob3ob2ob5obob2o2bobo3b3o5b5obo2bob5o2bob2o$3bob2o2b2obo3b2obo6b2ob3ob3obob3obo2b5o2b3ob4o10b3obobo3b3obob3obob3o$ob2o2b5o3b2o2b2ob2o3b3obob2ob3ob4obob2ob2ob2ob5o4bobob7ob6o2bo3b2o4b4obo$b3ob4obobobob4o4b3o2bob2ob4obo3b3o2b2o2b3ob4obo2bobob2ob2obob5o3b3ob2obob2ob3o$2b3obo2b3o2bob4o6bo2b2o2bob3ob2o2bo2b6o2b3ob3o9b3ob2o2b2o2bob6obob7o$bob3obo2bo3b4o2b2o2b5ob6obob8obo2b4ob2o2bobo4b2o2bob2o2bo2b2o2bobo3b4o3b3o$5bo4bobo4bob7obob4o2b3obobo2b4o2bo2bob2o2b2o4b4obo2b6ob2ob2obobob2o2b3obo$bob3o6bo3bobob3o2b2obo2b2obobob3o2bob2o5bo2b3ob9o5b2o2bob2o2b2o3bobo2b4obo$o4b2o3bo3bo3b5o3bob2o3b8ob5o8bob2o2bob5o2bo3b4obo2bobobo3b4ob2o$5bobo2bobo5b5obob4ob3o2bo2bo2b2ob2obo2bo2b2ob2obo2bob5o2bob5ob5obobob8o$bob3o6bo4b6o2b3o2b3o4bo2bob3obo2bo4b2o2bo4b2ob2o5bo3b4ob2ob3o2b5ob4o$2b3obo3bo3bo2b3obo2b2ob2obobo9b2ob2ob6o2b2ob4ob2o3bo2b2obo3bo2b2ob2o3b2obobobo$obobo4bo3bo2b2obobob3o2b2ob3o3bo4bob6ob3ob2obob2ob5ob5o6b2ob3ob3ob4ob2o$bobob6o2bob5o3b2o2bo2b4o2bo3b4o2bob3o3bobob2obobobo3bo2b2o2bobob4o2b4ob7obo$3ob2ob2ob4ob5o3b2o4b2ob3o7b4ob2o2b5ob2ob4o2b3o2bobobo4b2obobob4ob3ob3o$3o2b3ob2o4b3o2b2obo3bob2ob3obo8b2o2bob5o2bob2ob3ob2o4b7o2b2o3bo3b5obo$b2obo3b2o4b2obo2b4o3bo2bo2b3o6b2ob6o3b3ob4ob3obo2bo2b2ob3obob2o2b2obob2o3bobo$b6o2b5ob5ob3ob7obobobob2o4b2obob4ob4o3bobob2o2bo3b2o3b10o2bo3b2o$2b3o4b2obo3bo2b2obob4o2bobob2o2b4ob2o3b3ob2ob3o3b2o2b4o5b2obob2o2bobobob4o2b2obo$2b2o6bo5b6o2b2o2b2o2b2ob2obobob3o3b6o2b2o3b2o3b3o2bo3bo2b2o3b2o2b3ob4obobo$obo2bo4b2ob2ob7o2b8o2b7o2b2ob2o5bobo5bobobobo6b2obo2bob2ob7ob6o$b2o4bob2obo3bo2bob3ob3ob2o2bobo2bob2ob3ob3ob5obo2bob2o2b3o4b3ob2o3b2obob4o3b2o2b2o$4o4b3o2b5obo2b4obob8o2b2obob4ob7o3bo2b3ob2obob5o2b2o3bob4o3b4ob2o$2ob3o3bo3b5o3bo2bob6o2b2ob2obob7obo4b7obob2o3b3ob2o2b2o2bob2o8bobob2o$bob9o2bobob6o2b11ob2ob5o3b2ob3obob9o3b4ob3ob5o2bo3bo4b5o$ob3ob4obo2b2ob2ob4ob2o4b2obo2b3ob5obo2b4ob2obobo2bo2bobo2b2obo2b3o2bobo4bo2bo3bobo$2b3o4bo2bob3o2b2ob4obobobobob2o2bob3obo2b2obob2ob2ob4ob3obo2b5o2b2obob9o2bobob2o$b2o2bob3o2bo2bobob2o4bo4b2ob4ob4ob2obob3o2bob3obob3ob2o3b3obob3ob3obob7obo3b2o$b9obob6obob2ob6obob2ob2o2bob2o3b2ob3ob6obobobo2bobo2b8o3b5obob6o$2bo2bo2bo3b5ob2ob4ob2ob5ob2obob2o2b9ob2o3bo2b2ob5obob3o6b3o5bo2bobob3o$bo2bo3bo2bo7bob5o2b4o2b2obobob5ob4o3bobo3bob2ob3o5b3obo2b7o2bob3o2bob2o$7b4obob2ob6o3bo2bo3bo2b4o2b2o7b4o4b10o3bobo2bo4bobo6b8o$bo4bob2o9b2o3bo4bo5bob2obo4b2obobob2obo2bob2ob2ob2ob2o4bo6bobo5bob2o2b2obo!</pre><canvas width="480" height="480"></canvas></div>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2017/11/06/用-Mathematica-搜索生命游戏中的静物/&quot; title=&quot;用 Mathematica 搜索生命游戏中的静物&quot;&gt;用 Mathematica 搜索生命游戏中的静物&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2018/05/13/用-Mathematica-搜索生命游戏中的静物（二）/&quot; title=&quot;用 Mathematica 搜索生命游戏中的静物（二）&quot;&gt;用 Mathematica 搜索生命游戏中的静物（二）&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;我把《&lt;a href=&quot;/2018/05/13/用-Mathematica-搜索生命游戏中的静物（二）/&quot; title=&quot;用 Mathematica 搜索生命游戏中的静物（二）&quot;&gt;用 Mathematica 搜索生命游戏中的静物（二）&lt;/a&gt;》里的代码整理了一下，写成了个叫做 LifeFind 的 Mathematica 包。现在它支持不同的规则和对称性，可以搜索静物之外的图样，但搜索速度并没有提高。可以在&lt;a href=&quot;https://github.com/AlephAlpha/LifeFind&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这里&lt;/a&gt;下载。&lt;/p&gt;
&lt;p&gt;需要强调的是，我之所以用 SAT，不是因为它是最好/最快的办法，而是因为我完全不懂算法，只能用 Mathematica 里现成的函数。&lt;/p&gt;
&lt;p&gt;以下是这个包的一些使用范例 ：&lt;/p&gt;
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="Mathematica" scheme="https://AlephAlpha.github.io/tags/Mathematica/"/>
    
      <category term="生命游戏" scheme="https://AlephAlpha.github.io/tags/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>Wolfram|Alpha 计算时显示的元胞自动机（三）</title>
    <link href="https://AlephAlpha.github.io/2019/03/02/Wolfram-Alpha-%E8%AE%A1%E7%AE%97%E6%97%B6%E6%98%BE%E7%A4%BA%E7%9A%84%E5%85%83%E8%83%9E%E8%87%AA%E5%8A%A8%E6%9C%BA%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>https://AlephAlpha.github.io/2019/03/02/Wolfram-Alpha-计算时显示的元胞自动机（三）/</id>
    <published>2019-03-02T11:13:00.000Z</published>
    <updated>2019-03-13T04:29:01.567Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="/2018/07/09/Wolfram-Alpha-计算时显示的元胞自动机（一）/" title="Wolfram|Alpha 计算时显示的元胞自动机（一）">Wolfram|Alpha 计算时显示的元胞自动机（一）</a></li><li><a href="/2018/08/09/Wolfram-Alpha-计算时显示的元胞自动机（二）/" title="Wolfram|Alpha 计算时显示的元胞自动机（二）">Wolfram|Alpha 计算时显示的元胞自动机（二）</a></li></ul><hr><p>现在我给 <a href="https://github.com/AlephAlpha/LifeFind" target="_blank" rel="noopener">LifeFind</a> （即前面提到的用来搜索生命游戏中的图样的那个 Mathematica 包）加上了搜索 Generations 规则的功能。于是，它也能够搜 Wolfram|Alpha 的那个元胞自动机。</p><p>搜索速度很慢，而且只能搜周期很小的图样，于是其实没有太多有意思的发现。不过，至少振荡子不再只有那么几个了。</p><p>运行以下的 Mathematica 代码之前先要导入 LifeFind 包（当然，导入之前先要<a href="https://github.com/AlephAlpha/LifeFind/wiki/%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%AE%89%E8%A3%85" target="_blank" rel="noopener">安装</a>）：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;&lt; Life`</span><br></pre></td></tr></table></figure><p>搜索结果是随机的。输入下面的代码来搜索很可能会搜出不同的图样。</p><a id="more"></a><h2 id="静物"><a href="#静物" class="headerlink" title="静物"></a>静物</h2><p>静物没什么好说的。原本就能搜 <code>B357/S3457</code> 规则的静物，只是现在可以把这个规则写成 <code>3457/357/5</code> 了。</p><p>还可以加点别的条件，搜个胖乎乎圆滚滚的，好看。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">59</span>, <span class="number">59</span>, <span class="string">"Rule"</span> -&gt; <span class="string">"3457/357/5"</span>, <span class="string">"Symmetry"</span> -&gt; <span class="string">"D8"</span>, </span><br><span class="line"> <span class="string">"KnownCells"</span> -&gt; &#123;DiskMatrix[29] _&#125;]</span><br></pre></td></tr></table></figure><p>搜出的结果：</p><div class="rle"><pre>x = 59, y = 59, rule = 3457/357/525bo7bo$23b5obob5o$18b2ob3ob2ob3ob2ob3ob2o$17bob2obobo2b2ob2o2bobob2obo$17b2obob2o2bo2bo2bo2b2obob2o$13b2ob2ob3obob2o2bo2b2obob3ob2ob2o$13b2obob2obobo2bob3obo2bobob2obob2o$14bob2obo2b5o2bo2b5o2bob2obo$11bo2b2obob3o3bo2bobo2bo3b3obob2o2bo$9b5ob2ob3obo3bob3obo3bob3ob2ob5o$9b2ob2obo2bo2b5obobobob5o2bo2bob2ob2o$8b2o2bob6o2b2o2bo5bo2b2o2b6obo2b2o$9b4obo2bob2o5b2obob2o5b2obo2bob4o$5b2o2b2o2b3obo2b2ob3o2b3o2b3ob2o2bob3o2b2o2b2o$5b4o2b3o2bobo2b2ob2o2bobo2b2ob2o2bobo2b3o2b4o$8b4obobo2b2o2bobob2obob2obobo2b2o2bobob4o$5b3obobo2bob3o3bob2o2bobo2b2obo3b3obo2bobob3o$3b3ob2o2b3o2b2o2bob2o2bo2bo2bo2b2obo2b2o2b3o2b2ob3o$2bobobo2b3o2b3o2b4o2bob2ob2obo2b4o2b3o2b3o2bobobo$2b2ob5ob2o2bo2b2obo2b11o2bob2o2bo2b2ob5ob2o$3b3o2b2o2b2o3b2o2b3obo7bob3o2b2o3b2o2b2o2b3o$2bo2b2obobo2b2o3b4ob2ob7ob2ob4o3b2o2bobob2o2bo$2b3o2bob3o2b5obobob3o2bo2b3obobob5o2b3obo2b3o$b2ob4o2b2obo3bo2b2ob2o9b2ob2o2bo3bob2o2b4ob2o$bobo3bo2bo2b4o2bob3ob2o2bo2b2ob3obo2b4o2bo2bo3bobo$3o2bob2obo2b2obob3obob11obob3obob2o2bob2obo2b3o$b2ob4obob2o2bobobob2ob4obob4ob2obobobo2b2obob4ob2o$bobo6bobo2bo2b2obo3b2o2bo2b2o3bob2o2bo2bobo6bobo$2b2o2bob2o3b2obob2obo3bo2bobo2bo3bob2obob2o3b2obo2b2o$b2ob4ob2ob2obobobob2ob4obob4ob2obobobob2ob2ob4ob2o$2b2o2bob2o3b2obob2obo3bo2bobo2bo3bob2obob2o3b2obo2b2o$bobo6bobo2bo2b2obo3b2o2bo2b2o3bob2o2bo2bobo6bobo$b2ob4obob2o2bobobob2ob4obob4ob2obobobo2b2obob4ob2o$3o2bob2obo2b2obob3obob11obob3obob2o2bob2obo2b3o$bobo3bo2bo2b4o2bob3ob2o2bo2b2ob3obo2b4o2bo2bo3bobo$b2ob4o2b2obo3bo2b2ob2o9b2ob2o2bo3bob2o2b4ob2o$2b3o2bob3o2b5obobob3o2bo2b3obobob5o2b3obo2b3o$2bo2b2obobo2b2o3b4ob2ob7ob2ob4o3b2o2bobob2o2bo$3b3o2b2o2b2o3b2o2b3obo7bob3o2b2o3b2o2b2o2b3o$2b2ob5ob2o2bo2b2obo2b11o2bob2o2bo2b2ob5ob2o$2bobobo2b3o2b3o2b4o2bob2ob2obo2b4o2b3o2b3o2bobobo$3b3ob2o2b3o2b2o2bob2o2bo2bo2bo2b2obo2b2o2b3o2b2ob3o$5b3obobo2bob3o3bob2o2bobo2b2obo3b3obo2bobob3o$8b4obobo2b2o2bobob2obob2obobo2b2o2bobob4o$5b4o2b3o2bobo2b2ob2o2bobo2b2ob2o2bobo2b3o2b4o$5b2o2b2o2b3obo2b2ob3o2b3o2b3ob2o2bob3o2b2o2b2o$9b4obo2bob2o5b2obob2o5b2obo2bob4o$8b2o2bob6o2b2o2bo5bo2b2o2b6obo2b2o$9b2ob2obo2bo2b5obobobob5o2bo2bob2ob2o$9b5ob2ob3obo3bob3obo3bob3ob2ob5o$11bo2b2obob3o3bo2bobo2bo3b3obob2o2bo$14bob2obo2b5o2bo2b5o2bob2obo$13b2obob2obobo2bob3obo2bobob2obob2o$13b2ob2ob3obob2o2bo2b2obob3ob2ob2o$17b2obob2o2bo2bo2bo2b2obob2o$17bob2obobo2b2ob2o2bobob2obo$18b2ob3ob2ob3ob2ob3ob2o$23b5obob5o$25bo7bo!</pre><canvas width="480" height="480"></canvas></div><h2 id="振荡子"><a href="#振荡子" class="headerlink" title="振荡子"></a>振荡子</h2><p>由于 LifeFind 找不了周期稍大一点的振荡子，我其实也没有多少新的发现。</p><p>随便倒一锅汤，一般都能看到一个周期8的转圈圈。虽然周期有点大，但个头很小，LifeFind 一搜就出来了：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">4</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="string">"Rule"</span> -&gt; <span class="string">"3457/357/5"</span>, <span class="string">"Changing"</span> -&gt; <span class="keyword">True</span>]</span><br></pre></td></tr></table></figure><div class="rle"><pre>x = 4, y = 4, rule = 3457/357/53.$3A$B2A$.CD!</pre><canvas width="480" height="480"></canvas></div><p>原本这就是已知的周期最小的振荡子了。现在有了 LifeFind，可以轻松找到周期5的振荡子（比搜生命游戏里同样大小的振荡子快多了，大概因为是 Generations？）：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">4</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="string">"Rule"</span> -&gt; <span class="string">"3457/357/5"</span>, <span class="string">"Changing"</span> -&gt; <span class="keyword">True</span>]</span><br></pre></td></tr></table></figure><div class="rle"><pre>x = 8, y = 4, rule = 3457/357/5.D.D.AB$4AC2AC$B2A.B2AD$.CD2.A!</pre><canvas width="480" height="480"></canvas></div><p>稍大一点的：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">4</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="string">"Rule"</span> -&gt; <span class="string">"3457/357/5"</span>, <span class="string">"Changing"</span> -&gt; <span class="keyword">True</span>]</span><br></pre></td></tr></table></figure><div class="rle"><pre>x = 7, y = 7, rule = 3457/357/54.CB$3.D3A$4.2A$.BADBA$C2AC$D2AB$2.A!</pre><canvas width="480" height="480"></canvas></div><p>加点对称性条件，能搜到更漂亮的：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">10</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="string">"Rule"</span> -&gt; <span class="string">"3457/357/5"</span>, <span class="string">"Changing"</span> -&gt; <span class="keyword">True</span>, </span><br><span class="line"> <span class="string">"Symmetry"</span> -&gt; <span class="string">"C4"</span>]</span><br></pre></td></tr></table></figure><div class="rle"><pre>x = 10, y = 10, rule = 3457/357/54.D$3.B3A$3.C2AB$.AB.DA.CB$.3A2.D2AD$D2AD2.3A$.BC.AD.BA$3.B2AC$3.3AB$5.D!</pre><canvas width="480" height="480"></canvas></div><p>有一个长得和它很像的周期6：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">10</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="string">"Rule"</span> -&gt; <span class="string">"3457/357/5"</span>, <span class="string">"Changing"</span> -&gt; <span class="keyword">True</span>, </span><br><span class="line"> <span class="string">"Symmetry"</span> -&gt; <span class="string">"C4"</span>]</span><br></pre></td></tr></table></figure><div class="rle"><pre>x = 10, y = 10, rule = 3457/357/54.BA$3.C2A$3.D2A$3.BCDBDC$3AD2.C2AB$B2AC2.D3A$.CDBDCB$4.2AD$4.2AC$4.AB!</pre><canvas width="480" height="480"></canvas></div><p>以上这几个振荡子好像都是周期8转圈圈的变种。当然也有不是的，比如这个两个细胞渐渐消失的振荡子：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">8</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="string">"Rule"</span> -&gt; <span class="string">"3457/357/5"</span>, <span class="string">"Changing"</span> -&gt; <span class="keyword">True</span>, </span><br><span class="line"> <span class="string">"Symmetry"</span> -&gt; <span class="string">"D4X"</span>]</span><br></pre></td></tr></table></figure><div class="rle"><pre>x = 8, y = 8, rule = 3457/357/56b2o$2b2o2b2o$bob3o$b2o2bo$2bo2b2o$2b3obo$2o2b2o$2o!</pre><canvas width="480" height="480"></canvas></div><p>还有很多别的振荡子。但由于最小的周期也有5，搜索较大的振荡子比较困难。这里就不贴出更多结果了。</p><h2 id="飞船"><a href="#飞船" class="headerlink" title="飞船"></a>飞船</h2><p>目前找到的飞船速度还是只有 c/2。不过飞船特别多，也不难搜。</p><p>懒得画背景会动的图了。</p><p>以下是几次输入</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">16</span>, <span class="number">16</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="string">"Rule"</span> -&gt; <span class="string">"3457/357/5"</span>, <span class="string">"Changing"</span> -&gt; <span class="keyword">True</span>, </span><br><span class="line"> <span class="string">"Symmetry"</span> -&gt; <span class="string">"D2|"</span>]</span><br></pre></td></tr></table></figure><p>得到的结果：</p><div class="rle"><pre>x = 16, y = 16, rule = 3457/357/52$3.D.D4.D.D$.DCBC6.CBCD$.B3A.D2BD.3AB$D.ADABA2CABADA.D$BCABAB4ABABACB$5A2C2A2C5A$3A2.6A2.3A$6.A2CA$4.CDA2CADC$4.AB4ABA$4.3A2.3A$5.A4.A!</pre><canvas width="480" height="480"></canvas></div><div class="rle"><pre>x = 16, y = 16, rule = 3457/357/53.D.2A2.2A.D$2.CDC6ACDC$.D.10A.D$CBD4A2.4ADBC$2ABC.BC2ACB.CB2A$.6A2.6A$.2A.AD4ADA.2A$3.4A2.4A$5.AC2ACA$2.DCD2A2.2ADCD$D.BAB2A2D2ABAB.D$BC2A2.A2BA2.2ACB$3A3.4A3.3A$3A4.2A4.3A!</pre><canvas width="480" height="480"></canvas></div><div class="rle"><pre>x = 16, y = 16, rule = 3457/357/5$2.2D8.2D$.CBC.CD2.DC.CBC$.3ADB.2A.BD3A$CDA.A.A2BA.A.ADC$ABACA.4A.ACABA$5A6.5A$.A.2A6.2A.A$.DC.D6.D.CD$.BACB2.2B2.BCAB$2.3AD.2C.D3A$2.3ABC2ACB3A$3.2A.4A.2A!</pre><canvas width="480" height="480"></canvas></div><div class="rle"><pre>x = 16, y = 16, rule = 3457/357/55.BC2.CB$5.2A2.2A$6.4A$DC4.4A4.CD$BAD2BDA2.AD2BDAB$.AB3CA2BA3CBA$.14A$2.A.A.4A.A.A$2.DC.D4.D.CD$.CBACB4.BCABC$.2A.A.C2.C.A.2A$CDACACA2DACACADC$AB5A2B5ABA$3A.A.4A.A.3A$.A5.2A5.A!</pre><canvas width="480" height="480"></canvas></div><p>也能搜胖乎乎圆滚滚的飞船（不过毕竟是飞船，没法很圆，像个大虫子）：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LifeFind[<span class="number">47</span>, <span class="number">47</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="string">"Rule"</span> -&gt; <span class="string">"3457/357/5"</span>, <span class="string">"Symmetry"</span> -&gt; <span class="string">"D2|"</span>,</span><br><span class="line">  <span class="string">"KnownCells"</span> -&gt; &#123;DiskMatrix[23] _&#125;]</span><br></pre></td></tr></table></figure><div class="rle"><pre>x = 47, y = 47, rule = 3457/357/52$18.D9.D$16.D.BC7.CB.D$8.DC5.CBC2A.D3.D.2ACBC5.CD$8.BADC.CD3A.ACB3.BCA.3ADC.CDAB$9.ABA.ABA3.3A3.3A3.ABA.ABA$9.3A.3A3.3A3.3A3.3A.3A$10.A3.A2.D11.D2.A3.A$3.DC.DCD3.DCD.CB.CD5.DC.BC.DCD3.DCD.CD$3.BACBABC.CBABCA.CABC3.CBAC.ACBABC.CBABCAB$4.3AD.AD2A.3ADA.2A3.2A.AD3A.2ADA.D3A$4.3ABCABA.D3ABA.ADC.CDA.AB3AD.ABACB3A$5.2A.4ACB2A.2A.ABA.ABA.2A.2ABC4A.2A$8.D.ADA2.DC2A.3A.3A.2ACD2.ADA.D$6.D.BCABAC.BADAD3A.3ADADAB.CABACB.D$.DC.DCBC.A.3AD.ABABADA.ADABABA.D3A.A.CBCD.CD$.BACBA.ADACA2.BC5ABA.AB5ACB2.ACADA.ABCAB$2.3ADCAB3ADC.ADA2.3A.3A2.ADA.CD3ABACD3A$2.3AB4A.ABADABA.CDA3.ADC.ABADABA.4AB3A$3.2A6.3AB3ACAB5.BAC3AB3A6.2A$6.D.D2.4A2.3A7.3A2.4A2.D.D$3.CDCBCB.D4.CD.2A7.2A.DC4.D.BCBCDC$2.CAB3A.CBCDCDAB.A.C5.C.A.BADCDCBC.3ABAC$CDA.A2DAD3ABAB.ACACADC.CDACACA.BAB3ADA2DA.ADC$ABA.A2BABA3.2AC5ABA.AB5AC2A3.ABA2BA.ABA$3A.6AD.D.3A.A.3A.3A.A.3A.D.D6A.3A$.A3.2A2.AB.B.2A.D3.A3.A3.D.2A.B.BA2.2A3.A$4.C.A.C.ACACADCB2.D5.D2.BCDACACA.C.A.C$2.CDACACAD5ABA.CDBC3.CBDC.AB5ADACACADC$2.AB5ABA.A.3A.AB2A3.2ABA.3A.A.AB5ABA$2.3A.A.2A.D3.A2.3A5.3A2.A3.D.2A.A.3A$3.A3.C.ACBC3.DC3A5.3ACD3.CBCA.C3.A$5.CDAC4A2.CBA4.CDC4.ABC2.4ACADC$5.AB5A3.2A3.CDABADC3.2A3.5ABA$5.3A.A.AC.CA.D.CABDADBAC.D.AC.CA.A.3A$6.A3.CDADA2.BDADABABADADB2.ADADC3.A$10.ABABA2CABAB5ABABA2CABABA$10.3A.8A3.8A.3A$11.A.D4A11.4AD.A$12.CB.D5.D3.D5.D.BC$12.2ACB3.D.BC.CB.D3.BC2A$13.3A3.BC2A.2ACB3.3A$13.3A3.3A3.3A3.3A$19.3A3.3A!</pre><canvas width="480" height="480"></canvas></div>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2018/07/09/Wolfram-Alpha-计算时显示的元胞自动机（一）/&quot; title=&quot;Wolfram|Alpha 计算时显示的元胞自动机（一）&quot;&gt;Wolfram|Alpha 计算时显示的元胞自动机（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2018/08/09/Wolfram-Alpha-计算时显示的元胞自动机（二）/&quot; title=&quot;Wolfram|Alpha 计算时显示的元胞自动机（二）&quot;&gt;Wolfram|Alpha 计算时显示的元胞自动机（二）&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;现在我给 &lt;a href=&quot;https://github.com/AlephAlpha/LifeFind&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;LifeFind&lt;/a&gt; （即前面提到的用来搜索生命游戏中的图样的那个 Mathematica 包）加上了搜索 Generations 规则的功能。于是，它也能够搜 Wolfram|Alpha 的那个元胞自动机。&lt;/p&gt;
&lt;p&gt;搜索速度很慢，而且只能搜周期很小的图样，于是其实没有太多有意思的发现。不过，至少振荡子不再只有那么几个了。&lt;/p&gt;
&lt;p&gt;运行以下的 Mathematica 代码之前先要导入 LifeFind 包（当然，导入之前先要&lt;a href=&quot;https://github.com/AlephAlpha/LifeFind/wiki/%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%AE%89%E8%A3%85&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;安装&lt;/a&gt;）：&lt;/p&gt;
&lt;figure class=&quot;highlight mathematica&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&amp;lt; Life`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;搜索结果是随机的。输入下面的代码来搜索很可能会搜出不同的图样。&lt;/p&gt;
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="生命游戏" scheme="https://AlephAlpha.github.io/tags/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>亚美尼亚的 Ashugh 和 Gusan</title>
    <link href="https://AlephAlpha.github.io/2018/12/24/%E4%BA%9A%E7%BE%8E%E5%B0%BC%E4%BA%9A%E7%9A%84-Ashugh-%E5%92%8C-Gusan/"/>
    <id>https://AlephAlpha.github.io/2018/12/24/亚美尼亚的-Ashugh-和-Gusan/</id>
    <published>2018-12-23T18:32:00.000Z</published>
    <updated>2019-03-13T04:30:29.171Z</updated>
    
    <content type="html"><![CDATA[<p>我完全不懂亚美尼亚语，对亚美尼亚文化也不算了解，这篇文章可能错误很多，欢迎指正。</p><hr><p>Ashugh（աշուղ）和 Gusan（գուսան）这两个词，指的都是亚美尼亚传统的音乐家：他们是诗人，是歌手，也是作曲家。</p><p>Ashugh 是吟游诗人。他们从城市走到城市，从村庄走到村庄，以不同的语言即兴创作。与他们相伴的只有自己的乐器：可能是萨兹琴（սազ，saz），塔尔琴（թառ，tar），也可能是卡曼恰（քամանչա，kamancha）。他们的创作题材多种多样，其中最常见的是爱情。事实上，ashugh 这个词正是来自阿拉伯语 عَاشِق‎ (ʿāšiq)，意思是恋人。</p><a id="more"></a><p>Ashugh 并非亚美尼亚独有。它在格鲁吉亚语里叫 აშუღი（ašuɣi），在阿塞拜疆语里叫 aşıq，在土耳其语里叫 aşık。这一传统可能诞生于土耳其，在17世纪传入亚美尼亚。那时的亚美尼亚已经被奥斯曼土耳其和波斯瓜分。于是，亚美尼亚的 ashugh 音乐不可避免地染上中东的色彩。以上提到的三种乐器都来源于波斯或者土耳其。</p><p>中东的影响还体现在诗歌的署名方式上：他们常常会在诗歌的最后一段提到自己的名字。于是，只要诗歌能传唱下去，人们就不会忘记作者的名字。这种操作也出现在中东的其它诗歌体裁当中。</p><p>亚美尼亚的众多 ashugh 中，最杰出、最有传奇色彩的一位是 Sayat-Nova（Սայաթ-Նովա，1712 - 1795）。他是帕拉贾诺夫导演的苏联电影《石榴的颜色》的男主角。Sayat-Nova 原名 Harutyun Sayatyan（Հարություն Սայադյան）。他出生于第比利斯，曾在格鲁吉亚的王宫中当过宫廷乐师，因与安娜公主相恋而被放逐，最后在亚美尼亚的一家修道院度过余生。他留下的音乐作品以亚美尼亚语、格鲁吉亚语、阿塞拜疆语等多种语言写成。其称号 Sayat-Nova 来自波斯语，是“歌王”的意思。</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/9/9a/Rus_Stamp_Sayat_Nova.jpg" alt="Sayat-Nova，手中拿着一把卡曼恰"></p><p>​与 ashugh 相比，gusan 的中东色彩要淡一些。它的历史也比 ashugh 要长得多。早在五世纪时，亚美尼亚的历史学家 Movses Khorenatsi（Մովսես Խորենացի）就有了关于 gusan 的记录。不过我没有搞清楚这个词的意思。好像几种不同的传统音乐家，从宫廷乐师到民间的吟游诗人，都被称为 gusan。</p><p>现代的 gusan 艺术的奠基人是十九世纪的亚美尼亚音乐家 Gusan Sheram（Գուսան Շերամ，1857 - 1938）。他原名 Grigor Talian（Գրիքոր Թալյան），艺名 Sheram 在亚美尼亚语里是“蚕”的意思。他从小接受的是 ashugh 的训练。从这里开始，ashugh 和 gusan 这两个词就有点纠缠不清了。</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/c/c9/ArmenianStamps-413.jpg" alt="Gusan Sheram，不清楚是什么乐器，可能是萨兹琴"></p><p>在当今的亚美尼亚语中，ashugh 和 gusan 基本上已经是同义词，其中 gusan 这个词比 ashugh 要更加常用。一些传统的 ashugh，比如 Jivani（Ջիվանի，1846 - 1909），有时也被称为 gusan。一些现代的 gusan，比如说 Gusan Ashot（Գուսան Աշոտ，1907 - 1989），也会把自己的名字放在歌词的最后一段。不过，ashugh 和 gusan 还是有一点区别：gusan 经常会在乐团中演出，而 ashugh 永远是孤独的，身边只有自己心爱的萨兹琴，塔尔琴，或者卡曼恰。</p><hr><p>参考资料：</p><ol><li><a href="http://barev.today/news/ashough" target="_blank" rel="noopener">Ашуги</a></li><li><a href="https://sarogps.wordpress.com/2017/08/18/about-armenian-ashugh-tradition/" target="_blank" rel="noopener">About Armenian ashugh tradition</a></li><li>维基百科</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我完全不懂亚美尼亚语，对亚美尼亚文化也不算了解，这篇文章可能错误很多，欢迎指正。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Ashugh（աշուղ）和 Gusan（գուսան）这两个词，指的都是亚美尼亚传统的音乐家：他们是诗人，是歌手，也是作曲家。&lt;/p&gt;
&lt;p&gt;Ashugh 是吟游诗人。他们从城市走到城市，从村庄走到村庄，以不同的语言即兴创作。与他们相伴的只有自己的乐器：可能是萨兹琴（սազ，saz），塔尔琴（թառ，tar），也可能是卡曼恰（քամանչա，kamancha）。他们的创作题材多种多样，其中最常见的是爱情。事实上，ashugh 这个词正是来自阿拉伯语 عَاشِق‎ (ʿāšiq)，意思是恋人。&lt;/p&gt;
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
  </entry>
  
  <entry>
    <title>生命游戏搜索程序汇总</title>
    <link href="https://AlephAlpha.github.io/2018/08/10/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F%E6%90%9C%E7%B4%A2%E7%A8%8B%E5%BA%8F%E6%B1%87%E6%80%BB/"/>
    <id>https://AlephAlpha.github.io/2018/08/10/生命游戏搜索程序汇总/</id>
    <published>2018-08-10T09:52:00.000Z</published>
    <updated>2019-03-12T15:53:28.677Z</updated>
    
    <content type="html"><![CDATA[<div class="table-container"><table><thead><tr><th>名称</th><th>作者</th><th>搜索方式</th><th>编程语言</th><th>平台</th><th>网址</th><th>备注</th></tr></thead><tbody><tr><td><a href="http://conwaylife.com/wiki/Apgsearch" target="_blank" rel="noopener">apgsearch</a> (2.0 以上版本)</td><td>Adam P. Goucher</td><td>汤</td><td>C++</td><td>64 位 Linux</td><td><a href="https://gitlab.com/apgoucher/apgmera" target="_blank" rel="noopener">GitLab</a></td><td></td></tr><tr><td><a href="http://conwaylife.com/wiki/Apgsearch" target="_blank" rel="noopener">apgsearch</a> (1.x 版)</td><td>Adam P. Goucher</td><td>汤</td><td>Python</td><td>Golly 脚本</td><td><a href="https://gol.hatsya.co.uk/apgsearch" target="_blank" rel="noopener">Catagolue</a></td><td></td></tr><tr><td><a href="http://conwaylife.com/wiki/Ikpx" target="_blank" rel="noopener">ikpx</a></td><td>Adam P. Goucher</td><td><a href="https://en.wikipedia.org/wiki/Boolean_satisfiability_problem" target="_blank" rel="noopener">SAT 问题</a></td><td>Python</td><td>跨平台</td><td><a href="https://gitlab.com/apgoucher/metasat" target="_blank" rel="noopener">GitLab</a></td><td>仅支持生命游戏</td></tr><tr><td><a href="http://conwaylife.com/wiki/Logic_Life_Search" target="_blank" rel="noopener">Logic Life Search</a></td><td>Oscar Cunningham</td><td><a href="https://en.wikipedia.org/wiki/Boolean_satisfiability_problem" target="_blank" rel="noopener">SAT 问题</a></td><td>Python</td><td>号称跨平台（Windows 下需要 Cygwin）</td><td><a href="https://github.com/OscarCunningham/logic-life-search" target="_blank" rel="noopener">GitHub</a></td><td>需要自备 SAT Solver</td></tr><tr><td><a href="http://conwaylife.com/wiki/Gfind" target="_blank" rel="noopener">gfind</a></td><td>David Eppstein</td><td>见<a href="http://arxiv.org/abs/cs.AI/0004003" target="_blank" rel="noopener">相关论文</a></td><td>C</td><td>跨平台</td><td><a href="https://www.ics.uci.edu/~eppstein/ca/gfind.c" target="_blank" rel="noopener">代码</a></td><td>专搜飞船</td></tr><tr><td>gsearch</td><td>David Eppstein</td><td>给定范围里的暴力搜索</td><td>C</td><td>跨平台</td><td><a href="https://www.ics.uci.edu/~eppstein/ca/gsearch.c" target="_blank" rel="noopener">代码</a></td><td>很慢</td></tr><tr><td>ofind</td><td>David Eppstein</td><td>类似于gfind</td><td>C</td><td>跨平台</td><td><a href="https://www.ics.uci.edu/~eppstein/ca/ofind.c" target="_blank" rel="noopener">代码</a></td><td>专搜振荡子</td></tr><tr><td><a href="http://conwaylife.com/wiki/Lifesrc" target="_blank" rel="noopener">lifesrc</a></td><td>David Bell</td><td>Dean Hickerson 发明的算法</td><td>C</td><td>跨平台</td><td><a href="http://members.tip.net.au/%7Edbell/programs/lifesrc-3.8.tar.gz" target="_blank" rel="noopener">代码</a></td><td></td></tr><tr><td><a href="http://conwaylife.com/wiki/JavaLifeSearch" target="_blank" rel="noopener">JavaLifeSearch</a></td><td>Karel Suhajda</td><td>同 lifesrc</td><td>Java</td><td>跨平台</td><td><a href="http://conwaylife.com/forums/viewtopic.php?f=9&amp;t=990" target="_blank" rel="noopener">帖子</a></td><td>lifesrc 的 Java 版</td></tr><tr><td><a href="http://conwaylife.com/wiki/WinLifeSearch" target="_blank" rel="noopener">WinLifeSearch</a></td><td>Jason Summers</td><td>同 lifesrc</td><td>C</td><td>Windows</td><td><a href="http://entropymine.com/wls/" target="_blank" rel="noopener">官网</a></td><td>lifesrc 的 Windows（图形界面）版</td></tr><tr><td><a href="http://conwaylife.com/wiki/Catalyst_(search_program" target="_blank" rel="noopener">catalyst</a>)</td><td>Gabriel Nivasch</td><td>静物与给定图样的反应</td><td>C++</td><td>跨平台</td><td><a href="http://www.gabrielnivasch.org/fun/life/catalyst_v10.zip?attredirects=0" target="_blank" rel="noopener">代码</a></td><td>专搜<a href="http://conwaylife.com/wiki/Catalyst" target="_blank" rel="noopener">催化</a></td></tr><tr><td>Random Agar</td><td>Gabriel Nivasch</td><td>类似于汤</td><td>C++</td><td>跨平台</td><td><a href="http://www.gabrielnivasch.org/fun/life/" target="_blank" rel="noopener">代码</a></td><td>专搜琼脂</td></tr><tr><td>CatForce</td><td>simsim314</td><td>暴力搜索？</td><td>C++</td><td>跨平台</td><td><a href="https://github.com/simsim314/CatForce" target="_blank" rel="noopener">Github</a></td><td>专搜<a href="http://conwaylife.com/wiki/Catalyst" target="_blank" rel="noopener">催化</a></td></tr><tr><td>yfind</td><td>strake</td><td><a href="https://en.wikipedia.org/wiki/Satisfiability_modulo_theories" target="_blank" rel="noopener">SMT</a></td><td>Haskell</td><td>跨平台</td><td><a href="https://github.com/strake/yfind" target="_blank" rel="noopener">Github</a></td><td>需要 <a href="https://github.com/Z3Prover/z3" target="_blank" rel="noopener">Z3</a></td></tr><tr><td>zfind</td><td>zdr</td><td>不清楚</td><td>C++</td><td>跨平台</td><td><a href="https://github.com/rokicki/ntzfind" target="_blank" rel="noopener">Github</a></td><td></td></tr><tr><td>life slice ship search</td><td>Andrew Wade</td><td>见其 Readme</td><td>Rust</td><td>Linux</td><td><a href="https://gitlab.com/andrew-j-wade/life_slice_ship_search" target="_blank" rel="noopener">GitLab</a></td></tr></tbody></table></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;作者&lt;/th&gt;
&lt;th&gt;搜索方式&lt;/th&gt;
&lt;th&gt;编程语言&lt;/th&gt;
&lt;th&gt;平台&lt;/th&gt;
&lt;th&gt;网址&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;
      
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="生命游戏" scheme="https://AlephAlpha.github.io/tags/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>Wolfram|Alpha 计算时显示的元胞自动机（二）</title>
    <link href="https://AlephAlpha.github.io/2018/08/09/Wolfram-Alpha-%E8%AE%A1%E7%AE%97%E6%97%B6%E6%98%BE%E7%A4%BA%E7%9A%84%E5%85%83%E8%83%9E%E8%87%AA%E5%8A%A8%E6%9C%BA%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://AlephAlpha.github.io/2018/08/09/Wolfram-Alpha-计算时显示的元胞自动机（二）/</id>
    <published>2018-08-09T05:20:00.000Z</published>
    <updated>2019-03-13T04:30:00.787Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="/2018/07/09/Wolfram-Alpha-计算时显示的元胞自动机（一）/" title="Wolfram|Alpha 计算时显示的元胞自动机（一）">Wolfram|Alpha 计算时显示的元胞自动机（一）</a></li><li><a href="/2019/03/02/Wolfram-Alpha-计算时显示的元胞自动机（三）/" title="Wolfram|Alpha 计算时显示的元胞自动机（三）">Wolfram|Alpha 计算时显示的元胞自动机（三）</a></li></ul><hr><p>这篇文章没什么内容，只是列举一些我们找到的图样。</p><p>原本发在简书时是我自己用 Mathematica 画得的图，转发到这里的时候全部换成 LifeViewer。</p><p>对随机的开局，这个元胞自动机也有可能会稳定下来，但大部分情况下会保持一种乱糟糟的状态，缓慢地无限增长。按照 Wolfram 对元胞自动机的分类，它应该算是 Chaotic 的。</p><a id="more"></a><h1 id="静物"><a href="#静物" class="headerlink" title="静物"></a>静物</h1><p>静物有很多。由于 <code>3457/357/5</code> 规则的静物在 <code>B357/S3457</code> 规则里也是静物，因此可以用《<a href="/2018/05/13/用-Mathematica-搜索生命游戏中的静物（二）/" title="用 Mathematica 搜索生命游戏中的静物（二）">用 Mathematica 搜索生命游戏中的静物（二）</a>》里的代码来搜索。这样可以找到很大的静物，比如说：</p><div class="rle"><pre>x = 64, y = 64, rule = 3457/357/510.2A3.2A7.2A2.2A4.2A6.2A2.2A.A6.2A.2A$.2A2.2A3.2A3.2A7.2A2.2A2.3A.A5.5A.4A.A2.3A.3A$.2A2.2A4.A.2A.2A.2A.2A6.3A.2A.A.2A.A2.A3.2A.4A.A3.2A$2A.2A.A.6A4.2A.2A2.4A2.2A2.3A.2A2.2A2.5A2.3A.A.A$.A.A.4A.A2.3A.A6.2A.A.4A2.4A3.4A.2A2.3A2.3A.3A$A.3A.3A5.A.2A7.3A.A.A7.A.5A3.2A.4A.A3.2A$3A.A.A.7A.A4.2A2.3A.3A3.6A.A.2A3.3A3.A.3A2.2A$.A.A3.A.A2.A2.2A3.A.3A5.A3.A.2A3.2A2.2A4.A2.2A.A.2A2.A$.2A.2A.A.2A.A.A.A.3A.2A2.A.3A3.2A4.A.A2.A3.2A3.3A2.2A.A$3A2.3A.A.A.A.5A5.3A.3A.2A2.4A.2A.A2.A.2A5.3A2.2A$A2.A2.A3.2A2.A3.A2.2A.2A4.A3.3A.A.A.A.A.3A.2A2.4A3.A.A$.4A2.A.2A2.5A.A.2A.A5.3A2.2A.3A.2A.A2.2A.A.A.A.2A.3A$2A2.2A.2A.3A.A.A.A.A2.2A2.2A.A.2A2.2A3.2A.A2.2A.5A2.A3.A$A4.4A.A.2A2.2A2.4A.4A2.A.A.A2.A2.2A.2A.A4.A2.3A3.A$.A2.A.A4.A.A.A2.4A.2A3.A3.9A.A.A2.A5.3A.2A.3A$6A.2A.3A2.4A3.A.4A.3A3.A.A.2A.A.5A3.3A.A.2A.2A$A.2A3.3A.A.3A2.A.A2.2A2.A2.A.A3.A.A2.2A.A4.A.A3.3A.A.A$.A2.2A3.A.2A.2A.5A.2A.2A2.A.4A.A2.A2.3A2.A.2A2.A2.2A3.A$2A2.A.2A.A.2A.A2.2A2.A3.A.2A.2A.2A2.A.5A.4A3.5A.2A.2A$3A.A.5A.2A2.A.A.2A3.A.4A.8A2.A2.2A.A3.A.A.2A.A.A$.A2.2A3.A3.2A.2A2.A3.3A3.A.A2.2A.A.2A2.A2.A5.A2.A3.2A$.A2.2A2.2A3.4A.7A.4A3.2A3.2A2.2A.A2.3A3.5A.3A$2A.2A.3A3.2A2.A.2A.2A.A2.3A.2A.A3.2A2.4A.4A4.A.2A2.A.A$A2.2A.A3.A2.A.3A2.A3.5A2.2A.2A3.2A.8A4.A.A3.A.2A$.A3.3A.3A2.A.A2.A2.3A.6A3.5A2.A.5A2.A.A.A.A.4A$3A.A2.A.A.2A.2A2.2A.3A2.A.A.2A3.A.A3.A2.A.2A2.3A.A.A.2A2.A$.A.2A3.2A3.A.2A.A2.6A3.A.2A.3A.2A.8A.2A2.A.A.A.3A$.2A2.3A.3A2.2A2.4A.A.7A.7A2.2A.A2.A5.2A2.2A2.A$3A2.A.A.A.2A.2A2.2A.3A2.A2.A6.4A2.4A.2A6.3A2.A2.A$.A.2A2.2A2.A2.A4.A3.A2.2A.2A.2A3.2A6.3A3.2A2.A.4A.2A$.A.2A.A2.6A3.A2.2A.2A2.A2.12A4.A3.4A.A2.A2.A$3A.6A.A.A4.2A.2A2.4A2.A2.2A2.A.6A.A.2A.A2.A2.2A2.A$.2A.A4.A2.A.A2.5A.A2.A2.2A.2A2.2A2.A.A2.5A5.2A.2A.3A$.A.3A2.4A.A.A2.A3.2A.A3.4A2.A2.5A.2A3.A4.2A.A.3A.A$3A.2A2.2A2.A2.2A2.4A.A.3A2.A2.6A.A.A2.3A6.2A3.A.A$A4.2A.3A2.3A.2A2.A3.A.A2.2A3.A4.A.2A2.2A3.A2.A.A.3A.2A$.2A.A2.A2.A.2A.A.2A3.A.3A2.2A4.2A2.A2.3A.9A.3A2.3A$2A.7A.A2.A6.2A.A2.2A.A3.3A2.2A4.A.A.A.A.2A.3A.A$2A.A.2A.2A2.A2.2A.6A3.A3.2A2.A.2A2.2A2.2A2.A3.A.2A.6A$2.2A3.A3.3A.3A.2A5.4A.3A4.7A.A.A.A2.2A2.A.A2.2A$2.4A2.A.3A2.3A.A3.4A.A.A3.3A2.A.A3.8A.4A.2A.A$.2A2.2A.2A.A2.A3.2A3.3A2.2A.A2.4A2.A3.A.A4.A.2A2.A.A2.A$A2.2A2.A5.6A5.5A.A.A.2A2.2A4.2A3.A.A.2A.2A.5A$4A.A2.A.3A.A.2A.A2.A2.A.A3.A.A2.3A.3A.A.7A2.A2.3A.2A$.A2.2A.3A.A.2A3.6A3.3A.6A.A.A.4A.2A2.A2.A2.A4.A$.2A3.A2.A.2A.3A2.A2.A4.2A.A5.A2.4A10.2A.5A2.A$2A.2A2.A.A.A3.3A6.A3.A.6A2.2A3.3A.2A5.A2.A.2A.2A$2A.A.2A.A.4A3.2A4.6A.A2.A2.2A2.4A.2A.3A2.A.A2.A3.A$.A.2A.A2.A2.2A.2A.3A2.2A.A.2A6.2A2.2A.3A.2A.7A.A3.A$.2A.2A2.2A3.3A.2A.3A3.3A.6A.2A.A2.3A.A.A3.A2.4A.3A$2A.2A.2A.2A2.A2.2A.A.4A2.A.2A.A.A.2A.A.A2.2A.A.4A.2A.A2.2A.A$.A.A.2A.2A2.3A5.4A.3A.2A2.A3.2A2.2A2.2A.2A2.A2.A.2A3.A$.A.2A2.2A.A.2A.2A.2A.A.A.A.A.A.A.2A.A.2A2.A.A2.A.A.2A2.A.3A.A$3A.4A.2A2.A.3A.A.4A.A.2A.4A.2A2.8A.A2.A.2A.A2.3A$A.2A2.A4.A2.2A2.3A.A.3A2.A.4A.2A2.2A2.A3.7A.3A3.A$.A2.A.A4.2A.A3.A5.6A.2A.A.A4.A.2A.A3.2A5.3A.3A$2A2.3A.2A.A2.4A5.A3.A.A.4A.A4.7A.4A4.A2.2A.A$A.2A.A2.8A.2A2.3A2.2A2.2A2.2A.2A3.A2.A.2A.A2.A.2A3.A.A$.4A.A3.A3.A2.2A2.2A.6A.A.2A.A.5A.2A2.2A.4A.A.A.A.2A$3.A.A.2A.2A3.A2.2A.3A.A3.A.3A.3A.2A.A2.4A.A.2A.7A.A$6.A.3A3.3A3.A.A5.3A11.A2.A.A.3A4.3A2.2A$2A2.2A5.A2.2A.2A2.2A4.A3.A5.2A.3A.2A5.A4.A.A.2A$2A2.3A.6A.A.A.2A.2A.9A.4A.2A.A.4A.3A2.7A$6.2A.2A2.2A3.2A.2A.2A2.2A2.2A.2A7.2A2.2A.2A2.2A2.A!</pre><canvas width="480" height="480"></canvas></div><p>因此我无法，也没有必要去列举找到的所有静物。</p><p>最常见的静物是方块：</p><div class="rle"><pre>x = 2, y = 2, rule = 3457/357/52A$2A!</pre><canvas width="480" height="480"></canvas></div><p>或者两个方块相连：</p><div class="rle"><pre>x = 4, y = 3, rule = 3457/357/52.2A$4A$2A!</pre><canvas width="480" height="480"></canvas></div><p>或者三个：</p><div class="rle"><pre>x = 5, y = 4, rule = 3457/357/52.2A$2.2A$2A.2A$2A.2A!</pre><canvas width="480" height="480"></canvas></div><p>或者更多……</p><p>最常见的一个不是由多个方块组成的静物是这个：</p><div class="rle"><pre>x = 5, y = 5, rule = 3457/357/52.2A$2.2A$2A.2A$3A.A$2.2A!</pre><canvas width="480" height="480"></canvas></div><p>也有一些稍大一点的对称的静物，比如说：</p><div class="rle"><pre>x = 10, y = 10, rule = 3457/357/54.2A$2.6A$.A.A2.A.A$.2A.2A.2A$2A.A2.A.2A$2A.A2.A.2A$.2A.2A.2A$.A.A2.A.A$2.6A$4.2A!</pre><canvas width="480" height="480"></canvas></div><h1 id="振荡子"><a href="#振荡子" class="headerlink" title="振荡子"></a>振荡子</h1><p>由于一个活的细胞至少要过4代才能死掉，因此不存在周期小于5的振荡子。</p><p>目前发现的振荡子不多，而且没法转换成 Life-like 的情形来搜索。</p><p>最常见的振荡子是这个周期8的转圈圈：</p><div class="rle"><pre>x = 3, y = 3, rule = 3457/357/53A$B2A$.CD!</pre><canvas width="480" height="480"></canvas></div><p>第二常见的是这个周期26的梭：</p><div class="rle"><pre>x = 5, y = 5, rule = 3457/357/52.A$.2AB$3ADC$.2AB$2.A!</pre><canvas width="480" height="480"></canvas></div><p>然后还找到这个周期15的：</p><div class="rle"><pre>x = 9, y = 9, rule = 3457/357/53.3A$3.3A$3.ACA$3A.A.3A$2ACA.AC2A$3A.A.3A$3.ACA$3.3A$3.3A!</pre><canvas width="480" height="480"></canvas></div><p>以及这个周期18的：</p><div class="rle"><pre>x = 5, y = 5, rule = 3457/357/52.B$3AC$2ADAB$3AC$2.B!</pre><canvas width="480" height="480"></canvas></div><p>在我以为再也发现不了什么新的振荡子的时候，<a href="https://github.com/HuntingBot" target="_blank" rel="noopener">Hunting</a> 发现，两个梭相撞有时也能得到新的振荡子，比如说：</p><div class="rle"><pre>x = 13, y = 6, rule = 3457/357/52.A$.B2A6.A$CD3A4.2AB$.B2A4.3ADC$2.A6.2AB$10.A!</pre><canvas width="480" height="480"></canvas></div><p>后来，<a href="http://www.conwaylife.com/forums/viewtopic.php?f=11&amp;t=2409&amp;p=68221#p68221" target="_blank" rel="noopener">ConwayLife.com</a> 上的 <a href="http://www.conwaylife.com/forums/memberlist.php?mode=viewprofile&amp;u=1857" target="_blank" rel="noopener">danny</a> 还发现了一个周期 10 的振荡子：</p><div class="rle"><pre>x = 9, y = 9, rule = 3457/357/54.DC$4.3A$3.2AB.A$2.A.A.BAC$D3A.3AD$CAB.A.A$.A.B2A$2.3A$3.CD!</pre><canvas width="480" height="480"></canvas></div><p>在我给 LifeFind 添加上搜索 Generations 的规则的功能之前，找到的振荡子就这么多。</p><h1 id="飞船"><a href="#飞船" class="headerlink" title="飞船"></a>飞船</h1><p>已经找到好几架飞船，但速度都是c/2。</p><p>最常见的飞船是这个周期2的：</p><div class="rle"><pre>x = 5, y = 4, rule = 3457/357/5.CA$DB3A$2.C2A$.DB2A!</pre><canvas width="480" height="480"></canvas></div><p>以及这个，也是周期2：</p><div class="rle"><pre>x = 5, y = 6, rule = 3457/357/5.CA$DB3A$2.C2A$2.C2A$DB3A$.CA!</pre><canvas width="480" height="480"></canvas></div><p>这个不知道该算一架飞船还是两架：</p><div class="rle"><pre>x = 5, y = 9, rule = 3457/357/5.CA$DB3A$2.C2A$.DB2A2$.DB2A$2.C2A$DB3A$.CA!</pre><canvas width="480" height="480"></canvas></div><p>别的飞船的头部都和上面这些飞船一样，只是尾部有些区别。</p><p>比如说这个周期4的：</p><div class="rle"><pre>x = 8, y = 6, rule = 3457/357/54.CA$.BADB3A$BC2A.C2A$BC2A.C2A$.BADB3A$4.CA!</pre><canvas width="480" height="480"></canvas></div><p>这个也是周期4：</p><div class="rle"><pre>x = 9, y = 9, rule = 3457/357/55.CA$2.BADB3A$.AC2A.C2A$DB3ADB2A2$DB3ADB2A$.AC2A.C2A$2.BADB3A$5.CA!</pre><canvas width="480" height="480"></canvas></div><p>还是周期4：</p><div class="rle"><pre>x = 9, y = 12, rule = 3457/357/55.CA$4.DB3A$3.CA.C2A$.CD2A.C2A$.BD6A$BC2A2DA$BC2A2DA$.BD6A$.CD2A.C2A$3.CA.C2A$4.DB3A$5.CA!</pre><canvas width="480" height="480"></canvas></div><p>最后这个是周期8：</p><div class="rle"><pre>x = 8, y = 10, rule = 3457/357/54.CA$3.DB3A$2.CA.C2A$DABA.C2A$8A$.2B2DA$ABA2DA$AC6A$BA.A.C2A$4.DB2A!</pre><canvas width="480" height="480"></canvas></div><p>在给 LifeFind 添加上搜索 Generations 的规则的功能之前，找到的飞船就这些。</p><h1 id="Puffer"><a href="#Puffer" class="headerlink" title="Puffer"></a>Puffer</h1><p>Puffer 这个词不知道怎么翻译……河豚？蒸汽机车？喷气者？</p><p>目前发现的好看的 puffer 只有两个。</p><p>这个周期是28：</p><div class="rle"><pre>x = 8, y = 18, rule = 3457/357/54.CA$3.DB3A$2.CA.C2A$DABA.C2A$.AB5A$2.A2DA$2.A2DA$.7A$2ADA.C2A$2ADA.C2A$.7A$2.A2DA$2.A2DA$.AB5A$DABA.C2A$2.CA.C2A$3.DB3A$4.CA!</pre><canvas width="480" height="480"></canvas></div><p>这个周期是64：</p><div class="rle"><pre>x = 13, y = 24, rule = 3457/357/59.CA$8.DB3A$3.DCA.CA.C2A$2.C.5A.C2A$2.DB3AC5A$2.C2.2BA2DA$3.4AB2DA$.DA.9A$2.2A.A2DA.C2A$.2AC2A2DA.C2A$D2A2C8A$D2A2CA2C2DA$D2A2CA2C2DA$D2A2C8A$.2AC2A2DA.C2A$2.2A.A2DA.C2A$.DA.9A$3.4AB2DA$2.C2.2BA2DA$2.DB3AC5A$2.C.5A.C2A$3.DCA.CA.C2A$8.DB3A$9.CA!</pre><canvas width="480" height="480"></canvas></div><p>还有别的 puffer，但后面喷出的东西很不规则，而且无法稳定下来，并不好看。它们的速度基本上都是 c/2，“头部”也类似于上面的这些飞船和 puffer。目前发现的唯一例外是一个 (2,14)c/46 的斜 puffer（也就是说，每46代向下移动2格，向右移动14格）：</p><div class="rle"><pre>x = 4, y = 5, rule = 3457/357/52.BA$.C2A$D.CA$.3A$.2A!</pre><canvas width="480" height="480"></canvas></div><h1 id="复制子？"><a href="#复制子？" class="headerlink" title="复制子？"></a>复制子？</h1><p>除了以上这些东西之外，还有一个比较有趣的图样。它差点就能成为一个复制子了，不过复制了十几代之后就乱了。</p><div class="rle"><pre>x = 5, y = 5, rule = 3457/357/52.A$.BAB$2AC2A$.3A$.3A!</pre><canvas width="480" height="480"></canvas></div>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2018/07/09/Wolfram-Alpha-计算时显示的元胞自动机（一）/&quot; title=&quot;Wolfram|Alpha 计算时显示的元胞自动机（一）&quot;&gt;Wolfram|Alpha 计算时显示的元胞自动机（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2019/03/02/Wolfram-Alpha-计算时显示的元胞自动机（三）/&quot; title=&quot;Wolfram|Alpha 计算时显示的元胞自动机（三）&quot;&gt;Wolfram|Alpha 计算时显示的元胞自动机（三）&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;这篇文章没什么内容，只是列举一些我们找到的图样。&lt;/p&gt;
&lt;p&gt;原本发在简书时是我自己用 Mathematica 画得的图，转发到这里的时候全部换成 LifeViewer。&lt;/p&gt;
&lt;p&gt;对随机的开局，这个元胞自动机也有可能会稳定下来，但大部分情况下会保持一种乱糟糟的状态，缓慢地无限增长。按照 Wolfram 对元胞自动机的分类，它应该算是 Chaotic 的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="Mathematica" scheme="https://AlephAlpha.github.io/tags/Mathematica/"/>
    
      <category term="生命游戏" scheme="https://AlephAlpha.github.io/tags/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>维基百科的新年图标</title>
    <link href="https://AlephAlpha.github.io/2018/07/14/%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91%E7%9A%84%E6%96%B0%E5%B9%B4%E5%9B%BE%E6%A0%87/"/>
    <id>https://AlephAlpha.github.io/2018/07/14/维基百科的新年图标/</id>
    <published>2018-07-13T16:59:00.000Z</published>
    <updated>2019-03-13T05:15:21.842Z</updated>
    
    <content type="html"><![CDATA[<p>第一次发现俄语维基百科的新年图标是在2013年1月3日。当时我在果壳的维基百科小组发了这么一个帖子：<a href="https://www.guokr.com/post/422989/" target="_blank" rel="noopener">《俄文维基的新图标》</a>。帖子中的图片是外链，现在已看不到原来的图标，只记得那是维基的球上冻了一层冰块（参见下文中2015年塞尔维亚语维基的图标）。我还不明白这个图标的意义，但<a href="https://www.guokr.com/group/i/0418764210/" target="_blank" rel="noopener">mraandtux</a>在回帖中猜测：</p><blockquote><p>冬季特别Logo（恭喜俄文维基“渡劫”成功）？</p></blockquote><p><a href="https://www.guokr.com/group/i/0317228613/" target="_blank" rel="noopener">燃玉</a>的猜测则是：</p><blockquote><p>难道是抗议某法案？</p></blockquote><a id="more"></a><hr><p>我不懂俄语，很少去俄语维基，不知道它是什么时候恢复到了原本的图标。一年过去了，我发现又换上了新的图标。这次我觉得它应该是新年图标，并在果壳发了这么一个帖子：<a href="https://www.guokr.com/post/549833/" target="_blank" rel="noopener">《俄文维基的新年图标》</a>。发帖日期正好是2014年1月1日，帖子中保留了当时的图标：</p><p><img src="https://upload-images.jianshu.io/upload_images/1770625-5e10e40e350929b8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2014年俄语维基的新年图标"></p><hr><p>又过了一年，我不知为什么又觉得它应该是冬天的图标，可能是因为图标中的元素都与冬季有关。在2015年1月3日，我发了这么一个帖子：<a href="https://www.guokr.com/post/654448/" target="_blank" rel="noopener">《冬天的维基百科图标》</a>。这次俄语维基的图标变成了这样：</p><p><img src="https://upload-images.jianshu.io/upload_images/1770625-7a5b2b74583bd455.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2015年俄语维基的新年图标"></p><p>除了俄语，我又发现另外几种语言的维基百科也换了图标：</p><p><img src="https://upload-images.jianshu.io/upload_images/1770625-84dad57400b2be6b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2015年亚美尼亚语维基的新年图标"></p><p><img src="https://upload-images.jianshu.io/upload_images/1770625-b7a1e24be97b58b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2015年格鲁吉亚语维基的新年图标"></p><p><img src="https://upload-images.jianshu.io/upload_images/1770625-f77d2611d85de438.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2015年斯洛伐克语维基的新年图标"></p><p><img src="https://upload-images.jianshu.io/upload_images/1770625-513f7255ec472998.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2015年塞尔维亚语维基的新年图标"></p><hr><p>为了弄清楚这到底是冬季图标还是新年图标，我在2016年新年来临之前就开始关注俄语维基，发现他们对十几种图标进行了投票，而且用的词是<em>Новогодний логотип</em>（新年图标）。投票的结果是沿用了2015年的图标。这一切记录在我发表于2015年12月30日的<a href="https://www.guokr.com/post/714738/" target="_blank" rel="noopener">《2016年维基百科的新年图标》</a>一帖中。</p><p><img src="https://upload-images.jianshu.io/upload_images/1770625-f000e5b15bc5a83d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2016年俄语维基的新年图标"></p><p>落选的图标中，我觉得最萌的是这两个（这鸟是<a href="http://www.guokr.com/post/670235/" target="_blank" rel="noopener">红腹灰雀</a>，俄语叫<em>снегирь</em>，这词和雪<em>снег</em>同源）：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-9bbbe8631c106f7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2016年俄语维基的落选图标"></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-324e49b35c0ddce2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2016年俄语维基的落选图标"></p><p>一天之后（12月31日），另外两种语言也换上了新图标。格鲁吉亚语沿用了上一年的图标，亚美尼亚语则加了个硕大的2016。</p><p><img src="https://upload-images.jianshu.io/upload_images/1770625-c1b5dbda7cc26ffd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2016年亚美尼亚语维基的新年图标"></p><p><img src="https://upload-images.jianshu.io/upload_images/1770625-836e348778971f2a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2016年格鲁吉亚语维基的新年图标"></p><hr><p><a href="https://www.guokr.com/post/768443/" target="_blank" rel="noopener">《2017年的新年图标》</a>一帖发表于2017年1月2日。这一词好像亚美尼亚语维基也没有换图标，俄语维基则继续沿用了上一年的图标。</p><p><img src="https://upload-images.jianshu.io/upload_images/1770625-d6992937ef45c403.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2017年俄语维基的新年图标"></p><p>格鲁吉亚语的比较萌：</p><p><img src="https://upload-images.jianshu.io/upload_images/1770625-64768429cfbdbdf7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018年格鲁吉亚语维基的新年图标"></p><hr><p>2018年的帖子<a href="https://www.guokr.com/post/815423/" target="_blank" rel="noopener">《2018年的新年图标》</a>最早发表于2017年12月29日。此时已有三种语言的维基百科换上了新图标。</p><p>亚美尼亚语维基百科沿用了2015年的设计，改了下帽子的大小和字体：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-121f432ab61dcb7e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018年亚美尼亚语维基的新年图标"></p><p>克罗地亚语维基百科用的是2015年格鲁吉亚语维基百科的设计（不知道谁抄的谁）：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-62e7f45bc789e0be.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018年克罗地亚语维基的新年图标"></p><p>马其顿语维基百科用的是2015年塞尔维亚语维基百科的设计（也不知道谁抄的谁，维基百科的名字在这两种语言里是一模一样的，只有斜体的<em>п</em>的写法不一样。）：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-e2bed7f2336ef36b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018年马其顿语维基的新年图标"></p><p>到了12月31日，格鲁吉亚维基百科也换上了新图标，沿用了上一年的图标，好像没改：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-c7662cd46b344920.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018年格鲁吉亚语维基的新年图标"></p><p>俄语维基的新年图标则姗姗来迟。在其投票页面中，我看到了下面候选图标：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-1bdbcee1ce3b61a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018年俄语维基的候选图标"> </p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-19e6d8d0f3b498be.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018年俄语维基的候选图标"></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-acb0e43b869e9dad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018年俄语维基的候选图标"></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-3429cc3993574026.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018年俄语维基的候选图标"></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-4262a9d5851751d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018年俄语维基的候选图标"></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-dfa7403b6d6c2843.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018年俄语维基的候选图标"></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-be014634056134bb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018年俄语维基的候选图标"> </p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-2f1dfa05644c8654.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018年俄语维基的候选图标"></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-80953b1862f397c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018年俄语维基的候选图标"></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-8bfbdfcc8b42cf75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018年俄语维基的候选图标"></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-0220c397dd397e99.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018年俄语维基的候选图标"></p><p>有几个上面是“袓”字而不是“维”字，包括马其顿语维基百科采用的那个，看来历史是相当悠久了。其中我最喜欢的还是红腹灰雀的那个。</p><p>到了1月1日，俄语维基终于换上了新年图标：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-d631474c1b404beb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018年俄语维基的新年图标"></p><hr><p>到了2019年的新年，果壳网大概已经不在了吧。不知道那时维基百科的新年图标又会变成怎么样。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一次发现俄语维基百科的新年图标是在2013年1月3日。当时我在果壳的维基百科小组发了这么一个帖子：&lt;a href=&quot;https://www.guokr.com/post/422989/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《俄文维基的新图标》&lt;/a&gt;。帖子中的图片是外链，现在已看不到原来的图标，只记得那是维基的球上冻了一层冰块（参见下文中2015年塞尔维亚语维基的图标）。我还不明白这个图标的意义，但&lt;a href=&quot;https://www.guokr.com/group/i/0418764210/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;mraandtux&lt;/a&gt;在回帖中猜测：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;冬季特别Logo（恭喜俄文维基“渡劫”成功）？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.guokr.com/group/i/0317228613/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;燃玉&lt;/a&gt;的猜测则是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;难道是抗议某法案？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="果壳搬运" scheme="https://AlephAlpha.github.io/tags/%E6%9E%9C%E5%A3%B3%E6%90%AC%E8%BF%90/"/>
    
      <category term="维基百科" scheme="https://AlephAlpha.github.io/tags/%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91/"/>
    
  </entry>
  
  <entry>
    <title>Wolfram|Alpha 计算时显示的元胞自动机（一）</title>
    <link href="https://AlephAlpha.github.io/2018/07/09/Wolfram-Alpha-%E8%AE%A1%E7%AE%97%E6%97%B6%E6%98%BE%E7%A4%BA%E7%9A%84%E5%85%83%E8%83%9E%E8%87%AA%E5%8A%A8%E6%9C%BA%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://AlephAlpha.github.io/2018/07/09/Wolfram-Alpha-计算时显示的元胞自动机（一）/</id>
    <published>2018-07-09T12:39:00.000Z</published>
    <updated>2019-03-13T04:31:59.126Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="/2018/08/09/Wolfram-Alpha-计算时显示的元胞自动机（二）/" title="Wolfram|Alpha 计算时显示的元胞自动机（二）">Wolfram|Alpha 计算时显示的元胞自动机（二）</a></li><li><a href="/2019/03/02/Wolfram-Alpha-计算时显示的元胞自动机（三）/" title="Wolfram|Alpha 计算时显示的元胞自动机（三）">Wolfram|Alpha 计算时显示的元胞自动机（三）</a></li></ul><hr><p>果壳网已完，不知道我发过的帖子什么时候会消失，于是我要把它们搬到简书。</p><p>（注：在搬到新的博客的时候，这个帖子，以及整个果壳小组，都已经消失了。）</p><p>但这篇不是搬运，只是想说一下<a href="https://www.guokr.com/post/558717/" target="_blank" rel="noopener">这个帖子</a>背后的故事……以及代码。</p><hr><p><a href="http://www.wolframalpha.com/" target="_blank" rel="noopener">Wolfram|Alpha</a> 在显示计算或查询的结果之前，往往需要思考一番。几年前，它在思考过程的中会显示一个漂亮的图案。现在那个图案已经变成了一个无聊的 <code>COMPUTING...</code>，不过网上还是留下了一点痕迹，比如说知乎的这个问题：<a href="https://www.zhihu.com/question/38451613" target="_blank" rel="noopener">Wolfram|Alpha在搜索时出现的图案有什么含义?</a>和 StackOverflow 的这个问题：<a href="https://stackoverflow.com/q/27332460/2756937" target="_blank" rel="noopener">What is the cellular automaton shown as loading screen on Wolfram Alpha?</a></p><p>我也一直想知道这是什么图案。它显然是一个元胞自动机，大小不同的点表示不同的状态；而且状态不止一种，因此肯定不是生命游戏，也不是生命游戏家族（<a href="https://en.wikipedia.org/wiki/Life-like_cellular_automaton" target="_blank" rel="noopener">Life-like</a>）的规则。但它思考的速度太快，我总是来不及看清它到底是什么规则。</p><a id="more"></a><p>直到有一天，我在人人网上——当时人人网还不是直播平台——看到这么一个截图：</p><p><img src="https://upload-images.jianshu.io/upload_images/1770625-e0b20d78f3d9817b.gif?imageMogr2/auto-orient/strip" alt="Wolfram|Alpha 的元胞自动机。忘了是哪位同学的截图。"></p><p>不知那位同学用的是什么截图工具，能够截得这么清晰，而且没有掉帧。总之，有了这个截图，我就能把它导入到 Mathematica，一帧一帧地慢慢看……并不能看出它是什么规则，甚至不能看清它有几种状态——最小的两种点个头差不多，只是颜色的深浅稍稍有点区别，肉眼不容易看清。不过我还是看出了一点规律：稍大一点的点会变得越来越大，直到爆掉，消失。而且，我还看到了这个一个振荡子：</p><p><img src="https://upload-images.jianshu.io/upload_images/1770625-11e4a70a70ef8fec.gif?imageMogr2/auto-orient/strip" alt="一个周期8的小振荡子。我想给它起名叫 Loading。"></p><p>除了 Life-like 的规则，还有什么规则？我在 Golly （最好的元胞自动机模拟器，没有之一）的帮助里看到了一类叫 <a href="http://golly.sourceforge.net/Help/Algorithms/Generations.html" target="_blank" rel="noopener">Generations</a> 的规则，觉得和这个有点像。不过那里给的几个 Generations 规则的例子和 Wolfram|Alpha 的这个元胞自动机都对不上。</p><p>Generations 的规则和 Life-like 的规则类似，每个细胞也有死活两种状态，下一回合的状态由这一回合的死活、以及与它相邻的活细胞的个数来决定。与 Life-like 不同的是，活细胞在临死之前，还能苟延残喘几个回合，但死亡的过程并不受周围的细胞影响，最终也无法摆脱死亡的命运。</p><p>比如说，那个叫 Frogs 的元胞自动机，规则按 Golly 的写法是 <code>12/34/3</code>。最后这个数字 <code>3</code> 表示它有三种状态：一个是死，一个是活，一个是正在死亡。也就是说，一个活细胞在临死前只能多活一个回合。前面的 <code>12</code> 说的是：一个活细胞要想继续好好活着，八个邻居里活细胞的个数必须是1或者2； <code>34</code> 的意思则是：一个已经死掉的细胞要想活过来，周围的活细胞个数必须是3或者4。</p><p><img src="https://upload-images.jianshu.io/upload_images/1770625-0969b4819fee46e2.gif?imageMogr2/auto-orient/strip" alt="Frogs 规则因图中的这个像青蛙一样跳跃前进的飞船而得名。小点、大点和没有点分别代表活细胞、半死的细胞和死透了的细胞。"></p><p>Wolfram|Alpha 的元胞自动机应该也是 Generations 一类，但肉眼不容易看出具体是什么规则。不过不要紧，我们还有 Mathematica。直接看不出，我们就把图片二值化了看，拆成一个个连通分支来看，数清了每个点周围的活细胞个数再看。</p><p>当年的代码我没有留着。下面的代码都是新写的，用了不少这几年才引进的新函数。</p><hr><p>首先当然是导入图片并去掉重复帧。我一开始没发现截图中有重复帧，导致结果很奇怪，还以为它不是 Generations 的规则。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CA = <span class="keyword">First</span> /@ <span class="keyword">Split</span>@<span class="keyword">Import</span>[<span class="string">"WolframAlphaCA.gif"</span>];</span><br></pre></td></tr></table></figure><p>先试着把第一帧二值化一下，发现它还有一个框框：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Binarize</span>[CA[[<span class="number">1</span>]]]</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/1770625-412fbded84edcd35.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="不二值化的话根本看不出这截图还戴黑框。"></p><p>摘掉黑框再二值化。二值化的阈值不能太低，以免最小的点消失；也不能太高，以免相邻的点连起来。试了好几个数，<code>0.85</code> 是最合适的。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Binarize</span>[<span class="keyword">ImagePad</span>[#, -<span class="keyword">BorderDimensions</span>@#], <span class="number">0.85</span>] &amp;@CA[[<span class="number">1</span>]]</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/1770625-9c38605d7dcb8808.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="这只是第一帧二值化的结果。"></p><p>看起来不错。于是我就把每一帧都二值化了。顺手还给它们反个色，以方便下一步处理。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CABinarized = <span class="number">1</span> - <span class="keyword">Binarize</span>[<span class="keyword">ImagePad</span>[#, -<span class="keyword">BorderDimensions</span>@#], <span class="number">0.85</span>] &amp; /@ CA;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/1770625-f9095bbc8fcecf20.gif?imageMogr2/auto-orient/strip" alt="这样好看多了。"></p><p>现在每个细胞——死细胞不算——是这个图片的一个连通分支。细胞的状态对应于连通分支的大小。于是可以用上 <a href="https://reference.wolfram.com/language/ref/ComponentMeasurements.html" target="_blank" rel="noopener"><code>ComponentMeasurements</code></a> 函数。</p><p>先来看看这些细胞的位置。还是先看第一帧，算出所有连通分支的重心，把所有的横坐标和所有的纵坐标分别从小到大排列：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Union</span> /@ <span class="keyword">Transpose</span>[<span class="keyword">Last</span> /@ <span class="keyword">ComponentMeasurements</span>[CABinarized[[<span class="number">1</span>]], <span class="string">"Centroid"</span>]]</span><br></pre></td></tr></table></figure><p>结果是：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;8.5, 18.5, 28.5, 38.5, 48.5, 58.5, 68.5, 78.5, 88.5, 98.5, 108.5, </span><br><span class="line">  118.5, 128.5, 138.5, 148.5, 158.5, 168.5, 178.5, 188.5, 198.5, </span><br><span class="line">  208.5, 218.5, 228.5, 238.5, 248.5, 258.5, 268.5, 278.5, 288.5, </span><br><span class="line">  358.5, 368.5, 378.5, 388.5, 398.5, 408.5, 418.5, 428.5, 438.5, </span><br><span class="line">  448.5, 458.5, 468.5, 478.5, 488.5, 498.5, 508.5, 518.5, 528.5, </span><br><span class="line">  538.5, 548.5, 558.5, 568.5, 578.5, 588.5, 598.5, 608.5, 618.5, </span><br><span class="line">  628.5, 638.5, 648.5&#125;,</span><br><span class="line"> &#123;12., 12.2193, 21.5, 22., 31.5, 32., 41.5, 42., 51.5, 52., 61.5, 62., </span><br><span class="line">  71.5, 72., 81.5, 82., 91.5, 92., 101.5, 102., 111.5, 112., 121.5, </span><br><span class="line">  122., 131.5, 132., 141.5, 142., 151.5, 152., 161.5, 162., 171.5, </span><br><span class="line">  172., 181.5, 182., 191.5, 192., 201.5, 202., 211.5, 212., 221.5, </span><br><span class="line">  222., 231.5, 232., 241.5, 242., 251.5, 252., 261.5, 262., 271.5, </span><br><span class="line">  272., 281.5, 282., 291.5, 292., 301.5, 302., 311.5, 312., 321.5, </span><br><span class="line">  322., 331.5, 332., 341.5, 342., 351.5, 352., 361.5, 362., 372.&#125;&#125;</span><br></pre></td></tr></table></figure><p>可以看出相邻的两个点之间大概差10个像素，整个图片中的细胞个数是 65 × 37。这里出现了一个很奇怪的 <code>12.2193</code>，是因为最下面一排有一个点只露出了大半。为了避免这种问题，我去掉了最外面的一圈细胞，只取重心的横坐标在 15 和 645 之间，纵坐标在 15 和365 之间的那些连通分支。</p><p>然后看连通分支的大小。取了一下 <code>Union</code>，发现图片的每一帧，在去掉了最外面的一圈细胞之后，连通分支的大小都只有 <code>{6, 9, 37, 69}</code> 这么四种：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Union</span>[<span class="keyword">Last</span> /@ </span><br><span class="line">    <span class="keyword">ComponentMeasurements</span>[#, <span class="string">"Count"</span>, </span><br><span class="line">     <span class="number">15</span> &lt; #Centroid[[<span class="number">1</span>]] &lt; <span class="number">645</span> &amp;&amp; </span><br><span class="line">       <span class="number">15</span> &lt; #Centroid[[<span class="number">2</span>]] &lt; <span class="number">365</span> &amp;]] &amp; /@ CABinarized</span><br></pre></td></tr></table></figure><p>于是这四种不同大小的活细胞和濒死的细胞，再加上死细胞，一共有五种状态。最初的截图里分不太清的两种状态，在这里分别对应 <code>6</code> 和 <code>9</code>。</p><p>然后我们可以把这些图片化成代表细胞状态的数组，把 <code>{6, 9, 37, 69}</code> 分别换成 <code>{1, 2, 3, 4}</code>，死细胞还是用 <code>0</code> 表示。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CAArray = </span><br><span class="line">  <span class="keyword">SparseArray</span>[</span><br><span class="line">     <span class="keyword">Round</span>[(#[[<span class="number">2</span>, <span class="number">1</span>]] - &#123;8.5, 12&#125;)/<span class="number">10</span>] -&gt; (#[[<span class="number">2</span>, <span class="number">2</span>]] /. </span><br><span class="line">          <span class="keyword">Thread</span>[&#123;6, 9, 37, 69&#125; -&gt; <span class="keyword">Range</span>@<span class="number">4</span>]) &amp; /@ </span><br><span class="line">      <span class="keyword">ComponentMeasurements</span>[#, &#123;"Centroid", "Count"&#125;, </span><br><span class="line">       <span class="number">15</span> &lt; #Centroid[[<span class="number">1</span>]] &lt; <span class="number">645</span> &amp;&amp; <span class="number">15</span> &lt; #Centroid[[<span class="number">2</span>]] &lt; <span class="number">365</span> &amp;],</span><br><span class="line">     &#123;63, 35&#125;] &amp; /@ CABinarized;</span><br></pre></td></tr></table></figure><p>如果它真的是 Generations 的规则，每个细胞在下一回合的状态就完全由它在这一回合的状态和周围的活细胞的个数来决定。于是来算一算，看看是否如此：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Union</span>@<span class="keyword">Flatten</span>@</span><br><span class="line">  BlockMap[&#123;#[[1, 2, 2]], Count[#[[1]], 1, &#123;2&#125;]&#125; -&gt; #[[<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>]] &amp;, </span><br><span class="line">   CAArray, &#123;2, 3, 3&#125;, <span class="number">1</span>]</span><br></pre></td></tr></table></figure><p>结果是：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;0, 0&#125; -&gt; <span class="number">0</span>, &#123;0, 1&#125; -&gt; <span class="number">0</span>, &#123;0, 2&#125; -&gt; <span class="number">0</span>, &#123;0, 3&#125; -&gt; <span class="number">1</span>, &#123;0, 4&#125; -&gt; <span class="number">0</span>,</span><br><span class="line"> &#123;0, 5&#125; -&gt; <span class="number">1</span>, &#123;0, 6&#125; -&gt; <span class="number">0</span>, &#123;0, 7&#125; -&gt; <span class="number">1</span>, &#123;0, 8&#125; -&gt; <span class="number">0</span>, &#123;1, 1&#125; -&gt; <span class="number">2</span>,</span><br><span class="line"> &#123;1, 2&#125; -&gt; <span class="number">2</span>, &#123;1, 3&#125; -&gt; <span class="number">2</span>, &#123;1, 4&#125; -&gt; <span class="number">1</span>, &#123;1, 5&#125; -&gt; <span class="number">1</span>, &#123;1, 6&#125; -&gt; <span class="number">1</span>,</span><br><span class="line"> &#123;1, 7&#125; -&gt; <span class="number">2</span>, &#123;1, 8&#125; -&gt; <span class="number">1</span>, &#123;1, 9&#125; -&gt; <span class="number">2</span>, &#123;2, 0&#125; -&gt; <span class="number">3</span>, &#123;2, 1&#125; -&gt; <span class="number">3</span>,</span><br><span class="line"> &#123;2, 2&#125; -&gt; <span class="number">3</span>, &#123;2, 3&#125; -&gt; <span class="number">3</span>, &#123;2, 4&#125; -&gt; <span class="number">3</span>, &#123;2, 5&#125; -&gt; <span class="number">3</span>, &#123;2, 6&#125; -&gt; <span class="number">3</span>,</span><br><span class="line"> &#123;2, 7&#125; -&gt; <span class="number">3</span>, &#123;2, 8&#125; -&gt; <span class="number">3</span>, &#123;3, 0&#125; -&gt; <span class="number">4</span>, &#123;3, 1&#125; -&gt; <span class="number">4</span>, &#123;3, 2&#125; -&gt; <span class="number">4</span>,</span><br><span class="line"> &#123;3, 3&#125; -&gt; <span class="number">4</span>, &#123;3, 4&#125; -&gt; <span class="number">4</span>, &#123;3, 5&#125; -&gt; <span class="number">4</span>, &#123;3, 6&#125; -&gt; <span class="number">4</span>, &#123;3, 7&#125; -&gt; <span class="number">4</span>,</span><br><span class="line"> &#123;3, 8&#125; -&gt; <span class="number">4</span>, &#123;4, 0&#125; -&gt; <span class="number">0</span>, &#123;4, 1&#125; -&gt; <span class="number">0</span>, &#123;4, 2&#125; -&gt; <span class="number">0</span>, &#123;4, 3&#125; -&gt; <span class="number">0</span>,</span><br><span class="line"> &#123;4, 4&#125; -&gt; <span class="number">0</span>, &#123;4, 5&#125; -&gt; <span class="number">0</span>, &#123;4, 6&#125; -&gt; <span class="number">0</span>, &#123;4, 7&#125; -&gt; <span class="number">0</span>&#125;</span><br></pre></td></tr></table></figure><p>结果中的这些数据是 <code>{本回合的状态, 周围的活细胞个数} -&gt; 下一回合的状态</code>。比如说， <code>{1, 3} -&gt; 2</code> 表示某个细胞的状态是 <code>1</code>，也就是一个活细胞；它周围的活细胞个数，包括它本身，是 <code>3</code>；它在下一回合的状态是 <code>2</code>，也就是说刚刚开始死亡。这里同样的键总是对应同样的值，因此每个细胞在下一回合的状态确实由这两个数来决定。</p><p>我们还能看出，<code>0</code> 只会变成 <code>0</code> 或 <code>1</code>， <code>1</code> 只会变成 <code>1</code> 或 <code>2</code>，<code>2</code> 只会变成 <code>3</code>，<code>3</code> 只会变成 <code>4</code>，<code>4</code> 只会死亡。</p><p>果然是 Generations。</p><p>再来算算这个规则在 Golly 里该怎么写：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;Cases[%, (&#123;1, x_&#125; -&gt; <span class="number">1</span>) :&gt; x - <span class="number">1</span>], <span class="keyword">Cases</span>[%, (&#123;0, x_&#125; -&gt; <span class="number">1</span>) :&gt; x], </span><br><span class="line"> <span class="keyword">Max</span>@%[[;; , <span class="number">1</span>, <span class="number">1</span>]] + <span class="number">1</span>&#125;</span><br></pre></td></tr></table></figure><p>结果是：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;3, 4, 5, 7&#125;, &#123;3, 5, 7&#125;, <span class="number">5</span>&#125;</span><br></pre></td></tr></table></figure><p>也就是说它在 Golly 里叫做 <code>3457/357/5</code>。</p><p>这个规则的含义是：它有五种状态。<code>0</code> 表示死，<code>1</code> 表示活，<code>2</code>、<code>3</code>、<code>4</code> 都是死亡的过程。每个回合每个细胞的变化如下：</p><ul><li><code>0</code> -&gt; 如果相邻的活细胞个数是3、5、7，则变成 <code>1</code>，否则还是 <code>0</code></li><li><code>1</code> -&gt; 如果相邻的活细胞个数是3、4、5、7，则保持是 <code>1</code>，否则变成 <code>2</code></li><li><code>2</code> -&gt; <code>3</code></li><li><code>3</code> -&gt; <code>4</code></li><li><code>4</code> -&gt; <code>0</code></li></ul><hr><p>知道了规则，就可以把它放到 Golly 里，乱搞一通。一旦找到了好玩的东西，还可以用 Mathematica 来制成 GIF。这就是下一篇文章的内容了。</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2018/08/09/Wolfram-Alpha-计算时显示的元胞自动机（二）/&quot; title=&quot;Wolfram|Alpha 计算时显示的元胞自动机（二）&quot;&gt;Wolfram|Alpha 计算时显示的元胞自动机（二）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2019/03/02/Wolfram-Alpha-计算时显示的元胞自动机（三）/&quot; title=&quot;Wolfram|Alpha 计算时显示的元胞自动机（三）&quot;&gt;Wolfram|Alpha 计算时显示的元胞自动机（三）&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;果壳网已完，不知道我发过的帖子什么时候会消失，于是我要把它们搬到简书。&lt;/p&gt;
&lt;p&gt;（注：在搬到新的博客的时候，这个帖子，以及整个果壳小组，都已经消失了。）&lt;/p&gt;
&lt;p&gt;但这篇不是搬运，只是想说一下&lt;a href=&quot;https://www.guokr.com/post/558717/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这个帖子&lt;/a&gt;背后的故事……以及代码。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://www.wolframalpha.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Wolfram|Alpha&lt;/a&gt; 在显示计算或查询的结果之前，往往需要思考一番。几年前，它在思考过程的中会显示一个漂亮的图案。现在那个图案已经变成了一个无聊的 &lt;code&gt;COMPUTING...&lt;/code&gt;，不过网上还是留下了一点痕迹，比如说知乎的这个问题：&lt;a href=&quot;https://www.zhihu.com/question/38451613&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Wolfram|Alpha在搜索时出现的图案有什么含义?&lt;/a&gt;和 StackOverflow 的这个问题：&lt;a href=&quot;https://stackoverflow.com/q/27332460/2756937&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;What is the cellular automaton shown as loading screen on Wolfram Alpha?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我也一直想知道这是什么图案。它显然是一个元胞自动机，大小不同的点表示不同的状态；而且状态不止一种，因此肯定不是生命游戏，也不是生命游戏家族（&lt;a href=&quot;https://en.wikipedia.org/wiki/Life-like_cellular_automaton&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Life-like&lt;/a&gt;）的规则。但它思考的速度太快，我总是来不及看清它到底是什么规则。&lt;/p&gt;
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="Mathematica" scheme="https://AlephAlpha.github.io/tags/Mathematica/"/>
    
      <category term="生命游戏" scheme="https://AlephAlpha.github.io/tags/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>可以用克罗内克符号来画龙曲线</title>
    <link href="https://AlephAlpha.github.io/2018/07/02/%E5%8F%AF%E4%BB%A5%E7%94%A8%E5%85%8B%E7%BD%97%E5%86%85%E5%85%8B%E7%AC%A6%E5%8F%B7%E6%9D%A5%E7%94%BB%E9%BE%99%E6%9B%B2%E7%BA%BF/"/>
    <id>https://AlephAlpha.github.io/2018/07/02/可以用克罗内克符号来画龙曲线/</id>
    <published>2018-07-02T06:24:00.000Z</published>
    <updated>2019-03-13T05:15:02.094Z</updated>
    
    <content type="html"><![CDATA[<p>原发于果壳 <a href="http://www.guokr.com/post/695992/" target="_blank" rel="noopener">Today I Learned 小组</a>。后面补充的部分来自我在知乎的<a href="https://www.zhihu.com/question/45588189/answer/99475474" target="_blank" rel="noopener">一个回答</a>。</p><hr><p>学过数论的应该都知道勒让德符号。对于一个整数 $a$ 和一个素数 $p$ ，勒让德符号 $\left(\frac{a}{p}\right)$ 定义为：如果 $a \equiv 0 \pmod{p}$，则 $\left(\frac{a}{p}\right) = 0$；否则，如果存在一个整数 $x$ 使得 $x^2 \equiv a \pmod{p}$，则 $\left(\frac{a}{p}\right) = 1$；如果不存在这样的 $x$，则 $\left(\frac{a}{p}\right) = -1$。总之，就是看 $a$ 是不是与某个数的的平方模 $p$ 同余。勒让德符号有很多有趣的性质，在数论里十分有用。</p><p>勒让德符号中的 $p$ 只能是素数。雅克比把它推广了一下。对于一个正奇数 $m$，如果它的素因数分解是 $m = p_1 p_2 \cdots p_s$，那么定义雅克比符号 $\left(\frac{n}{m}\right) = \left(\frac{n}{p_1}\right) \left(\frac{n}{p_2}\right) \cdots \left(\frac{n}{p_s}\right)$，其中右边那一串就是勒让德符号。</p><a id="more"></a><p>雅克比符号中的 $m$ 只能是正奇数。于是，克罗内克把它再推广了一下。他首先补上了 $m = -1$ 和 $m = 2$ 的情况。对于 $m = -1$ 的情况，若 $n &lt; 0$，则 $\left(\frac{n}{-1}\right) = -1$；若 $n &gt; 0$，则 $\left(\frac{n}{-1}\right) = 1$；$\left(\frac{0}{-1}\right) = 0$。对于 $m = 2$ 的情况，定义与勒让德符号不同，$n$ 是偶数时，$\left(\frac{n}{2}\right) = 0$；$n \equiv \pm 1 \pmod{8}$ 时，$\left(\frac{n}{2}\right) = 1$；$n \equiv \pm 3 \pmod{8}$ 时，$\left(\frac{n}{2}\right) = -1$。然后，对于一个非 $0$ 的整数 $m$，如果它的素因数分解是 $m = u p_1 p_2 \cdots p_s$，其中 $u$ 是 $\pm 1$，那么定义 $\left(\frac{n}{m}\right) = \left(\frac{n}{u}\right) \left(\frac{n}{p_1}\right) \left(\frac{n}{p_2}\right) \cdots \left(\frac{n}{p_s}\right)$。最后，规定 $\left(\frac{1}{0}\right) = \left(\frac{-1}{0}\right) = 1$，对其它的 $n$ 定义 $\left(\frac{n}{0}\right) = 0$。</p><p>这样，对所有整数 $n$、$m$ 我们都定义了一个 $\left(\frac{n}{m}\right)$。这就是克罗内克符号。</p><hr><p>上面说了一大堆，都是些数论里的东西，好像与分形没有什么关系……</p><p>我们来看数列 $\left(\frac{-1}{n}\right)$，这里的 $n$ 取正整数。根据定义不难看出，这个数列里边的每一项只能是 1 或者 -1。这是在线整数数列百科（OEIS）里的数列 <a href="http://oeis.org/A034947" target="_blank" rel="noopener">A034947</a>，开头几项是： 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, -1, -1, 1 ……</p><p>然后，假设你是一只海龟，每次从数列中读取一项；如果是 1，就向左转 90°，向前爬一步；如果是 -1，就向右转 90°，向前爬一步。这样，画出来的图像是什么？</p><p><img src="http://ww2.sinaimg.cn/mw690/6e53d84fjw1es2fy9vp48g207x0c0hdy.gif" alt="海龟"> </p><p>嗯，就是龙曲线。</p><p>再放一张彩图：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-647db61f06e41f20.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="龙曲线彩图"></p><p>顺便说一句，我没学过 Logo 语言，这个海龟我是用 Mathematica 画的，参考了 KTurtle 的图标。</p><hr><p>为什么这样能画出龙曲线呢？</p><p>我们先来看获得龙曲线的另一种方法。拿一根纸带，不断地对折，然后把每一处折痕按原来的凹凸展开成直角：</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Dragon_curve_paper_strip.png/800px-Dragon_curve_paper_strip.png" alt="图片来自维基百科"></p><p>于是，折痕的凹凸就对应于前面海龟作图的左转右转。那么，折痕的规律是什么呢？</p><p>我们把凹记作 1，凸记作 -1。只折一次，得到的当然是：</p><blockquote><p>1</p></blockquote><p>折两次，就会在原来这个 1 的前面和后面各增加一个折痕，前面是 1，后面是 -1（加粗的是原有的折痕）：</p><blockquote><p>1, <strong>1</strong>, -1</p></blockquote><p>折三次，会在折两次的基础上，在最前面、最后面和相邻的两个折痕之间，都添上新的折痕。而且新添上的折痕会按 1、-1、1、-1……这样的规律排列。也就是说，相邻的两个新折痕的方向是相反的：</p><blockquote><p>1, <strong>1</strong>, -1, <strong>1</strong>, 1, <strong>-1</strong>, -1</p></blockquote><p>类似地，我们可以得到折四次的结果：</p><blockquote><p>1, <strong>1</strong>, -1, <strong>1</strong>, 1, <strong>-1</strong>, -1, <strong>1</strong>, 1, <strong>1</strong>, -1, <strong>-1</strong>, 1, <strong>-1</strong>, -1</p></blockquote><p>这里每一个数列都是后面一个数列的开头。如果我们无限地折下去的话，可以得到一个无限长的数列：</p><blockquote><p>1, 1, -1, 1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, 1, -1, -1, 1, -1, -1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, 1, 1, -1, 1, 1, -1, -1, -1, 1, 1, -1, -1, 1, -1, -1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, -1, 1, 1, …</p></blockquote><p>于是我们不难得到这个数列的一个递推公式：</p><ul><li>$a(2n) = a(n)$</li><li>$a(4n+1) = 1$</li><li>$a(4n+3) = -1$</li></ul><p>这和前面的克罗内克符号是什么关系呢？我们只需要看克罗内克符号的两个性质：</p><ul><li>由克罗内克符号的定义，有 $\left(\frac{-1}{2}\right) = 1$。因此，$\left(\frac{-1}{2n}\right) = \left(\frac{-1}{2n}\right)$。</li><li>数论里的一个重要的结论，有些书把它叫做二次互反律的补充律：对于奇素数 $p$，当 $p \equiv 1 \pmod{4}$ 时，勒让德符号 $\left(\frac{-1}{p}\right) = 1$；当 $p \equiv 3 \pmod{4}$ 时，勒让德符号 $\left(\frac{-1}{p}\right) = -1$。</li></ul><p>于是，$\left(\frac{-1}{n}\right)$ 这个数列也满足同样的递推公式。也就是说，它们是同一个数列。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原发于果壳 &lt;a href=&quot;http://www.guokr.com/post/695992/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Today I Learned 小组&lt;/a&gt;。后面补充的部分来自我在知乎的&lt;a href=&quot;https://www.zhihu.com/question/45588189/answer/99475474&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;一个回答&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;学过数论的应该都知道勒让德符号。对于一个整数 $a$ 和一个素数 $p$ ，勒让德符号 $\left(\frac{a}{p}\right)$ 定义为：如果 $a \equiv 0 \pmod{p}$，则 $\left(\frac{a}{p}\right) = 0$；否则，如果存在一个整数 $x$ 使得 $x^2 \equiv a \pmod{p}$，则 $\left(\frac{a}{p}\right) = 1$；如果不存在这样的 $x$，则 $\left(\frac{a}{p}\right) = -1$。总之，就是看 $a$ 是不是与某个数的的平方模 $p$ 同余。勒让德符号有很多有趣的性质，在数论里十分有用。&lt;/p&gt;
&lt;p&gt;勒让德符号中的 $p$ 只能是素数。雅克比把它推广了一下。对于一个正奇数 $m$，如果它的素因数分解是 $m = p_1 p_2 \cdots p_s$，那么定义雅克比符号 $\left(\frac{n}{m}\right) = \left(\frac{n}{p_1}\right) \left(\frac{n}{p_2}\right) \cdots \left(\frac{n}{p_s}\right)$，其中右边那一串就是勒让德符号。&lt;/p&gt;
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="果壳搬运" scheme="https://AlephAlpha.github.io/tags/%E6%9E%9C%E5%A3%B3%E6%90%AC%E8%BF%90/"/>
    
  </entry>
  
  <entry>
    <title>在电脑里发现了一个叫pinyin-database-db的文件</title>
    <link href="https://AlephAlpha.github.io/2018/07/02/%E5%9C%A8%E7%94%B5%E8%84%91%E9%87%8C%E5%8F%91%E7%8E%B0%E4%BA%86%E4%B8%80%E4%B8%AA%E5%8F%ABpinyin-database-db%E7%9A%84%E6%96%87%E4%BB%B6/"/>
    <id>https://AlephAlpha.github.io/2018/07/02/在电脑里发现了一个叫pinyin-database-db的文件/</id>
    <published>2018-07-02T05:49:00.000Z</published>
    <updated>2019-03-13T05:14:54.806Z</updated>
    
    <content type="html"><![CDATA[<p>继续搬运果壳网的<a href="https://www.guokr.com/post/543896/" target="_blank" rel="noopener">旧帖</a>。原帖发表于2013-12-20。我已忘了当时用的是什么输入法，可能是 ibus-pinyin。</p><hr><p>在电脑里发现了一个叫pinyin-database.db的文件。好像是拼音输入法的数据库。打开一看，里边的数据从1个字到14个字的词语的拼音和词频。不知道它的词频是从哪里统计来的，不过很有可能从网络上统计的，反正跟我的输入习惯没什么关系。</p><p>下面是不同字数的词频最高的十个词语，还挺好玩的：</p><a id="more"></a><ul><li>一字词：<br>的、一、是、我、了、不、在、人、有、他</li></ul><ul><li>二字词：<br>所有、论坛、首页、用户、联系、中心、信息、我们、关于、注册</li></ul><ul><li>三字词：<br>的位置、用户名、自己的、为什么、上一页、计算机、发表的、下一页、现在的、俱乐部</li></ul><ul><li>四字词：（简直就是某些网站的导航条）<br>联系我们、版权所有、有限公司、加入收藏、关于我们、友情链接、广告服务、网站地图、联系方式、发表评论</li></ul><ul><li>五字词：<br>我能做什么、人民共和国、经营许可证、加入收藏夹、一体化建设、人大常委会、与我们联系、互联网安全、个人计算机、最近的一个</li></ul><ul><li>六字词：（好多有限公司）<br>用户密码修改、发送电子邮件、科技有限公司、股份有限公司、有关法律法规、有限责任公司、技术有限公司、发展有限公司、没有权限访问、不良信息举报</li></ul><ul><li>七字词：（有乱七八糟的东西的东西混进来了）<br>中华人民共和国、全国人大常委会、业务经营许可证、意见反馈留言板、有限公司总经理、先进性教育活动、药品监督管理局、乱七八糟的东西、高等教育出版社、我喜欢你的时候</li></ul><ul><li>八字词：（在一堆有限公司中夹着一个有一种爱叫做放手）<br>网络科技有限公司、科技发展有限公司、科技股份有限公司、信息科技有限公司、网络技术有限公司、有一种爱叫做放手、电子科技有限公司、数码科技有限公司、保持共产党员先进、质量管理体系认证</li></ul><ul><li>九字词：（字数一多这种词就冒出来了，不过有些词好像有点旧了）<br>共产党员先进性教育、国家发展改革委员会、建设社会主义新农村、代表大会常务委员会、贯彻落实科学发展观、社会主义新农村建设、国务院发展研究中心、保持共产党员先进性、全心全意为人民服务、全国计算机等级考试</li></ul><ul><li>十字词：<br>中华人民共和国商务部、国家发展和改革委员会、构建社会主义和谐社会、别说我的眼泪你无所谓、中国互联网络信息中心、社会主义市场经济体制、国家工商行政管理总局、质量监督检验检疫总局、社会主义精神文明建设、未成年人思想道德建设</li></ul><ul><li>十一字词：（数据库里只收录了7个，有一个还是带错别字的）<br>国家食品药品监督管理局、中国保险监督管理委员会、上海市劳动和社会保障局、以其人之道还治其人之身、学然后知不足教然后知困、学然后知不足教然后之困、明察秋毫之末而不见舆薪</li></ul><ul><li>十二字词：（只收录了9个）<br>中国人寿保险股份有限公司、上海市食品药品监督管理局、天有不测风云人有旦夕祸福、只许州官放火不许百姓点灯、鸡犬之声相闻老死不相往来、舍得一身剐敢把皇帝拉下马、拳头上立得人胳膊上走得马、拳头上立得人胳膊上走得路、即以其人之道还治其人之身</li></ul><ul><li>十三字词：（一个也没有）</li></ul><ul><li>十四字词：（只收录了4个）<br>踏破铁鞋无觅处得来全不费功夫、踏破铁鞋无觅处得来全不费工夫、各人自扫门前雪莫管他家瓦上霜、各人自扫门前雪莫管他人瓦上霜</li></ul><p>不过我暂时还没想到能拿这些数据干什么好玩的事情。</p><p>另外，可以透露一下，另一个文件里保存着我自己的输入词频的数据库，里边最长的一个词是“挖个坑站进去假装自己是根胡萝卜”。</p><hr><p>以下是卅猫的评论：</p><blockquote><p>我喜欢你的时候，有一种爱叫做放手；<br>全心全意为人民服务，别说我的眼泪你无所谓；<br>明察秋毫之末而不见舆薪，舍得一身剐敢把皇帝拉下马。</p><p>造句大赛正式开始：<br>一有人在，他不是我的了。<br>所有论坛首页用户联系我们中心，关于注册 信息。<br>为什么现在的俱乐部计算机 自己的用户名上一页发表的，下一页的位置……<br>（下面的不加成分还能编吗）</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;继续搬运果壳网的&lt;a href=&quot;https://www.guokr.com/post/543896/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;旧帖&lt;/a&gt;。原帖发表于2013-12-20。我已忘了当时用的是什么输入法，可能是 ibus-pinyin。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在电脑里发现了一个叫pinyin-database.db的文件。好像是拼音输入法的数据库。打开一看，里边的数据从1个字到14个字的词语的拼音和词频。不知道它的词频是从哪里统计来的，不过很有可能从网络上统计的，反正跟我的输入习惯没什么关系。&lt;/p&gt;
&lt;p&gt;下面是不同字数的词频最高的十个词语，还挺好玩的：&lt;/p&gt;
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="果壳搬运" scheme="https://AlephAlpha.github.io/tags/%E6%9E%9C%E5%A3%B3%E6%90%AC%E8%BF%90/"/>
    
  </entry>
  
  <entry>
    <title>果壳网终于完全地、彻底地、正式地完了</title>
    <link href="https://AlephAlpha.github.io/2018/07/02/%E6%9E%9C%E5%A3%B3%E7%BD%91%E7%BB%88%E4%BA%8E%E5%AE%8C%E5%85%A8%E5%9C%B0%E3%80%81%E5%BD%BB%E5%BA%95%E5%9C%B0%E3%80%81%E6%AD%A3%E5%BC%8F%E5%9C%B0%E5%AE%8C%E4%BA%86/"/>
    <id>https://AlephAlpha.github.io/2018/07/02/果壳网终于完全地、彻底地、正式地完了/</id>
    <published>2018-07-02T05:42:00.000Z</published>
    <updated>2019-03-13T05:14:47.786Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/1770625-eba5470f0506d696.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="果壳网乙烷"></p><p>我会继续把我的一些旧帖搬运到简书。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1770625-eba5470f0506d696.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;
      
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="果壳搬运" scheme="https://AlephAlpha.github.io/tags/%E6%9E%9C%E5%A3%B3%E6%90%AC%E8%BF%90/"/>
    
  </entry>
  
  <entry>
    <title>用 Mathematica 搜索生命游戏中的静物（二）</title>
    <link href="https://AlephAlpha.github.io/2018/05/13/%E7%94%A8-Mathematica-%E6%90%9C%E7%B4%A2%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F%E4%B8%AD%E7%9A%84%E9%9D%99%E7%89%A9%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://AlephAlpha.github.io/2018/05/13/用-Mathematica-搜索生命游戏中的静物（二）/</id>
    <published>2018-05-13T09:51:00.000Z</published>
    <updated>2019-03-13T04:34:05.585Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="/2017/11/06/用-Mathematica-搜索生命游戏中的静物/" title="用 Mathematica 搜索生命游戏中的静物">用 Mathematica 搜索生命游戏中的静物</a></li><li><a href="/2019/03/04/用-Mathematica-搜索生命游戏中的静物（三）/" title="用 Mathematica 搜索生命游戏中的静物（三）">用 Mathematica 搜索生命游戏中的静物（三）</a></li></ul><hr><p>之前写的那篇《<a href="/2017/11/06/用-Mathematica-搜索生命游戏中的静物/" title="用 Mathematica 搜索生命游戏中的静物">用 Mathematica 搜索生命游戏中的静物</a>》，由于自己写的部分多了一点（虽然关键的一步还是用 Mathematica 自带的 <code>FindPath</code> 函数），特别慢，还特别耗内存。果然对我这种<strong>完全</strong>不懂算法的人，就应该把所有的事情都交给 Mathematica 才对。</p><!--我在 Mathematica StackExchange 上提了一个问题：[Searching for still lifes in Conway's Game of Life](https://mathematica.stackexchange.com/questions/160865/searching-for-still-lifes-in-conways-game-of-life)。大家如果有什么改进代码的建议，欢迎去那里回答。--><hr><p>生命游戏里的每个细胞的状态可以看成一个布尔值，一个（大小有限的）图样则可以看成一个由布尔值组成的二维数组。于是，要寻找满足某些条件图样，就相当于要求这些布尔值满足某个方程。于是，这是一个<a href="https://en.wikipedia.org/wiki/Boolean_satisfiability_problem" target="_blank" rel="noopener">布尔可满足性问题</a>（SAT）。Mathematica 里有个叫 <a href="http://reference.wolfram.com/language/ref/SatisfiabilityInstances.html" target="_blank" rel="noopener"><code>SatisfiabilityInstances</code></a> 的函数就是干这个的。</p><a id="more"></a><hr><p>我们先把要满足的条件用 Mathematica 代码写出来。</p><p>假设我们要找的图样在一个 <code>x</code> 乘 <code>y</code> 的长方形里边，它对应的数组可以用 <code>Array[b, {x, y}]</code> 来表示，这里每个 <code>b[i,j]</code> 表示一个细胞。</p><p>静物（<a href="http://conwaylife.com/wiki/Still_life" target="_blank" rel="noopener">Still life</a>）指的是稳定的图样，它要满足下面两个条件：</p><ul><li>每个活细胞周围的活细胞个数必须是2或者3，</li><li>每个死细胞周围的活细胞个数不能是3。</li></ul><p>我们先写一个函数来数一个细胞周围的活细胞个数：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NeighborCount[k_, &#123;i_, j_&#125;] :=</span><br><span class="line">  <span class="keyword">BooleanCountingFunction</span>[&#123;k&#125;,</span><br><span class="line">   <span class="keyword">Delete</span>[Catenate[<span class="keyword">Array</span>[b, &#123;3, 3&#125;, &#123;i, j&#125; - <span class="number">1</span>]], <span class="number">5</span>]];</span><br></pre></td></tr></table></figure><p>然后每个细胞要满足的条件可以写成这样：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">StillLifeCondition[i_, j_] :=</span><br><span class="line">  (b[i, j] &amp;&amp; NeighborCount[&#123;2, 3&#125;, &#123;i, j&#125;]) ||</span><br><span class="line">   (! b[i, j] &amp;&amp; ! NeighborCount[&#123;3&#125;, &#123;i, j&#125;]);</span><br></pre></td></tr></table></figure><p>此外，这个图样是有限的，边界之外的细胞总是死的。于是，整个图样要满足的条件可以写成：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span>[StillLifeCondition[##] /.</span><br><span class="line">   b[i_, j_] /; i &lt; <span class="number">1</span> || i &gt; x || j &lt; <span class="number">1</span> || j &gt; y :&gt; <span class="keyword">False</span> &amp;,</span><br><span class="line"> &#123;x, y&#125; + <span class="number">2</span>, <span class="number">0</span>, <span class="keyword">And</span>]</span><br></pre></td></tr></table></figure><p>然后我们可以用 <code>SatisfiabilityInstances</code> 函数：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SearchStillLife[x_, y_] :=</span><br><span class="line"> <span class="keyword">ArrayReshape</span>[</span><br><span class="line">  <span class="keyword">SatisfiabilityInstances</span>[</span><br><span class="line">    <span class="keyword">Array</span>[StillLifeCondition[##] /.</span><br><span class="line">       b[i_, j_] /; i &lt; <span class="number">1</span> || i &gt; x || j &lt; <span class="number">1</span> || j &gt; y :&gt; <span class="keyword">False</span> &amp;,</span><br><span class="line">     &#123;x, y&#125; + <span class="number">2</span>, <span class="number">0</span>, <span class="keyword">And</span>],</span><br><span class="line">    Catenate[<span class="keyword">Array</span>[b, &#123;x, y&#125;]]][[<span class="number">1</span>]], &#123;x, y&#125;];</span><br></pre></td></tr></table></figure><p>然后我们就可以用这个 <code>SearchStillLife</code> 函数来找静物。不过，它出奇地慢，找个16乘16大小的静物也要花上44秒：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ArrayPlot</span>[<span class="keyword">Boole</span>@SearchStillLife[<span class="number">16</span>, <span class="number">16</span>], <span class="keyword">Mesh</span> -&gt; <span class="keyword">All</span>] // <span class="keyword">AbsoluteTiming</span></span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/1770625-d609735164bfbc6a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>能不能快一些？</p><p>我不清楚这个 <code>SatisfiabilityInstances</code> 函数用的是什么算法。不过看了一下维基百科，SAT 问题最常用的好像是一种叫 <a href="https://en.wikipedia.org/wiki/DPLL_algorithm" target="_blank" rel="noopener">DPLL</a> 的算法。我<strong>完全</strong>不懂算法，就不管它的细节了。总之，它要求输入的是一个<a href="https://en.wikipedia.org/wiki/Conjunctive_normal_form" target="_blank" rel="noopener">合取范式</a>（CNF）。</p><p>于是，我们可以试试把条件转换成 CNF，也就是说，把前面的 <code>StillLifeCondition</code> 函数改写成：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">StillLifeCondition[i_, j_] :=</span><br><span class="line"> <span class="keyword">BooleanConvert</span>[</span><br><span class="line">  (b[i, j] &amp;&amp; NeighborCount[&#123;2, 3&#125;, &#123;i, j&#125;]) ||</span><br><span class="line">   (! b[i, j] &amp;&amp; ! NeighborCount[&#123;3&#125;, &#123;i, j&#125;]), <span class="string">"CNF"</span>];</span><br></pre></td></tr></table></figure><p>后面的 <code>SearchStillLife</code> 函数定义不变。现在再找一遍16乘16的静物，果然快了很多，只花了2.2秒。不过找出来的静物……</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-554e2d7ef47fe53b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="居然是空的……"></p><p>看来 <code>SatisfiabilityInstances</code> 函数在处理 CNF 时用的是和别的形式不同的算法。满足条件的静物有很多，但 <code>SatisfiabilityInstances</code> 只会输出其中的第一个。而在输入 CNF 的时候，不巧空静物就是这“第一个”。</p><p>只能找到空静物的代码并没有什么用。我们可以试试给原来的代码引入一点随机的因素，让这个空静物不再是“第一个”。比如说，把原来数组异或上一个随机的数组，把前面的 <code>SearchStillLife</code> 函数改写成：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SearchStillLife[x_, y_] := </span><br><span class="line"> <span class="keyword">Block</span>[&#123;r = RandomChoice[&#123;True, False&#125;, &#123;x, y&#125;]&#125;,</span><br><span class="line">  <span class="keyword">MapThread</span>[<span class="keyword">Xor</span>, &#123;r,</span><br><span class="line">    ArrayReshape[</span><br><span class="line">     SatisfiabilityInstances[</span><br><span class="line">       Array[StillLifeCondition[##] /. </span><br><span class="line">           b[i_, j_] /; i &lt; 1 || i &gt; x || j &lt; 1 || j &gt; y :&gt; False /.</span><br><span class="line">                   b[i_, j_] :&gt; <span class="keyword">Xor</span>[b[i, j], r[[i, j]]] &amp;,</span><br><span class="line">        &#123;x, y&#125; + <span class="number">2</span>, <span class="number">0</span>, <span class="keyword">And</span>],</span><br><span class="line">       Catenate[<span class="keyword">Array</span>[b, &#123;x, y&#125;]]][[<span class="number">1</span>]], &#123;x, y&#125;]&#125;, <span class="number">2</span>]]</span><br></pre></td></tr></table></figure><p>现在完整的代码变成了：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">NeighborCount[k_, &#123;i_, j_&#125;] :=</span><br><span class="line">  <span class="keyword">BooleanCountingFunction</span>[&#123;k&#125;,</span><br><span class="line">   <span class="keyword">Delete</span>[Catenate[<span class="keyword">Array</span>[b, &#123;3, 3&#125;, &#123;i, j&#125; - <span class="number">1</span>]], <span class="number">5</span>]];</span><br><span class="line"></span><br><span class="line">StillLifeCondition[i_, j_] :=</span><br><span class="line"> <span class="keyword">BooleanConvert</span>[</span><br><span class="line">  (b[i, j] &amp;&amp; NeighborCount[&#123;2, 3&#125;, &#123;i, j&#125;]) ||</span><br><span class="line">   (! b[i, j] &amp;&amp; ! NeighborCount[&#123;3&#125;, &#123;i, j&#125;]), <span class="string">"CNF"</span>];</span><br><span class="line"></span><br><span class="line">SearchStillLife[x_, y_] := </span><br><span class="line"> <span class="keyword">Block</span>[&#123;r = RandomChoice[&#123;True, False&#125;, &#123;x, y&#125;]&#125;,</span><br><span class="line">  <span class="keyword">MapThread</span>[<span class="keyword">Xor</span>, &#123;r,</span><br><span class="line">    ArrayReshape[</span><br><span class="line">     SatisfiabilityInstances[</span><br><span class="line">       Array[StillLifeCondition[##] /. </span><br><span class="line">           b[i_, j_] /; i &lt; 1 || i &gt; x || j &lt; 1 || j &gt; y :&gt; False /.</span><br><span class="line">                   b[i_, j_] :&gt; <span class="keyword">Xor</span>[b[i, j], r[[i, j]]] &amp;,</span><br><span class="line">        &#123;w, h&#125; + <span class="number">2</span>, <span class="number">0</span>, <span class="keyword">And</span>],</span><br><span class="line">       Catenate[<span class="keyword">Array</span>[b, &#123;w, y&#125;]]][[<span class="number">1</span>]], &#123;x, y&#125;]&#125;, <span class="number">2</span>]]</span><br></pre></td></tr></table></figure><p>这次能找到好看的静物了，花的时间时间在2.7秒左右：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SeedRandom</span>[<span class="number">233</span>];</span><br><span class="line"><span class="keyword">ArrayPlot</span>[<span class="keyword">Boole</span>@SearchStillLife[<span class="number">16</span>, <span class="number">16</span>], <span class="keyword">Mesh</span> -&gt; <span class="keyword">All</span>] // <span class="keyword">AbsoluteTiming</span></span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/1770625-39cedb3203c9c013.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>再试试大一点的静物，比如说64乘64的。花了大概46秒。</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-d6e2d72fa2229168.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><hr><p>找完了静物，再来找振荡子（<a href="http://conwaylife.com/wiki/Oscillator" target="_blank" rel="noopener">Oscillator</a>）。振荡子是随时间周期变化的图样。于是，我们可以给那个布尔值的数组增加一个时间的维度，写成 <code>Array[b, {p, w, h}]</code>，这里 <code>p</code> 是它的周期。它们满足的条件也要作出相应的修改：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">NeighborCount[k_, &#123;t_, i_, j_&#125;] := </span><br><span class="line">  <span class="keyword">BooleanCountingFunction</span>[&#123;k&#125;, </span><br><span class="line">   <span class="keyword">Delete</span>[<span class="keyword">Flatten</span>[<span class="keyword">Array</span>[b, &#123;1, 3, 3&#125;, &#123;t, i - 1, j - 1&#125;]], <span class="number">5</span>]];</span><br><span class="line"></span><br><span class="line">OscillatorCondition[t_, i_, j_] := </span><br><span class="line">  <span class="keyword">BooleanConvert</span>[</span><br><span class="line">   (b[t, i, j] &amp;&amp; (b[t + <span class="number">1</span>, i, j] ⧦ </span><br><span class="line">        NeighborCount[&#123;2, 3&#125;, &#123;t, i, j&#125;])) ||</span><br><span class="line">    (! b[t, i, j] &amp;&amp; (b[t + <span class="number">1</span>, i, j] ⧦ </span><br><span class="line">        NeighborCount[&#123;3&#125;, &#123;t, i, j&#125;])), <span class="string">"CNF"</span>];</span><br><span class="line"></span><br><span class="line">SearchOscillator[p_, w_, h_] :=</span><br><span class="line"> <span class="keyword">Block</span>[&#123;r = RandomChoice[&#123;True, False&#125;, &#123;p, w, h&#125;]&#125;,</span><br><span class="line">  <span class="keyword">MapThread</span>[</span><br><span class="line">   <span class="keyword">Xor</span>, &#123;r, </span><br><span class="line">    ArrayReshape[</span><br><span class="line">     SatisfiabilityInstances[</span><br><span class="line">       Array[OscillatorCondition[##] /.</span><br><span class="line">           &#123;b[t_, i_, j_] /; i &lt; 1 || i &gt; w || j &lt; 1 || j &gt; h :&gt; False, </span><br><span class="line">            b[<span class="number">0</span>, i_, j_] :&gt; b[p, i, j]&#125; /.</span><br><span class="line">          b[t_, i_, j_] :&gt; <span class="keyword">Xor</span>[b[t, i, j], r[[t, i, j]]] &amp;,</span><br><span class="line">        &#123;p, w + 2, h + 2&#125;, <span class="number">0</span>, <span class="keyword">And</span>],</span><br><span class="line">       <span class="keyword">Flatten</span>[<span class="keyword">Array</span>[b, &#123;p, w, h&#125;]]][[<span class="number">1</span>]], &#123;p, w, h&#125;]&#125;, <span class="number">3</span>]]</span><br></pre></td></tr></table></figure><p>（代码里的这个 <code>⧦</code> 符号表示的是等价，Mathematica 里显示为 ⇔。）</p><p>可能因为静物比较稀少，速度比找静物时慢了很多，找一个周期2的16乘16的静物花了11秒：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SeedRandom</span>[<span class="number">233</span>];</span><br><span class="line"><span class="keyword">ArrayPlot</span>[#, <span class="keyword">Mesh</span> -&gt; <span class="keyword">All</span>] &amp; /@ </span><br><span class="line">  <span class="keyword">Boole</span>@SearchOscillator[<span class="number">2</span>, <span class="number">16</span>, <span class="number">16</span>] // <span class="keyword">AbsoluteTiming</span></span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/1770625-31512cd099d389d7.gif?imageMogr2/auto-orient/strip" alt></p><p>周期3的就更慢了，找下面这个振荡子花了14分钟。</p><p><img src="https://upload-images.jianshu.io/upload_images/1770625-4796a4cbf5b93041.gif?imageMogr2/auto-orient/strip" alt></p><p>更高的周期我就不敢试了。</p><p>应该会有更快的办法。有好的建议欢迎评论。</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2017/11/06/用-Mathematica-搜索生命游戏中的静物/&quot; title=&quot;用 Mathematica 搜索生命游戏中的静物&quot;&gt;用 Mathematica 搜索生命游戏中的静物&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2019/03/04/用-Mathematica-搜索生命游戏中的静物（三）/&quot; title=&quot;用 Mathematica 搜索生命游戏中的静物（三）&quot;&gt;用 Mathematica 搜索生命游戏中的静物（三）&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;之前写的那篇《&lt;a href=&quot;/2017/11/06/用-Mathematica-搜索生命游戏中的静物/&quot; title=&quot;用 Mathematica 搜索生命游戏中的静物&quot;&gt;用 Mathematica 搜索生命游戏中的静物&lt;/a&gt;》，由于自己写的部分多了一点（虽然关键的一步还是用 Mathematica 自带的 &lt;code&gt;FindPath&lt;/code&gt; 函数），特别慢，还特别耗内存。果然对我这种&lt;strong&gt;完全&lt;/strong&gt;不懂算法的人，就应该把所有的事情都交给 Mathematica 才对。&lt;/p&gt;
&lt;!--我在 Mathematica StackExchange 上提了一个问题：[Searching for still lifes in Conway&#39;s Game of Life](https://mathematica.stackexchange.com/questions/160865/searching-for-still-lifes-in-conways-game-of-life)。大家如果有什么改进代码的建议，欢迎去那里回答。--&gt;
&lt;hr&gt;
&lt;p&gt;生命游戏里的每个细胞的状态可以看成一个布尔值，一个（大小有限的）图样则可以看成一个由布尔值组成的二维数组。于是，要寻找满足某些条件图样，就相当于要求这些布尔值满足某个方程。于是，这是一个&lt;a href=&quot;https://en.wikipedia.org/wiki/Boolean_satisfiability_problem&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;布尔可满足性问题&lt;/a&gt;（SAT）。Mathematica 里有个叫 &lt;a href=&quot;http://reference.wolfram.com/language/ref/SatisfiabilityInstances.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;SatisfiabilityInstances&lt;/code&gt;&lt;/a&gt; 的函数就是干这个的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="Mathematica" scheme="https://AlephAlpha.github.io/tags/Mathematica/"/>
    
      <category term="生命游戏" scheme="https://AlephAlpha.github.io/tags/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>π日，来吃个派</title>
    <link href="https://AlephAlpha.github.io/2018/03/14/%CF%80%E6%97%A5%EF%BC%8C%E6%9D%A5%E5%90%83%E4%B8%AA%E6%B4%BE/"/>
    <id>https://AlephAlpha.github.io/2018/03/14/π日，来吃个派/</id>
    <published>2018-03-14T12:52:00.000Z</published>
    <updated>2019-03-13T04:34:26.213Z</updated>
    
    <content type="html"><![CDATA[<p>原于2013年的π日发于<a href="https://www.guokr.com/blog/440686/" target="_blank" rel="noopener">果壳日志</a>。这里转的是2016年的π日发在<a href="http://www.15yan.com/story/8PQQ46j2f0q/" target="_blank" rel="noopener">十五言</a>的版本。</p><hr><p>今天是π日，要吃派。</p><p>这是一个派：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-4969c4b75bf72635..jpg!content?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="π"></p><a id="more"></a><p>嗯，其实是一个π……确切地说，是<a href="http://www.conwaylife.com/wiki/Pi" target="_blank" rel="noopener">pi-heptomino</a>，一个长成π的样子的七联骨牌。</p><p>不过，在生命游戏的世界里，这个π不听话，不好好地呆在那里，却要变成一堆奇怪的东西：</p><p><img src="https://upload-images.jianshu.io/upload_images/1770625-d728ce43068e3c5e.gif?imageMogr2/auto-orient/strip" alt="π的变化"></p><p>不听话怎么办？把它吃掉！</p><p>不过，这个π生活在生命游戏的世界里，不是我们人类的嘴巴能够吃掉的。</p><p>那叫谁去吃呢？</p><p>生命游戏中有一类东西，英文名叫<a href="http://www.conwaylife.com/wiki/Eater" target="_blank" rel="noopener">eater</a>，有人把它翻译成“吞噬者”，不过我更喜欢把它翻译成“吃货”。它们<a href="https://en.wikipedia.org/wiki/I_Can_Eat_Glass" target="_blank" rel="noopener">能吞下玻璃而不伤身体</a>……呃不，它们能把生命游戏中各种奇怪的东西吃掉，吃完之后自己会恢复原样。</p><p>让我们请出生命游戏中最出名的吃货：吃货一号（<a href="https://en.wikipedia.org/wiki/I_Can_Eat_Glass" target="_blank" rel="noopener">eater 1</a>）：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-62967b2e6739b706..jpg!content?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Eater 1"></p><p>长得像个鱼钩。其实，它的另一个名字就是鱼钩（fishhook）。它是生命游戏中第一个发现的吃货。</p><p>只需要四代时间，它就能吃掉一架滑翔机（<a href="http://www.conwaylife.com/wiki/Glider" target="_blank" rel="noopener">glider</a>）：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-5b12c2a81a017c14..jpg!content?imageMogr2/auto-orient/strip" alt="吃货一号吃滑翔机"></p><p>也能轻松吞下轻型飞船（<a href="http://www.conwaylife.com/wiki/LWSS" target="_blank" rel="noopener">lightweight spaceship</a>）和中型飞船（<a href="http://www.conwaylife.com/wiki/Middleweight_spaceship" target="_blank" rel="noopener">middleweight spaceship</a>）：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-0cb6e10a9ef79c19..jpg!content?imageMogr2/auto-orient/strip" alt="吃货一号吃轻型飞船和中型飞船"></p><p>它还能吃掉很多别的东西，比如说面包（<a href="http://www.conwaylife.com/wiki/Loaf" target="_blank" rel="noopener">loaf</a>）、小圆面包（<a href="http://www.conwaylife.com/wiki/Bun" target="_blank" rel="noopener">bun</a>）（大概给这些东西起名字的人也是个吃货）……这里就不再一一举例了。</p><p>那么，它能不能吃掉π呢？</p><p>当然能。不过π太不听话了，一个吃货吃不掉，得两个。左边一个右边一个：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-7edd82151bdfec39..jpg!content?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="吃货一号准备吃π"></p><p>嗯，吃得还挺快：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-95b34219de4cca2e..jpg!content?imageMogr2/auto-orient/strip" alt="吃货一号吃π"></p><p>除了吃货一号，另一个吃货也能吃掉π：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-35485fb60d2f75fe..jpg!content?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="方块"></p><p>嗯，就是个方块（<a href="http://www.conwaylife.com/wiki/Block" target="_blank" rel="noopener">block</a>）。它是生命游戏中最常见的一种静物（<a href="http://www.conwaylife.com/wiki/Still_life" target="_blank" rel="noopener">still life</a>）。在平面上随机倒上一锅<a href="http://www.guokr.com/post/655824/" target="_blank" rel="noopener">汤</a>（<a href="http://www.conwaylife.com/wiki/Soup" target="_blank" rel="noopener">soup</a>，指随机的初始状态），然后开始生命游戏，等稳定下来之后基本上都能看到它。</p><p>它其实也是一个吃货，不过胃口没有吃货一号那么好。一些别的吃货，比如说吃货二号（<a href="http://www.conwaylife.com/wiki/Eater_2" target="_blank" rel="noopener">eater 2</a>），就是在它的基础上构造出来的。</p><p>和吃货一号一样，也是需要两个方块才能吃掉π：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-9b549518f70192c9..jpg!content?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="方块准备吃π"></p><p>（有点囧……）</p><p>这次就没有吃货一号吃得那么快了：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-7776be3797dfdf16..jpg!content?imageMogr2/auto-orient/strip" alt="方块吃π"></p><p>不过总是把π吃掉了。</p><p>参考资料：<a href="http://www.conwaylife.com/wiki/Main_Page" target="_blank" rel="noopener">LifeWiki</a></p><hr><p>另外，<a href="https://www.guokr.com/post/668449/#6253283" target="_blank" rel="noopener">卅猫说两个方块吃π的图片像苦力怕</a>。</p><p>于是我试了一下。真正的苦力怕会变成两只蜂巢：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-47a49a7b7c2e914f..jpg!content?imageMogr2/auto-orient/strip" alt="苦力怕"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原于2013年的π日发于&lt;a href=&quot;https://www.guokr.com/blog/440686/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;果壳日志&lt;/a&gt;。这里转的是2016年的π日发在&lt;a href=&quot;http://www.15yan.com/story/8PQQ46j2f0q/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;十五言&lt;/a&gt;的版本。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;今天是π日，要吃派。&lt;/p&gt;
&lt;p&gt;这是一个派：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1770625-4969c4b75bf72635..jpg!content?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;π&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="生命游戏" scheme="https://AlephAlpha.github.io/tags/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>一行代码的分形</title>
    <link href="https://AlephAlpha.github.io/2017/12/20/%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E7%9A%84%E5%88%86%E5%BD%A2/"/>
    <id>https://AlephAlpha.github.io/2017/12/20/一行代码的分形/</id>
    <published>2017-12-20T01:59:00.000Z</published>
    <updated>2019-03-13T04:34:58.417Z</updated>
    
    <content type="html"><![CDATA[<p>继续搬运果壳网上的<a href="https://www.guokr.com/post/669790/" target="_blank" rel="noopener">旧帖</a>。部分代码有改动。</p><hr><p>Wolfram 公司在 Twitter 上开了个帐号，叫 Tweet-a-Program (<a href="https://twitter.com/wolframtap" target="_blank" rel="noopener">@wolframtap</a>)。你只要发一段 Mathematica 代码并@它，它就会自动把运行结果回复给你。由于 Twitter 的字数限制，这段 Mathematica 代码不能超过128字（现在 Twitter 的字数限制涨了，但 Tweet-a-Program 的字数限制还是不变）。</p><p>我一般用它来画分形。</p><a id="more"></a><hr><p><img src="http://upload-images.jianshu.io/upload_images/1770625-9e3e9332ebcc50e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Multicolumn[<span class="keyword">Table</span>[<span class="keyword">Image3D</span>@<span class="keyword">Array</span>[<span class="keyword">Boole</span>@SubsetQ[s,<span class="keyword">Plus</span>@@<span class="keyword">Abs</span>[<span class="keyword">IntegerDigits</span>[&#123;##&#125;,<span class="number">3</span>,<span class="number">3</span>]<span class="number">-1</span>]]&amp;,&#123;3,3,3&#125;^<span class="number">3</span>,<span class="number">0</span>],&#123;s,Subsets@&#123;0,1,2,3&#125;&#125;],<span class="number">4</span>]</span><br></pre></td></tr></table></figure><hr><p><img src="http://upload-images.jianshu.io/upload_images/1770625-ea6cc1bc9c02fc64.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JuliaSetPlot[z-(z^<span class="number">9</span><span class="number">-1</span>)/(<span class="number">9</span>z^<span class="number">2</span>),z,<span class="keyword">ColorFunction</span>-&gt;<span class="string">"RustTones"</span>]</span><br></pre></td></tr></table></figure><hr><p><img src="http://upload-images.jianshu.io/upload_images/1770625-bccf24d6c25a7fd9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Image</span>@<span class="keyword">Array</span>[<span class="keyword">BitAnd</span>,&#123;2,2&#125;^<span class="number">9</span>,<span class="number">0</span>]</span><br></pre></td></tr></table></figure><hr><p><img src="http://upload-images.jianshu.io/upload_images/1770625-442b9d71c8810d04.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Image</span>[<span class="number">1</span>-<span class="keyword">Last</span>@SubstitutionSystem[&#123;0-&gt;&#123;&#123;1,1,1&#125;,&#123;1,1,1&#125;,&#123;1,1,1&#125;&#125;,<span class="number">1</span>-&gt;&#123;&#123;0,1,0&#125;,&#123;1,0,1&#125;,&#123;0,1,0&#125;&#125;&#125;,&#123;&#123;1&#125;&#125;,<span class="number">6</span>]]</span><br></pre></td></tr></table></figure><hr><p><img src="http://upload-images.jianshu.io/upload_images/1770625-4b22b0e99729a1c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Graphics</span>[&#123;RGBColor@##3,Point@&#123;#,#2&#125;&#125;&amp;@@(<span class="number">2</span>y^<span class="keyword">Range</span>[<span class="number">7</span>].#)&amp;/@<span class="keyword">Tuples</span>[&#123;&#123;x=.886,y=.5,y,0,0&#125;,&#123;-x,y,0,y,0&#125;,&#123;0,-1,0,0,y&#125;&#125;,<span class="number">7</span>]]</span><br></pre></td></tr></table></figure><hr><p><img src="http://upload-images.jianshu.io/upload_images/1770625-ccf789fca9c6378f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Image</span>[<span class="keyword">Table</span>[<span class="keyword">If</span>[ColorQ@#,#,<span class="keyword">Black</span>]&amp;[<span class="keyword">Hue</span>[(<span class="keyword">Arg</span>@#+<span class="keyword">Pi</span>)/(<span class="number">2</span><span class="keyword">Pi</span>),<span class="number">1</span>/<span class="keyword">Abs</span>@#]&amp;[MandelbrotSetBoettcher[x+<span class="keyword">I</span> y]]],&#123;y,-2,2,.01&#125;,&#123;x,-2,2,.01&#125;]]</span><br></pre></td></tr></table></figure><hr><p><img src="http://upload-images.jianshu.io/upload_images/1770625-13d8f24de7370b6b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Graphics</span>@<span class="keyword">Line</span>[AnglePath@#,<span class="keyword">VertexColors</span>-&gt;<span class="keyword">Hue</span>/@Subdivide@<span class="keyword">Length</span>@#]&amp;@<span class="keyword">MapIndexed</span>[#(<span class="number">-1</span>)^<span class="keyword">Tr</span>@#<span class="number">2</span>&amp;,<span class="keyword">Flatten</span>@<span class="keyword">Nest</span>[&#123;#,#[[1]]&#125;&amp;,&#123;Pi/2,0&#125;,<span class="number">17</span>]]</span><br></pre></td></tr></table></figure><hr><p><img src="http://upload-images.jianshu.io/upload_images/1770625-e41d484a60ea724f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Multicolumn[<span class="keyword">Table</span>[<span class="keyword">Image3D</span>[<span class="keyword">Array</span>[<span class="keyword">BitXor</span>,&#123;2,2,2&#125;^<span class="number">5</span>,<span class="number">0</span>]/.&#123;i-&gt;1,_Integer-&gt;0&#125;],&#123;i,0,31&#125;],<span class="number">4</span>]</span><br></pre></td></tr></table></figure><hr><p><img src="http://upload-images.jianshu.io/upload_images/1770625-66b94bdac1e79553.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f=&#123;Tuples[Range[2^#]-1,#2],First@HilbertCurve@##&#125;&amp;;<span class="keyword">Grid</span>@<span class="keyword">Table</span>[<span class="keyword">Image</span>@<span class="keyword">Partition</span>[a[[<span class="keyword">Ordering</span>@b]]/<span class="number">2</span>^<span class="number">6</span>,<span class="number">2</span>^<span class="number">9</span>],&#123;a,f[6,3]&#125;,&#123;b,f[9,2]&#125;]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;继续搬运果壳网上的&lt;a href=&quot;https://www.guokr.com/post/669790/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;旧帖&lt;/a&gt;。部分代码有改动。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Wolfram 公司在 Twitter 上开了个帐号，叫 Tweet-a-Program (&lt;a href=&quot;https://twitter.com/wolframtap&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;@wolframtap&lt;/a&gt;)。你只要发一段 Mathematica 代码并@它，它就会自动把运行结果回复给你。由于 Twitter 的字数限制，这段 Mathematica 代码不能超过128字（现在 Twitter 的字数限制涨了，但 Tweet-a-Program 的字数限制还是不变）。&lt;/p&gt;
&lt;p&gt;我一般用它来画分形。&lt;/p&gt;
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="Mathematica" scheme="https://AlephAlpha.github.io/tags/Mathematica/"/>
    
      <category term="果壳搬运" scheme="https://AlephAlpha.github.io/tags/%E6%9E%9C%E5%A3%B3%E6%90%AC%E8%BF%90/"/>
    
  </entry>
  
  <entry>
    <title>Mathematica二三事</title>
    <link href="https://AlephAlpha.github.io/2017/11/28/Mathematica%E4%BA%8C%E4%B8%89%E4%BA%8B/"/>
    <id>https://AlephAlpha.github.io/2017/11/28/Mathematica二三事/</id>
    <published>2017-11-28T15:58:00.000Z</published>
    <updated>2019-03-13T04:35:21.737Z</updated>
    
    <content type="html"><![CDATA[<p>原发于<a href="https://www.guokr.com/post/650918/" target="_blank" rel="noopener">果壳网Matlab小组</a>。没错，是Matlab小组。</p><hr><p>这样一个标题出现在Matlab小组里是不是有点奇怪？<sup><a href="#fn_1" id="reffn_1">1</a></sup></p><a id="more"></a><hr><p>第一件事，还是在2011年，当时果壳网的小组还不多，死理性派小组的风气也还好。当时<a href="http://www.guokr.com/group/n/dwt" target="_blank" rel="noopener">@dwt</a> 发了个“表白函数”的帖子，引来大家的膜拜：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-76d9d53f1a0bd387.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="表白函数"></p><p>于是我把这帖子转到了百度贴吧，并照着图片把这段代码打了出来，不过没说明用的是什么软件。</p><p>帖子不久就沉了。然后过了几个月，迎来这么一个回帖：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-3b008f20e8541847.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="贴吧回帖"></p><hr><p>第二件事还是与果壳网有关。当时是2012年，知性社区<sup><a href="#fn_2" id="reffn_2">2</a></sup>还是果壳网的一个小组，叫做性情。当时有人发了一个帖子，帖子里用一个函数（数学上的函数，不是编程语言的函数）画了一个胸部的曲线。</p><p>我在回帖中将函数公式修改了一下，把曲线变成曲面，并贴出了Mathematica代码。当然，也没有说明用的是Mathematica，不过我当时用的号在果壳认证的头衔就是“Mathematica玩家”，于是在果壳里也没有引起误会。</p><p>然后果壳网将这个帖子的内容连着我的回复推到了微博上面：</p><p><img src="https://ww4.sinaimg.cn/mw690/6f0a84e5jw1dqguv30w5lj.jpg" alt="果壳微博"></p><p>我很高兴，然后在这条微博的评论和转发里看到了这样的内容：</p><ul><li>我去装Matlab了</li><li>回去到matlab里试试。。。</li><li>这个是用matlab画的。。。原来数学之美是介个意思。。</li><li>当初学matlab的时候，如果你拿这个作示范，我相信我会学得更认真点的</li><li>神马都敌不过数学之美！！！伟大的MATLAB！！！</li></ul><p>…………</p><hr><p>第三件事是在最近<sup><a href="#fn_3" id="reffn_3">3</a></sup>。在知乎，有人问了一个问题：如何用数学软件画一个“圣诞树”?</p><p>我刚好在codegolf.stackexchange.com上见过一个类似的问题，那里有个网友用Mathematica给了一个很漂亮的回答，于是把那个答案搬运了过来。总之画出来是这样的：</p><p><img src="https://i.stack.imgur.com/OGv5a.gif" alt="圣诞树"></p><p>这个答案在知乎里获得了50多个赞，还有20个收藏。其中有个收藏夹名字叫matlab。我想，大概他是懒得开一个Mathematica的收藏夹，就把这个答案跟一些与Matlab有关的答案放在一起吧。这样想着，我点开了那个收藏夹。</p><p>收藏夹里只有一个答案。</p><p>我发誓这次我是清清楚楚地写了“用的是Mathematica”的。</p><blockquote id="fn_1"><sup>1</sup>. 不，我没有要黑Matlab及其用户的意思。<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote><blockquote id="fn_2"><sup>2</sup>. 现在知性社区也没了。果壳网也差不多没了。<a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a></blockquote><blockquote id="fn_3"><sup>3</sup>. 2014年12月16日。<a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原发于&lt;a href=&quot;https://www.guokr.com/post/650918/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;果壳网Matlab小组&lt;/a&gt;。没错，是Matlab小组。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这样一个标题出现在Matlab小组里是不是有点奇怪？&lt;sup&gt;&lt;a href=&quot;#fn_1&quot; id=&quot;reffn_1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="Mathematica" scheme="https://AlephAlpha.github.io/tags/Mathematica/"/>
    
      <category term="果壳搬运" scheme="https://AlephAlpha.github.io/tags/%E6%9E%9C%E5%A3%B3%E6%90%AC%E8%BF%90/"/>
    
  </entry>
  
  <entry>
    <title>维基词典的图标</title>
    <link href="https://AlephAlpha.github.io/2017/11/28/%E7%BB%B4%E5%9F%BA%E8%AF%8D%E5%85%B8%E7%9A%84%E5%9B%BE%E6%A0%87/"/>
    <id>https://AlephAlpha.github.io/2017/11/28/维基词典的图标/</id>
    <published>2017-11-28T09:55:00.000Z</published>
    <updated>2019-03-13T05:15:37.609Z</updated>
    
    <content type="html"><![CDATA[<p>果壳网已完。也许第二天我的帖子就会消失。以防万一，我决定把我发过的一些帖子搬运到简书。也包括这么无聊的帖子。</p><p>这个帖子原发于<a href="https://www.guokr.com/post/743729/" target="_blank" rel="noopener">果壳网维基百科小组</a>。</p><hr><p>除了中文、英文的维基百科，我用的最多的一个维基旗下网站就英文维基词典。用得虽然多，平时并没有盯着图标看，因此并不知道图标是什么时候换的。</p><a id="more"></a><p>我刚接触维基词典的时候，英文维基词典的图标是这样的：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-d83ba4ac91280de3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="英文维基词典的老图标"></p><p>不过我觉得，在基本只有黑白两色的网页上配上一个彩色的图标，挺丑的。</p><p>很多别的语言的维基词典借用了这个图标。中文维基词典至今还在用一个与其类似的图标，不过把W字和维字换了一下位置：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-a5f4af9cb6027a0b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="中文维基词典的图标"></p><p>顺便吐槽一下乌克兰文的维基词典，这崩坏的“漢”字：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-795ff11721c4f832.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="乌克兰文维基词典的图标"></p><p>说回英文维基百科。后来，它换成了这么一个图标：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-2051219e0e66516c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="英文维基百科的另一个老图标"></p><p>这是我最喜欢的一个图标。不过我看了一下文件历史，它的上传时间比上一个图标还要早。可能是这两个图标轮换使用吧。</p><p>也有不少语言的维基词典参考了这一图标。由于语言不同，只能参考，不能照搬，于是做得各有特色。比如说这是俄语维基词典使用至今的图标：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-356c44e23431fa30.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="俄文维基词典的图标"></p><p>不过，图标里的注音也会引发一点争议，比如说wiktionary里的a该不该发音。英文维基词典的图标就有过这么一个提议，注意这里的国际音标中a的发音：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-71b2cc64b1b53fc2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="英文维基词典的图标提议"></p><p>俄语维基词典甚至为了修正国际音标而换过一次图标。</p><p>然后，不知什么时候，英文维基换成了现在的图标。它应该是基于第一个图标，但简洁了许多：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-03466702ae464a95.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="英文维基词典的图标"></p><p>我暂时还没有发现别的语言的维基百科采用这一图标。有趣的是，在维基共享资源的Wiktionary logos分类里也找不到这一图标。我暂时还没有发现别的语言的维基百科采用这一图标。有趣的是，在维基共享资源的<a href="https://commons.wikimedia.org/wiki/Category:Wiktionary_logos" target="_blank" rel="noopener">Wiktionary logos</a>分类里也找不到这一图标。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;果壳网已完。也许第二天我的帖子就会消失。以防万一，我决定把我发过的一些帖子搬运到简书。也包括这么无聊的帖子。&lt;/p&gt;
&lt;p&gt;这个帖子原发于&lt;a href=&quot;https://www.guokr.com/post/743729/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;果壳网维基百科小组&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;除了中文、英文的维基百科，我用的最多的一个维基旗下网站就英文维基词典。用得虽然多，平时并没有盯着图标看，因此并不知道图标是什么时候换的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="果壳搬运" scheme="https://AlephAlpha.github.io/tags/%E6%9E%9C%E5%A3%B3%E6%90%AC%E8%BF%90/"/>
    
      <category term="维基百科" scheme="https://AlephAlpha.github.io/tags/%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91/"/>
    
  </entry>
  
  <entry>
    <title>用 Mathematica 搜索生命游戏中的静物</title>
    <link href="https://AlephAlpha.github.io/2017/11/06/%E7%94%A8-Mathematica-%E6%90%9C%E7%B4%A2%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F%E4%B8%AD%E7%9A%84%E9%9D%99%E7%89%A9/"/>
    <id>https://AlephAlpha.github.io/2017/11/06/用-Mathematica-搜索生命游戏中的静物/</id>
    <published>2017-11-05T16:43:00.000Z</published>
    <updated>2019-03-13T04:36:06.189Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="/2018/05/13/用-Mathematica-搜索生命游戏中的静物（二）/" title="用 Mathematica 搜索生命游戏中的静物（二）">用 Mathematica 搜索生命游戏中的静物（二）</a></li><li><a href="/2019/03/04/用-Mathematica-搜索生命游戏中的静物（三）/" title="用 Mathematica 搜索生命游戏中的静物（三）">用 Mathematica 搜索生命游戏中的静物（三）</a></li></ul><hr><p>果壳网已死。临死前<a href="https://www.guokr.com/group/381/" target="_blank" rel="noopener">元胞自动机小组</a>还回光返照了一段时间——虽然真正活跃的人大概不超过五个。</p><p>以下的代码就算是我给果壳网以及元胞自动机小组烧的一点纸钱吧。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">a = Merge[</span><br><span class="line">   k[#[[;; <span class="number">2</span>]], </span><br><span class="line">       <span class="keyword">CellularAutomaton</span>[<span class="string">"GameOfLife"</span>, #][[<span class="number">2</span>, <span class="number">2</span>]]] -&gt; #[[<span class="number">3</span>]] &amp; /@ </span><br><span class="line">    <span class="keyword">Tuples</span>[<span class="keyword">Tuples</span>[&#123;0, 1&#125;, <span class="number">3</span>], <span class="number">3</span>], <span class="keyword">Identity</span>];</span><br><span class="line">g[x_, y_, z_] := </span><br><span class="line">  FindPath[<span class="keyword">Flatten</span>@</span><br><span class="line">     <span class="keyword">MapIndexed</span>[</span><br><span class="line">      <span class="keyword">Outer</span>[v[#<span class="number">2</span> - <span class="number">1</span>, <span class="keyword">Most</span>[#<span class="number">1</span>]] -&gt; v[#<span class="number">2</span>, <span class="keyword">Rest</span>[#<span class="number">1</span>]] &amp;, ##, <span class="number">1</span>] &amp;, </span><br><span class="line">      Lookup[a, </span><br><span class="line">       <span class="keyword">MapThread</span>[</span><br><span class="line">        k, &#123;First[</span><br><span class="line">          Partition[&#123;x, y&#125;, &#123;2, 3&#125;, &#123;2, 1&#125;, &#123;&#123;1, -2&#125;, &#123;-1, 2&#125;&#125;, <span class="number">0</span>]], </span><br><span class="line">         z&#125;], &#123;&#125;]], v[<span class="number">0</span>, &#123;0, 0&#125;], v[<span class="keyword">Length</span>[z], &#123;0, 0&#125;], <span class="keyword">Length</span>[z] + <span class="number">2</span>,</span><br><span class="line">     <span class="keyword">All</span>][[;; , <span class="number">2</span> ;;, <span class="number">2</span>, <span class="number">1</span>]];</span><br><span class="line"><span class="keyword">With</span>[&#123;w = 16, h = 16&#125;,</span><br><span class="line"> o = <span class="keyword">Table</span>[<span class="number">0</span>, w + <span class="number">2</span>];</span><br><span class="line"> i = g[o, o, o];</span><br><span class="line"> f[l : &#123;___, x_, y_&#125;] := </span><br><span class="line">  <span class="keyword">If</span>[<span class="keyword">Length</span>@l == h + <span class="number">2</span>, </span><br><span class="line">   <span class="keyword">If</span>[y == o &amp;&amp; <span class="keyword">MemberQ</span>[i, x], l, <span class="keyword">Missing</span>[<span class="string">"NotFound"</span>]], </span><br><span class="line">   <span class="keyword">Catch</span>[<span class="keyword">Do</span>[</span><br><span class="line">     <span class="keyword">If</span>[MissingQ[#], , <span class="keyword">Throw</span>[#]] &amp;[f[<span class="keyword">Append</span>[l, z]]], &#123;z, </span><br><span class="line">      RandomSample[g[x, y, y]]&#125;]; <span class="keyword">Missing</span>[<span class="string">"NotFound"</span>]]];</span><br><span class="line"> <span class="keyword">SparseArray</span>[f[&#123;o, RandomChoice[i]&#125;]]]</span><br></pre></td></tr></table></figure><a id="more"></a><p>返回的结果是一个<code>SparseArray</code>，可以用<code>ArrayPlot</code>来转换成图片。这是搜索16*16的静物。把<code>With[{w = 16, h = 16},</code>里的16换成别的数字可以搜索别的大小的静物，但不要把<code>w</code>改得太大。如果一次搜索的时间太久，可能是运气不好，可以用<code>Alt+.</code>来中断计算。</p><p>下面是5次搜索的结果：</p><div class="rle"><pre>x = 16, y = 16, rule = B3/S23ob2o2bob2o5bo$2ob4obobo2b3o$9bo2bo$5o5b2ob3o$o2bobob3o2bo2bo$5bobo3bo2bo$4bo3b2ob3o$o2bob3o2bo$4obo2bo2bob3o$5bo2b2ob2o2bo$3obo4bo4bo$o2b2obo2bob2ob2o$bo3b2o3bobo2bo$2b2o10bo$obob3o4b3o$2o4bo4bo!</pre><canvas width="480" height="480"></canvas></div><div class="rle"><pre>x = 16, y = 16, rule = B3/S23bo11bobo$b3o6bobob2o$4bobob3obo$b2obob2o4bo$o2bo5b2obobo$2o8bo2bobo$6bobo2bobobo$3bobob5ob2o$b3obo$o4b3obob4o$b4o3b3o4bo$3bo2bo5bo2bo$5b2ob7o$b4o3bo$bo3bobo3bob2o$4b2ob2o2b2obo!</pre><canvas width="480" height="480"></canvas></div><div class="rle"><pre>x = 16, y = 16, rule = B3/S232bobob2obobobo$bob2obob2ob2obo$bo4bo3bo3bo$2bob3o3bo3b2o$ob2o5b2obobo$2o3b2o4b2obo$3b2ob4o3bo$2obo5bob2o$2o3b2o2bobo$3bobobobobo$3obo2b2obob2o$o3bobo3bo3bo$4b2obobob2obo$2b2o3bobo3bo$bo2bob2o2bobo$2b2o5b2ob2o!</pre><canvas width="480" height="480"></canvas></div><div class="rle"><pre>x = 16, y = 16, rule = B3/S232b2obo4bo3b2o$bob2obob3o2bobo$o5b2o3b3o$b5o3b2o4bo$2bo2bob3o2b4o$o5bo4b2o$2o6b3o3b2o$bo4bobo2b2obo$bobo2b2o3bo2bo$2ob3o6bob2o$bo4b2o3b2o2bo$bob2obo5bobo$2o2bo3bobo3b2o$2bobo2b2ob2o2bo$2bobobo2bo2bobo$3b2ob2o3b2ob2o!</pre><canvas width="480" height="480"></canvas></div><div class="rle"><pre>x = 16, y = 16, rule = B3/S23bobo2bob2o2bobo$ob6ob5obo$o14bo$b4ob5ob3o$4b2o4bobo$obo4bo2bo2bobo$2ob8o3b2o$3bo$2obo2bo2b2o$bob4o3bo2bobo$o9bobob2o$3obo4b2obo$3b2o3bo4b3o$2o5bobob2o2bo$ob3o3b2obo2bo$4bo7b2o!</pre><canvas width="480" height="480"></canvas></div>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2018/05/13/用-Mathematica-搜索生命游戏中的静物（二）/&quot; title=&quot;用 Mathematica 搜索生命游戏中的静物（二）&quot;&gt;用 Mathematica 搜索生命游戏中的静物（二）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2019/03/04/用-Mathematica-搜索生命游戏中的静物（三）/&quot; title=&quot;用 Mathematica 搜索生命游戏中的静物（三）&quot;&gt;用 Mathematica 搜索生命游戏中的静物（三）&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;果壳网已死。临死前&lt;a href=&quot;https://www.guokr.com/group/381/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;元胞自动机小组&lt;/a&gt;还回光返照了一段时间——虽然真正活跃的人大概不超过五个。&lt;/p&gt;
&lt;p&gt;以下的代码就算是我给果壳网以及元胞自动机小组烧的一点纸钱吧。&lt;/p&gt;
&lt;figure class=&quot;highlight mathematica&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a = Merge[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   k[#[[;; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]], &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;CellularAutomaton&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&quot;GameOfLife&quot;&lt;/span&gt;, #][[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]]] -&amp;gt; #[[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]] &amp;amp; /@ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;Tuples&lt;/span&gt;[&lt;span class=&quot;keyword&quot;&gt;Tuples&lt;/span&gt;[&amp;#123;0, 1&amp;#125;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;], &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;], &lt;span class=&quot;keyword&quot;&gt;Identity&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;g[x_, y_, z_] := &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  FindPath[&lt;span class=&quot;keyword&quot;&gt;Flatten&lt;/span&gt;@&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;MapIndexed&lt;/span&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;Outer&lt;/span&gt;[v[#&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;Most&lt;/span&gt;[#&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]] -&amp;gt; v[#&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;Rest&lt;/span&gt;[#&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]] &amp;amp;, ##, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] &amp;amp;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Lookup[a, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;MapThread&lt;/span&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        k, &amp;#123;First[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          Partition[&amp;#123;x, y&amp;#125;, &amp;#123;2, 3&amp;#125;, &amp;#123;2, 1&amp;#125;, &amp;#123;&amp;#123;1, -2&amp;#125;, &amp;#123;-1, 2&amp;#125;&amp;#125;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]], &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         z&amp;#125;], &amp;#123;&amp;#125;]], v[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &amp;#123;0, 0&amp;#125;], v[&lt;span class=&quot;keyword&quot;&gt;Length&lt;/span&gt;[z], &amp;#123;0, 0&amp;#125;], &lt;span class=&quot;keyword&quot;&gt;Length&lt;/span&gt;[z] + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;All&lt;/span&gt;][[;; , &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; ;;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;With&lt;/span&gt;[&amp;#123;w = 16, h = 16&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; o = &lt;span class=&quot;keyword&quot;&gt;Table&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, w + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; i = g[o, o, o];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; f[l : &amp;#123;___, x_, y_&amp;#125;] := &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;If&lt;/span&gt;[&lt;span class=&quot;keyword&quot;&gt;Length&lt;/span&gt;@l == h + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;If&lt;/span&gt;[y == o &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;MemberQ&lt;/span&gt;[i, x], l, &lt;span class=&quot;keyword&quot;&gt;Missing&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&quot;NotFound&quot;&lt;/span&gt;]], &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;Catch&lt;/span&gt;[&lt;span class=&quot;keyword&quot;&gt;Do&lt;/span&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;If&lt;/span&gt;[MissingQ[#], , &lt;span class=&quot;keyword&quot;&gt;Throw&lt;/span&gt;[#]] &amp;amp;[f[&lt;span class=&quot;keyword&quot;&gt;Append&lt;/span&gt;[l, z]]], &amp;#123;z, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      RandomSample[g[x, y, y]]&amp;#125;]; &lt;span class=&quot;keyword&quot;&gt;Missing&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&quot;NotFound&quot;&lt;/span&gt;]]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;SparseArray&lt;/span&gt;[f[&amp;#123;o, RandomChoice[i]&amp;#125;]]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="Mathematica" scheme="https://AlephAlpha.github.io/tags/Mathematica/"/>
    
      <category term="生命游戏" scheme="https://AlephAlpha.github.io/tags/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>Catagolue 上的生命游戏搜索程序</title>
    <link href="https://AlephAlpha.github.io/2017/10/01/Catagolue-%E4%B8%8A%E7%9A%84%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F%E6%90%9C%E7%B4%A2%E7%A8%8B%E5%BA%8F/"/>
    <id>https://AlephAlpha.github.io/2017/10/01/Catagolue-上的生命游戏搜索程序/</id>
    <published>2017-10-01T10:39:00.000Z</published>
    <updated>2019-03-13T04:36:31.220Z</updated>
    
    <content type="html"><![CDATA[<p>注意：apgluxe 的原作者为 Catagolue 提供了另一个域名：gol.hatsya.co.uk。这个没有被墙。只需把原版的 apgluxe 中的 catagolue.appspot.com 换成 gol.hatsya.co.uk 就能正常工作了。原版的最新版也已经添加这个地址（如果访问不稳定，可以尝试在 ping 得通的时候记下 ip 地址，然后改 Host）。因此这里说离线版已经没有意义了。</p><hr><p>不久前，我发现了这个叫 <a href="http://catagolue.appspot.com/" target="_blank" rel="noopener">Catagolue</a> 的神奇的网站，收录的规则和图样比 LifeWiki 要全得多。</p><p>这里收录的图样都是用一个叫 apgsearch 的程序找出来的。apgsearch 的不同版本有不同的名字，最新的第4版叫 apgluxe。它的功能就是自己倒汤，煮汤，然后在汤的残骸中自动搜索有意义的图样，然后自动上传到 Catagolue 上。</p><a id="more"></a><p>不过，正是因为这最后一步，这个程序无法在中国大陆正常运行：Catagolue 用的是谷歌旗下某网站的域名，于是被墙了。而且有翻墙工具也没用，因为它用了个叫 HappyHTML 的东西，不支持代理！</p><p>无奈之下，我把它改了一下，去掉与上传有关的部分。我完全不懂 C++，只能胡乱修改，把看起来像是和联网有关的内容都删掉，好像能够正常编译，不能保证不会有错。</p><p>这是我修改后的离线版：<a href="https://github.com/AlephAlpha/apgluxe_offline" target="_blank" rel="noopener">https://github.com/AlephAlpha/apgluxe_offline</a></p><p>这个程序（无论是原版还是我修改后的离线版）是写给64位的 Unix 系统的，32位的操作系统没法使用。在64位的 Windows 上要用的话好像要先装个 <a href="http://cygwin.com/" target="_blank" rel="noopener">Cygwin</a>。反正我不用 Windows。</p><p>下载这个程序时可以用<code>git clone</code>，也可以直接下载 ZIP 压缩包。在下载好之后，要编译程序，在终端里 <code>cd</code> 到这个目录里，然后运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./recompile.sh</span><br></pre></td></tr></table></figure><p>即可。</p><p>要运行程序的话，在同一个目录里，运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./apgluxe -n 1000000</span><br></pre></td></tr></table></figure><p>这里的1000000是每一轮倒的汤的数量，可以换成你喜欢的任何数字。每倒完一轮，会生成一个统计结果，保存在一个类似于 <code>log.一串类似于乱码的东西.txt</code> 的文件当中（图样用的是 <a href="http://conwaylife.com/wiki/Apgcode" target="_blank" rel="noopener">apgcode</a> 格式，我不知道怎样转成 rle 或者别的 Golly 能读的格式），然后自动开始下一轮。什么时候不想玩了，按 Ctrl+C 可以退出。也可以不加 <code>-n 1000000</code> 这个参数，这样默认每轮会煮20000000锅汤（我觉得这个数字有点太大了）。如果 CPU 是多核的，还可以加 <code>-p 4</code> 这样的参数来并行运算，这个4表示4个线程。</p><p>运行时如果找到线性增长的图样（一般是 <a href="http://conwaylife.com/wiki/Block-laying_switch_engine" target="_blank" rel="noopener">Block-laying switch engine</a> 或者 <a href="http://conwaylife.com/wiki/Glider-producing_switch_engine" target="_blank" rel="noopener">Glider-producing switch engine</a>），或者罕见的周期大于2的振荡子，它会直接告诉你。刚才试了一轮，煮到将近第九十万锅汤的时候找到一个 <a href="https://catagolue.appspot.com/object?apgcode=xp30_w33z8kqrqk8zzzw33&amp;rule=b3s23" target="_blank" rel="noopener">xp30_w33z8kqrqk8zzzw33</a>，在 Catagolue 上查了一下是个<a href="http://conwaylife.com/wiki/Queen_bee_shuttle" target="_blank" rel="noopener">蜂王梭</a>，运气不错。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;注意：apgluxe 的原作者为 Catagolue 提供了另一个域名：gol.hatsya.co.uk。这个没有被墙。只需把原版的 apgluxe 中的 catagolue.appspot.com 换成 gol.hatsya.co.uk 就能正常工作了。原版的最新版也已经添加这个地址（如果访问不稳定，可以尝试在 ping 得通的时候记下 ip 地址，然后改 Host）。因此这里说离线版已经没有意义了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;不久前，我发现了这个叫 &lt;a href=&quot;http://catagolue.appspot.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Catagolue&lt;/a&gt; 的神奇的网站，收录的规则和图样比 LifeWiki 要全得多。&lt;/p&gt;
&lt;p&gt;这里收录的图样都是用一个叫 apgsearch 的程序找出来的。apgsearch 的不同版本有不同的名字，最新的第4版叫 apgluxe。它的功能就是自己倒汤，煮汤，然后在汤的残骸中自动搜索有意义的图样，然后自动上传到 Catagolue 上。&lt;/p&gt;
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="生命游戏" scheme="https://AlephAlpha.github.io/tags/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>汤，以及生命游戏里的稀有掉落</title>
    <link href="https://AlephAlpha.github.io/2017/10/01/%E6%B1%A4%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F%E9%87%8C%E7%9A%84%E7%A8%80%E6%9C%89%E6%8E%89%E8%90%BD/"/>
    <id>https://AlephAlpha.github.io/2017/10/01/汤，以及生命游戏里的稀有掉落/</id>
    <published>2017-10-01T10:33:00.000Z</published>
    <updated>2019-03-13T04:39:26.523Z</updated>
    
    <content type="html"><![CDATA[<p>原发表在<a href="https://www.15yan.com/story/furLzvV7nsn/" target="_blank" rel="noopener">十五言</a></p><hr><p><a href="http://www.conwaylife.com/wiki/Soup" target="_blank" rel="noopener"><strong>汤</strong></a>，英文叫 soup，或者 broth，在生命游戏里指的是随机的初始状态。</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-8a810620486502b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="这是一锅512*512的汤"></p><p>很多人刚接触生命游戏的时候，第一种玩法就是倒上一锅汤，然后开始游戏，看着这些方块变来变去，直到整个局面稳定下来为止。</p><a id="more"></a><p>稳定下来之后，游戏的画面一般不再有大的变化，只散落着一些静止不动的小部件，叫做静物（<a href="http://www.conwaylife.com/wiki/Still_life" target="_blank" rel="noopener">still life</a>）；以及一些周期性地动来动去的小东西，叫做振荡子（<a href="http://www.conwaylife.com/wiki/Oscillator" target="_blank" rel="noopener">oscillator</a>）。就像这样：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-e4ee91d3c450d6e6.gif?imageMogr2/auto-orient/strip" alt="上面那锅汤稳定下来的结果"></p><p>对很多人来说，游戏到了这里就结束了，然后就是关掉游戏或者再来一局。</p><p>不过，既然是游戏，为什么不观察一下，看看自己刷出了什么稀有掉落呢？</p><p>怎样才算稀有掉落？</p><p>Achim Flammenkamp 在2048*2048的环面上，以密度为0.375的汤为初始条件，进行了1829196场游戏，统计出了稳定下来之后最常见的100种物体。</p><p>常见的物体还有自己的名字，比如说，排名前十的如下（没有统一的中文翻译，这里给的只是我个人的翻译；图片均来自 <a href="http://www.conwaylife.com/wiki/Main_Page" target="_blank" rel="noopener">LifeWiki</a>）：</p><p>一、闪闪 <a href="http://www.conwaylife.com/wiki/Blinker" target="_blank" rel="noopener">Blinker</a></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-3afaa467f581912d.gif?imageMogr2/auto-orient/strip" alt="闪闪"></p><p>二、方块 <a href="http://www.conwaylife.com/wiki/Block" target="_blank" rel="noopener">Block</a></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-50a66491d8acfe2b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="方块"></p><p>三、蜂巢 <a href="http://www.conwaylife.com/wiki/Beehive" target="_blank" rel="noopener">Beehive﻿</a></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-7cad31dfc7ecfc3d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="蜂巢"></p><p>四、面包 <a href="http://www.conwaylife.com/wiki/Loaf" target="_blank" rel="noopener">Loaf</a></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-430abee8cdc04008.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="面包"></p><p>五、小船 <a href="http://www.conwaylife.com/wiki/Boat" target="_blank" rel="noopener">Boat</a></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-e477d35c678992dc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="小船"></p><p>六、澡盆 <a href="http://www.conwaylife.com/wiki/Tub" target="_blank" rel="noopener">Tub</a></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-18f777f793e1b618.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="澡盆"></p><p>七、池塘 <a href="http://www.conwaylife.com/wiki/Pond" target="_blank" rel="noopener">Pond</a></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-58e3847036f091ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="池塘"></p><p>八、大船 <a href="http://www.conwaylife.com/wiki/Ship" target="_blank" rel="noopener">Ship</a></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-7e6feab603cc30d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="大船"></p><p>九、长船 <a href="http://www.conwaylife.com/wiki/Long_boat" target="_blank" rel="noopener">Long boat</a></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-f2934ad975d2fed7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="长船"></p><p>十、蛤 <a href="http://www.conwaylife.com/wiki/Toad" target="_blank" rel="noopener">Toad</a></p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-69099edb52b0578c.gif?imageMogr2/auto-orient/strip" alt="蛤"></p><p>完整排名见<a href="http://wwwhomes.uni-bielefeld.de/achim/freq_top_life.html" target="_blank" rel="noopener">这里</a>。表中排名靠后的，或者表上没有的，绝对算是稀有掉落了。</p><p>在上面那幅图中，我刷出来的最罕见的物品，大概是左上角的一个脉冲星（<a href="http://www.conwaylife.com/wiki/CP_pulsar" target="_blank" rel="noopener">CP pulsar</a>）。它是一个周期为3的振荡子，个头很大，特别醒目。在表上排行19，算不上太稀有，不过是前100个物体中个头最大的，也是最常见的周期大于2的振荡子：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-7f63f8937a2cc9f9.gif?imageMogr2/auto-orient/strip" alt="脉冲星"></p><p>表中的100种物体绝大多数都是静物，振荡子只占了8个。脉冲星在振荡子中排第四，仅次于闪闪、蛤和信标（<a href="http://www.conwaylife.com/wiki/Beacon" target="_blank" rel="noopener">Beacon</a>）。</p><p>同一个网页中的另一个表格则列出了最常见的——确切地说，在整个实验中出现了两次或以上的——振荡子。除了排名靠前的几种之外，其余的都特别少见。</p><p>能出现在表格中的振荡子大部分周期都比较短，只有2或者3。但也有个别周期比较长的。其中周期最长的是下图中的蜂王梭（<a href="http:///www.conwaylife.com/wiki/Queen_bee_shuttle" target="_blank" rel="noopener">Queen bee shuttle</a>）：</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-d56257fec840fc0d.gif?imageMogr2/auto-orient/strip" alt="蜂王梭"></p><p>蜂王梭在生命游戏中是一个非常重要的物体，很多有意思的物体都是以它为基础造出来的，比如说下图中的 Gosper 滑翔机枪（<a href="http:A//www.conwaylife.com/wiki/Gosper_glider_gun" target="_blank" rel="noopener">Gosper glider gun</a>）。不过根据 Achim Flammenkamp 的统计，蜂王梭的出现率低于一亿分之一，除非是用专门的搜索程序，不然是不太可能看到了。</p><p><img src="http://upload-images.jianshu.io/upload_images/1770625-fe80e5ee9d308810.gif?imageMogr2/auto-orient/strip" alt="Gosper 滑翔机枪"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原发表在&lt;a href=&quot;https://www.15yan.com/story/furLzvV7nsn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;十五言&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://www.conwaylife.com/wiki/Soup&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;汤&lt;/strong&gt;&lt;/a&gt;，英文叫 soup，或者 broth，在生命游戏里指的是随机的初始状态。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1770625-8a810620486502b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;这是一锅512*512的汤&quot;&gt;&lt;/p&gt;
&lt;p&gt;很多人刚接触生命游戏的时候，第一种玩法就是倒上一锅汤，然后开始游戏，看着这些方块变来变去，直到整个局面稳定下来为止。&lt;/p&gt;
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="生命游戏" scheme="https://AlephAlpha.github.io/tags/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>毛利语中化学元素的名称</title>
    <link href="https://AlephAlpha.github.io/2017/04/23/%E6%AF%9B%E5%88%A9%E8%AF%AD%E4%B8%AD%E5%8C%96%E5%AD%A6%E5%85%83%E7%B4%A0%E7%9A%84%E5%90%8D%E7%A7%B0/"/>
    <id>https://AlephAlpha.github.io/2017/04/23/毛利语中化学元素的名称/</id>
    <published>2017-04-23T09:05:00.000Z</published>
    <updated>2019-03-13T04:39:43.959Z</updated>
    
    <content type="html"><![CDATA[<p>原发于果壳 <a href="http://www.guokr.com/post/695992/" target="_blank" rel="noopener">Today I Learned 小组</a>。</p><hr><p>毛利语是新西兰原住民毛利人的语言，属于南岛语系马来-波利尼西亚语族。</p><p>大部分语言里化学元素的名称，除了金银铜铁等少数几个元素，都是借自拉丁语或者英语。毛利语是个例外，他们用的是自己造的新词。</p><p>这些新词大多是由现有的词拼成的复合词，而且造词的办法有点像中国化学家造的那批汉字：气体元素都有hau（气体）这个前缀，而金属元素用的是konu（金属）这个前缀。</p><p>不过非气体的非金属元素没有统一的前缀。其中一些用的是pū——毛利语中“元素”一词（pūmotu）的第一个音节。比较特别的是碘：hautawa，直译为“紫气”。碘在常温下是固体，但容易升华成紫色气体。</p><a id="more"></a><p>下面是毛利语中前面二十个元素的名称及其含义：</p><div class="table-container"><table><thead><tr><th style="text-align:center">汉语</th><th style="text-align:center">元素符号</th><th style="text-align:center">毛利语</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">氢</td><td style="text-align:center">H</td><td style="text-align:center">hauwai</td><td style="text-align:center">hau 气 + wai 水</td></tr><tr><td style="text-align:center">氦</td><td style="text-align:center">He</td><td style="text-align:center">haumāmā</td><td style="text-align:center">hau 气 + māmā 轻</td></tr><tr><td style="text-align:center">锂</td><td style="text-align:center">Li</td><td style="text-align:center">konukōhatu</td><td style="text-align:center">konu 金属 + kōhatu 石</td></tr><tr><td style="text-align:center">铍</td><td style="text-align:center">Be</td><td style="text-align:center">konuuku</td><td style="text-align:center">konu 金属 + uku 黏土</td></tr><tr><td style="text-align:center">硼</td><td style="text-align:center">B</td><td style="text-align:center">pūtiwha</td><td style="text-align:center">pū[pūmotu] 元素 + tiwha 闪光</td></tr><tr><td style="text-align:center">碳</td><td style="text-align:center">C</td><td style="text-align:center">waro</td><td style="text-align:center">煤；炭</td></tr><tr><td style="text-align:center">氮</td><td style="text-align:center">N</td><td style="text-align:center">hauota</td><td style="text-align:center">hau 气 + ota 植物</td></tr><tr><td style="text-align:center">氧</td><td style="text-align:center">O</td><td style="text-align:center">hāora</td><td style="text-align:center">hā 呼吸 + ora 活着</td></tr><tr><td style="text-align:center">氟</td><td style="text-align:center">F</td><td style="text-align:center">haukōwhai</td><td style="text-align:center">hau 气 + kōwhai 黄</td></tr><tr><td style="text-align:center">氖</td><td style="text-align:center">Ne</td><td style="text-align:center">haukura</td><td style="text-align:center">hau 气 + kura 红</td></tr><tr><td style="text-align:center">钠</td><td style="text-align:center">Na</td><td style="text-align:center">konutai</td><td style="text-align:center">konu 金属 + tai 海</td></tr><tr><td style="text-align:center">镁</td><td style="text-align:center">Mg</td><td style="text-align:center">konupora</td><td style="text-align:center">konu 金属 + pora 一种白色石头</td></tr><tr><td style="text-align:center">铝</td><td style="text-align:center">Al</td><td style="text-align:center">konumohe</td><td style="text-align:center">konu 金属 + mohe 软</td></tr><tr><td style="text-align:center">硅</td><td style="text-align:center">Si</td><td style="text-align:center">takawai</td><td style="text-align:center">石英</td></tr><tr><td style="text-align:center">磷</td><td style="text-align:center">P</td><td style="text-align:center">pūtūtaewhetū</td><td style="text-align:center">磷光物质（？）</td></tr><tr><td style="text-align:center">硫</td><td style="text-align:center">S</td><td style="text-align:center">pungatara</td><td style="text-align:center">自然硫</td></tr><tr><td style="text-align:center">氯</td><td style="text-align:center">Cl</td><td style="text-align:center">haumāota</td><td style="text-align:center">hau 气 + māota 绿</td></tr><tr><td style="text-align:center">氩</td><td style="text-align:center">Ar</td><td style="text-align:center">hauhauhā</td><td style="text-align:center">hau 气 + hauhā 二氧化碳</td></tr><tr><td style="text-align:center">钾</td><td style="text-align:center">K</td><td style="text-align:center">konurehu</td><td style="text-align:center">konu 金属 + rehu 尘；雾</td></tr><tr><td style="text-align:center">钙</td><td style="text-align:center">Ca</td><td style="text-align:center">konupūmā</td><td style="text-align:center">konu 金属 + pūmā 灰白色</td></tr></tbody></table></div><p>参考资料：</p><ul><li><a href="https://mi.wikipedia.org/wiki/Ripanga_p%C5%ABmotu" target="_blank" rel="noopener">https://mi.wikipedia.org/wiki/Ripanga_p%C5%ABmotu</a></li><li><a href="http://putaiao.tki.org.nz/Papakupu-Putaiao/Nga-Kupu-Maori" target="_blank" rel="noopener">http://putaiao.tki.org.nz/Papakupu-Putaiao/Nga-Kupu-Maori</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原发于果壳 &lt;a href=&quot;http://www.guokr.com/post/695992/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Today I Learned 小组&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;毛利语是新西兰原住民毛利人的语言，属于南岛语系马来-波利尼西亚语族。&lt;/p&gt;
&lt;p&gt;大部分语言里化学元素的名称，除了金银铜铁等少数几个元素，都是借自拉丁语或者英语。毛利语是个例外，他们用的是自己造的新词。&lt;/p&gt;
&lt;p&gt;这些新词大多是由现有的词拼成的复合词，而且造词的办法有点像中国化学家造的那批汉字：气体元素都有hau（气体）这个前缀，而金属元素用的是konu（金属）这个前缀。&lt;/p&gt;
&lt;p&gt;不过非气体的非金属元素没有统一的前缀。其中一些用的是pū——毛利语中“元素”一词（pūmotu）的第一个音节。比较特别的是碘：hautawa，直译为“紫气”。碘在常温下是固体，但容易升华成紫色气体。&lt;/p&gt;
    
    </summary>
    
    
      <category term="简书搬运" scheme="https://AlephAlpha.github.io/tags/%E7%AE%80%E4%B9%A6%E6%90%AC%E8%BF%90/"/>
    
      <category term="果壳搬运" scheme="https://AlephAlpha.github.io/tags/%E6%9E%9C%E5%A3%B3%E6%90%AC%E8%BF%90/"/>
    
  </entry>
  
</feed>
